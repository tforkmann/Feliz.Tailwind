{"version":3,"file":"app.b5676a347d1912a84e89.js","mappings":"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","sources":["webpack:///./.fable-build/fable_modules/fable-library.3.7.18/Util.js","webpack:///./.fable-build/fable_modules/fable-library.3.7.18/Types.js","webpack:///./.fable-build/fable_modules/fable-library.3.7.18/Date.js","webpack:///./.fable-build/fable_modules/fable-library.3.7.18/Numeric.js","webpack:///./.fable-build/fable_modules/fable-library.3.7.18/RegExp.js","webpack:///./.fable-build/fable_modules/fable-library.3.7.18/String.js","webpack:///./.fable-build/fable_modules/fable-library.3.7.18/Option.js","webpack:///./.fable-build/fable_modules/fable-library.3.7.18/List.js","webpack:///./.fable-build/fable_modules/Fable.Elmish.3.1.0/cmd.fs.js","webpack:///./.fable-build/fable_modules/fable-library.3.7.18/Array.js","webpack:///./.fable-build/fable_modules/fable-library.3.7.18/Seq.js","webpack:///./.fable-build/fable_modules/fable-library.3.7.18/FSharp.Core.js","webpack:///./.fable-build/fable_modules/fable-library.3.7.18/Range.js","webpack:///./.fable-build/fable_modules/Fable.Elmish.3.1.0/ring.fs.js","webpack:///./.fable-build/fable_modules/Fable.Elmish.3.1.0/program.fs.js","webpack:///./.fable-build/fable_modules/Fable.Elmish.React.3.0.1/common.fs.js","webpack:///./.fable-build/fable_modules/Feliz.1.68.0/Interop.fs.js","webpack:///./.fable-build/fable_modules/Feliz.1.68.0/React.fs.js","webpack:///./.fable-build/fable_modules/Feliz.1.68.0/ReactInterop.js","webpack:///./.fable-build/fable_modules/Feliz.UseListener.0.6.3/Listener.fs.js","webpack:///./.fable-build/fable_modules/Feliz.Router.3.8.0/Router.fs.js","webpack:///./.fable-build/Router.js","webpack:///./.fable-build/fable_modules/Feliz.DaisyUI.2.1.0/DaisyUI.fs.js","webpack:///./.fable-build/SharedView.js","webpack:///./.fable-build/Pages/Use.js","webpack:///./.fable-build/fable_modules/Feliz.Tailwind.2.1.5/Tailwind.fs.js","webpack:///./.fable-build/Pages/BorderRadius.js","webpack:///./.fable-build/Pages/Install.js","webpack:///./.fable-build/View.js","webpack:///./.fable-build/fable_modules/Feliz.DaisyUI.2.1.0/Operators.fs.js","webpack:///./.fable-build/fable_modules/Fable.Elmish.React.3.0.1/react.fs.js","webpack:///./.fable-build/App.js","webpack:///./.fable-build/fable_modules/Fable.Elmish.3.1.0/prelude.fs.js"],"sourcesContent":["// tslint:disable:ban-types\nexport function isIterable(x) {\n    return x != null && typeof x === \"object\" && Symbol.iterator in x;\n}\nexport function isArrayLike(x) {\n    return Array.isArray(x) || ArrayBuffer.isView(x);\n}\nfunction isComparer(x) {\n    return typeof x.Compare === \"function\";\n}\nfunction isComparable(x) {\n    return typeof x.CompareTo === \"function\";\n}\nfunction isEquatable(x) {\n    return typeof x.Equals === \"function\";\n}\nfunction isHashable(x) {\n    return typeof x.GetHashCode === \"function\";\n}\nexport function isDisposable(x) {\n    return x != null && typeof x.Dispose === \"function\";\n}\nexport function disposeSafe(x) {\n    if (isDisposable(x)) {\n        x.Dispose();\n    }\n}\nexport function sameConstructor(x, y) {\n    var _a, _b;\n    return ((_a = Object.getPrototypeOf(x)) === null || _a === void 0 ? void 0 : _a.constructor) === ((_b = Object.getPrototypeOf(y)) === null || _b === void 0 ? void 0 : _b.constructor);\n}\nexport class Enumerator {\n    constructor(iter) {\n        this.iter = iter;\n    }\n    [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\n        return this.current;\n    }\n    [\"System.Collections.IEnumerator.get_Current\"]() {\n        return this.current;\n    }\n    [\"System.Collections.IEnumerator.MoveNext\"]() {\n        const cur = this.iter.next();\n        this.current = cur.value;\n        return !cur.done;\n    }\n    [\"System.Collections.IEnumerator.Reset\"]() {\n        throw new Error(\"JS iterators cannot be reset\");\n    }\n    Dispose() {\n        return;\n    }\n}\nexport function getEnumerator(o) {\n    return typeof o.GetEnumerator === \"function\"\n        ? o.GetEnumerator()\n        : new Enumerator(o[Symbol.iterator]());\n}\nexport function toIterator(en) {\n    return {\n        [Symbol.iterator]() { return this; },\n        next() {\n            const hasNext = en[\"System.Collections.IEnumerator.MoveNext\"]();\n            const current = hasNext ? en[\"System.Collections.IEnumerator.get_Current\"]() : undefined;\n            return { done: !hasNext, value: current };\n        },\n    };\n}\nexport class Comparer {\n    constructor(f) {\n        this.Compare = f || compare;\n    }\n}\nexport function comparerFromEqualityComparer(comparer) {\n    // Sometimes IEqualityComparer also implements IComparer\n    if (isComparer(comparer)) {\n        return new Comparer(comparer.Compare);\n    }\n    else {\n        return new Comparer((x, y) => {\n            const xhash = comparer.GetHashCode(x);\n            const yhash = comparer.GetHashCode(y);\n            if (xhash === yhash) {\n                return comparer.Equals(x, y) ? 0 : -1;\n            }\n            else {\n                return xhash < yhash ? -1 : 1;\n            }\n        });\n    }\n}\nexport function assertEqual(actual, expected, msg) {\n    if (!equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport function assertNotEqual(actual, expected, msg) {\n    if (equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport class Lazy {\n    constructor(factory) {\n        this.factory = factory;\n        this.isValueCreated = false;\n    }\n    get Value() {\n        if (!this.isValueCreated) {\n            this.createdValue = this.factory();\n            this.isValueCreated = true;\n        }\n        return this.createdValue;\n    }\n    get IsValueCreated() {\n        return this.isValueCreated;\n    }\n}\nexport function lazyFromValue(v) {\n    return new Lazy(() => v);\n}\nexport function padWithZeros(i, length) {\n    let str = i.toString(10);\n    while (str.length < length) {\n        str = \"0\" + str;\n    }\n    return str;\n}\nexport function padLeftAndRightWithZeros(i, lengthLeft, lengthRight) {\n    let str = i.toString(10);\n    while (str.length < lengthLeft) {\n        str = \"0\" + str;\n    }\n    while (str.length < lengthRight) {\n        str = str + \"0\";\n    }\n    return str;\n}\nexport function dateOffset(date) {\n    const date1 = date;\n    return typeof date1.offset === \"number\"\n        ? date1.offset\n        : (date.kind === 1 /* UTC */\n            ? 0 : date.getTimezoneOffset() * -60000);\n}\nexport function int16ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nexport function int32ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFFFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nexport class ObjectRef {\n    static id(o) {\n        if (!ObjectRef.idMap.has(o)) {\n            ObjectRef.idMap.set(o, ++ObjectRef.count);\n        }\n        return ObjectRef.idMap.get(o);\n    }\n}\nObjectRef.idMap = new WeakMap();\nObjectRef.count = 0;\nexport function stringHash(s) {\n    let i = 0;\n    let h = 5381;\n    const len = s.length;\n    while (i < len) {\n        h = (h * 33) ^ s.charCodeAt(i++);\n    }\n    return h;\n}\nexport function numberHash(x) {\n    return x * 2654435761 | 0;\n}\n// From https://stackoverflow.com/a/37449594\nexport function combineHashCodes(hashes) {\n    if (hashes.length === 0) {\n        return 0;\n    }\n    return hashes.reduce((h1, h2) => {\n        return ((h1 << 5) + h1) ^ h2;\n    });\n}\nexport function physicalHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default:\n            return numberHash(ObjectRef.id(x));\n    }\n}\nexport function identityHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    else if (isHashable(x)) {\n        return x.GetHashCode();\n    }\n    else {\n        return physicalHash(x);\n    }\n}\nexport function dateHash(x) {\n    return x.getTime();\n}\nexport function arrayHash(x) {\n    const len = x.length;\n    const hashes = new Array(len);\n    for (let i = 0; i < len; i++) {\n        hashes[i] = structuralHash(x[i]);\n    }\n    return combineHashCodes(hashes);\n}\nexport function structuralHash(x) {\n    var _a;\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default: {\n            if (isHashable(x)) {\n                return x.GetHashCode();\n            }\n            else if (isArrayLike(x)) {\n                return arrayHash(x);\n            }\n            else if (x instanceof Date) {\n                return dateHash(x);\n            }\n            else if (((_a = Object.getPrototypeOf(x)) === null || _a === void 0 ? void 0 : _a.constructor) === Object) {\n                // TODO: check call-stack to prevent cyclic objects?\n                const hashes = Object.values(x).map((v) => structuralHash(v));\n                return combineHashCodes(hashes);\n            }\n            else {\n                // Classes don't implement GetHashCode by default, but must use identity hashing\n                return numberHash(ObjectRef.id(x));\n                // return stringHash(String(x));\n            }\n        }\n    }\n}\n// Intended for custom numeric types, like long or decimal\nexport function fastStructuralHash(x) {\n    return stringHash(String(x));\n}\n// Intended for declared types that may or may not implement GetHashCode\nexport function safeHash(x) {\n    return x == null ? 0 : isHashable(x) ? x.GetHashCode() : numberHash(ObjectRef.id(x));\n}\nexport function equalArraysWith(x, y, eq) {\n    if (x == null) {\n        return y == null;\n    }\n    if (y == null) {\n        return false;\n    }\n    if (x.length !== y.length) {\n        return false;\n    }\n    for (let i = 0; i < x.length; i++) {\n        if (!eq(x[i], y[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equalArrays(x, y) {\n    return equalArraysWith(x, y, equals);\n}\nfunction equalObjects(x, y) {\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    if (xKeys.length !== yKeys.length) {\n        return false;\n    }\n    xKeys.sort();\n    yKeys.sort();\n    for (let i = 0; i < xKeys.length; i++) {\n        if (xKeys[i] !== yKeys[i] || !equals(x[xKeys[i]], y[yKeys[i]])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equals(x, y) {\n    var _a;\n    if (x === y) {\n        return true;\n    }\n    else if (x == null) {\n        return y == null;\n    }\n    else if (y == null) {\n        return false;\n    }\n    else if (typeof x !== \"object\") {\n        return false;\n    }\n    else if (isEquatable(x)) {\n        return x.Equals(y);\n    }\n    else if (isArrayLike(x)) {\n        return isArrayLike(y) && equalArrays(x, y);\n    }\n    else if (x instanceof Date) {\n        return (y instanceof Date) && compareDates(x, y) === 0;\n    }\n    else {\n        return ((_a = Object.getPrototypeOf(x)) === null || _a === void 0 ? void 0 : _a.constructor) === Object && equalObjects(x, y);\n    }\n}\nexport function compareDates(x, y) {\n    let xtime;\n    let ytime;\n    // DateTimeOffset and DateTime deals with equality differently.\n    if (\"offset\" in x && \"offset\" in y) {\n        xtime = x.getTime();\n        ytime = y.getTime();\n    }\n    else {\n        xtime = x.getTime() + dateOffset(x);\n        ytime = y.getTime() + dateOffset(y);\n    }\n    return xtime === ytime ? 0 : (xtime < ytime ? -1 : 1);\n}\nexport function comparePrimitives(x, y) {\n    return x === y ? 0 : (x < y ? -1 : 1);\n}\nexport function compareArraysWith(x, y, comp) {\n    if (x == null) {\n        return y == null ? 0 : 1;\n    }\n    if (y == null) {\n        return -1;\n    }\n    if (x.length !== y.length) {\n        return x.length < y.length ? -1 : 1;\n    }\n    for (let i = 0, j = 0; i < x.length; i++) {\n        j = comp(x[i], y[i]);\n        if (j !== 0) {\n            return j;\n        }\n    }\n    return 0;\n}\nexport function compareArrays(x, y) {\n    return compareArraysWith(x, y, compare);\n}\nfunction compareObjects(x, y) {\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    if (xKeys.length !== yKeys.length) {\n        return xKeys.length < yKeys.length ? -1 : 1;\n    }\n    xKeys.sort();\n    yKeys.sort();\n    for (let i = 0, j = 0; i < xKeys.length; i++) {\n        const key = xKeys[i];\n        if (key !== yKeys[i]) {\n            return key < yKeys[i] ? -1 : 1;\n        }\n        else {\n            j = compare(x[key], y[key]);\n            if (j !== 0) {\n                return j;\n            }\n        }\n    }\n    return 0;\n}\nexport function compare(x, y) {\n    var _a;\n    if (x === y) {\n        return 0;\n    }\n    else if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    else if (y == null) {\n        return 1;\n    }\n    else if (typeof x !== \"object\") {\n        return x < y ? -1 : 1;\n    }\n    else if (isComparable(x)) {\n        return x.CompareTo(y);\n    }\n    else if (isArrayLike(x)) {\n        return isArrayLike(y) ? compareArrays(x, y) : -1;\n    }\n    else if (x instanceof Date) {\n        return y instanceof Date ? compareDates(x, y) : -1;\n    }\n    else {\n        return ((_a = Object.getPrototypeOf(x)) === null || _a === void 0 ? void 0 : _a.constructor) === Object ? compareObjects(x, y) : -1;\n    }\n}\nexport function min(comparer, x, y) {\n    return comparer(x, y) < 0 ? x : y;\n}\nexport function max(comparer, x, y) {\n    return comparer(x, y) > 0 ? x : y;\n}\nexport function clamp(comparer, value, min, max) {\n    return (comparer(value, min) < 0) ? min : (comparer(value, max) > 0) ? max : value;\n}\nexport function createAtom(value) {\n    let atom = value;\n    return (value, isSetter) => {\n        if (!isSetter) {\n            return atom;\n        }\n        else {\n            atom = value;\n            return void 0;\n        }\n    };\n}\nexport function createObj(fields) {\n    const obj = {};\n    for (const kv of fields) {\n        obj[kv[0]] = kv[1];\n    }\n    return obj;\n}\nexport function jsOptions(mutator) {\n    const opts = {};\n    mutator(opts);\n    return opts;\n}\nexport function round(value, digits = 0) {\n    const m = Math.pow(10, digits);\n    const n = +(digits ? value * m : value).toFixed(8);\n    const i = Math.floor(n);\n    const f = n - i;\n    const e = 1e-8;\n    const r = (f > 0.5 - e && f < 0.5 + e) ? ((i % 2 === 0) ? i : i + 1) : Math.round(n);\n    return digits ? r / m : r;\n}\nexport function sign(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n}\nexport function unescapeDataString(s) {\n    // https://stackoverflow.com/a/4458580/524236\n    return decodeURIComponent((s).replace(/\\+/g, \"%20\"));\n}\nexport function escapeDataString(s) {\n    return encodeURIComponent(s).replace(/!/g, \"%21\")\n        .replace(/'/g, \"%27\")\n        .replace(/\\(/g, \"%28\")\n        .replace(/\\)/g, \"%29\")\n        .replace(/\\*/g, \"%2A\");\n}\nexport function escapeUriString(s) {\n    return encodeURI(s);\n}\n// ICollection.Clear and Count members can be called on Arrays\n// or Dictionaries so we need a runtime check (see #1120)\nexport function count(col) {\n    if (isArrayLike(col)) {\n        return col.length;\n    }\n    else {\n        let count = 0;\n        for (const _ of col) {\n            count++;\n        }\n        return count;\n    }\n}\nexport function clear(col) {\n    if (isArrayLike(col)) {\n        col.splice(0);\n    }\n    else {\n        col.clear();\n    }\n}\nconst CURRIED = Symbol(\"curried\");\nexport function uncurry(arity, f) {\n    // f may be a function option with None value\n    if (f == null || f.length > 1) {\n        return f;\n    }\n    const uncurried = (...args) => {\n        let res = f;\n        for (let i = 0; i < arity; i++) {\n            res = res(args[i]);\n        }\n        return res;\n    };\n    uncurried[CURRIED] = f;\n    return uncurried;\n}\nfunction _curry(args, arity, f) {\n    return (arg) => arity === 1\n        ? f(...args.concat([arg]))\n        // Note it's important to generate a new args array every time\n        // because a partially applied function can be run multiple times\n        : _curry(args.concat([arg]), arity - 1, f);\n}\nexport function curry(arity, f) {\n    if (f == null || f.length === 1) {\n        return f;\n    }\n    else if (CURRIED in f) {\n        return f[CURRIED];\n    }\n    else {\n        return _curry([], arity, f);\n    }\n}\nexport function checkArity(arity, f) {\n    return f.length > arity\n        ? (...args1) => (...args2) => f.apply(undefined, args1.concat(args2))\n        : f;\n}\nexport function partialApply(arity, f, args) {\n    if (f == null) {\n        return undefined;\n    }\n    else if (CURRIED in f) {\n        f = f[CURRIED];\n        for (let i = 0; i < args.length; i++) {\n            f = f(args[i]);\n        }\n        return f;\n    }\n    else {\n        return _curry(args, arity, f);\n    }\n}\nexport function mapCurriedArgs(fn, mappings) {\n    function mapArg(fn, arg, mappings, idx) {\n        const mapping = mappings[idx];\n        if (mapping !== 0) {\n            const expectedArity = mapping[0];\n            const actualArity = mapping[1];\n            if (expectedArity > 1) {\n                arg = curry(expectedArity, arg);\n            }\n            if (actualArity > 1) {\n                arg = uncurry(actualArity, arg);\n            }\n        }\n        const res = fn(arg);\n        if (idx + 1 === mappings.length) {\n            return res;\n        }\n        else {\n            return (arg) => mapArg(res, arg, mappings, idx + 1);\n        }\n    }\n    return (arg) => mapArg(fn, arg, mappings, 0);\n}\n","import { combineHashCodes, compare, compareArrays, equalArrays, equals, sameConstructor, numberHash, structuralHash } from \"./Util.js\";\nexport function seqToString(self) {\n    let count = 0;\n    let str = \"[\";\n    for (const x of self) {\n        if (count === 0) {\n            str += toString(x);\n        }\n        else if (count === 100) {\n            str += \"; ...\";\n            break;\n        }\n        else {\n            str += \"; \" + toString(x);\n        }\n        count++;\n    }\n    return str + \"]\";\n}\nexport function toString(x, callStack = 0) {\n    var _a, _b;\n    if (x != null && typeof x === \"object\") {\n        if (typeof x.toString === \"function\") {\n            return x.toString();\n        }\n        else if (Symbol.iterator in x) {\n            return seqToString(x);\n        }\n        else { // TODO: Date?\n            const cons = (_a = Object.getPrototypeOf(x)) === null || _a === void 0 ? void 0 : _a.constructor;\n            return cons === Object && callStack < 10\n                // Same format as recordToString\n                ? \"{ \" + Object.entries(x).map(([k, v]) => k + \" = \" + toString(v, callStack + 1)).join(\"\\n  \") + \" }\"\n                : (_b = cons === null || cons === void 0 ? void 0 : cons.name) !== null && _b !== void 0 ? _b : \"\";\n        }\n    }\n    return String(x);\n}\nexport function unionToString(name, fields) {\n    if (fields.length === 0) {\n        return name;\n    }\n    else {\n        let fieldStr = \"\";\n        let withParens = true;\n        if (fields.length === 1) {\n            fieldStr = toString(fields[0]);\n            withParens = fieldStr.indexOf(\" \") >= 0;\n        }\n        else {\n            fieldStr = fields.map((x) => toString(x)).join(\", \");\n        }\n        return name + (withParens ? \" (\" : \" \") + fieldStr + (withParens ? \")\" : \"\");\n    }\n}\nexport class Union {\n    get name() {\n        return this.cases()[this.tag];\n    }\n    toJSON() {\n        return this.fields.length === 0 ? this.name : [this.name].concat(this.fields);\n    }\n    toString() {\n        return unionToString(this.name, this.fields);\n    }\n    GetHashCode() {\n        const hashes = this.fields.map((x) => structuralHash(x));\n        hashes.splice(0, 0, numberHash(this.tag));\n        return combineHashCodes(hashes);\n    }\n    Equals(other) {\n        if (this === other) {\n            return true;\n        }\n        else if (!sameConstructor(this, other)) {\n            return false;\n        }\n        else if (this.tag === other.tag) {\n            return equalArrays(this.fields, other.fields);\n        }\n        else {\n            return false;\n        }\n    }\n    CompareTo(other) {\n        if (this === other) {\n            return 0;\n        }\n        else if (!sameConstructor(this, other)) {\n            return -1;\n        }\n        else if (this.tag === other.tag) {\n            return compareArrays(this.fields, other.fields);\n        }\n        else {\n            return this.tag < other.tag ? -1 : 1;\n        }\n    }\n}\nfunction recordToJSON(self) {\n    const o = {};\n    const keys = Object.keys(self);\n    for (let i = 0; i < keys.length; i++) {\n        o[keys[i]] = self[keys[i]];\n    }\n    return o;\n}\nfunction recordToString(self) {\n    return \"{ \" + Object.entries(self).map(([k, v]) => k + \" = \" + toString(v)).join(\"\\n  \") + \" }\";\n}\nfunction recordGetHashCode(self) {\n    const hashes = Object.values(self).map((v) => structuralHash(v));\n    return combineHashCodes(hashes);\n}\nfunction recordEquals(self, other) {\n    if (self === other) {\n        return true;\n    }\n    else if (!sameConstructor(self, other)) {\n        return false;\n    }\n    else {\n        const thisNames = Object.keys(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            if (!equals(self[thisNames[i]], other[thisNames[i]])) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nfunction recordCompareTo(self, other) {\n    if (self === other) {\n        return 0;\n    }\n    else if (!sameConstructor(self, other)) {\n        return -1;\n    }\n    else {\n        const thisNames = Object.keys(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            const result = compare(self[thisNames[i]], other[thisNames[i]]);\n            if (result !== 0) {\n                return result;\n            }\n        }\n        return 0;\n    }\n}\nexport class Record {\n    toJSON() { return recordToJSON(this); }\n    toString() { return recordToString(this); }\n    GetHashCode() { return recordGetHashCode(this); }\n    Equals(other) { return recordEquals(this, other); }\n    CompareTo(other) { return recordCompareTo(this, other); }\n}\nexport class FSharpRef {\n    constructor(contentsOrGetter, setter) {\n        if (typeof setter === \"function\") {\n            this.getter = contentsOrGetter;\n            this.setter = setter;\n        }\n        else {\n            this.getter = () => contentsOrGetter;\n            this.setter = (v) => { contentsOrGetter = v; };\n        }\n    }\n    get contents() {\n        return this.getter();\n    }\n    set contents(v) {\n        this.setter(v);\n    }\n}\n// EXCEPTIONS\n// Exception is intentionally not derived from Error, for performance reasons (see #2160)\nexport class Exception {\n    constructor(message) {\n        this.message = message;\n    }\n}\nexport function isException(x) {\n    return x instanceof Exception || x instanceof Error;\n}\nexport function ensureErrorOrException(e) {\n    return isException(e) ? e : new Error(String(e));\n}\nexport class FSharpException extends Exception {\n    toJSON() { return recordToJSON(this); }\n    toString() { return recordToString(this); }\n    GetHashCode() { return recordGetHashCode(this); }\n    Equals(other) { return recordEquals(this, other); }\n    CompareTo(other) { return recordCompareTo(this, other); }\n}\nexport class MatchFailureException extends FSharpException {\n    constructor(arg1, arg2, arg3) {\n        super();\n        this.arg1 = arg1;\n        this.arg2 = arg2 | 0;\n        this.arg3 = arg3 | 0;\n        this.message = \"The match cases were incomplete\";\n    }\n}\nexport class Attribute {\n}\n","/**\n * DateTimeOffset functions.\n *\n * Note: Date instances are always DateObjects in local\n * timezone (because JS dates are all kinds of messed up).\n * A local date returns UTC epoc when `.getTime()` is called.\n *\n * Basically; invariant: date.getTime() always return UTC time.\n */\nimport { fromValue, ticksToUnixEpochMilliseconds, unixEpochMillisecondsToTicks } from \"./Long.js\";\nimport { compareDates, dateOffset, padWithZeros } from \"./Util.js\";\nexport function dateOffsetToString(offset) {\n    const isMinus = offset < 0;\n    offset = Math.abs(offset);\n    const hours = ~~(offset / 3600000);\n    const minutes = (offset % 3600000) / 60000;\n    return (isMinus ? \"-\" : \"+\") +\n        padWithZeros(hours, 2) + \":\" +\n        padWithZeros(minutes, 2);\n}\nexport function dateToHalfUTCString(date, half) {\n    const str = date.toISOString();\n    return half === \"first\"\n        ? str.substring(0, str.indexOf(\"T\"))\n        : str.substring(str.indexOf(\"T\") + 1, str.length - 1);\n}\nfunction dateToISOString(d, utc) {\n    if (utc) {\n        return d.toISOString();\n    }\n    else {\n        // JS Date is always local\n        const printOffset = d.kind == null ? true : d.kind === 2 /* Local */;\n        return padWithZeros(d.getFullYear(), 4) + \"-\" +\n            padWithZeros(d.getMonth() + 1, 2) + \"-\" +\n            padWithZeros(d.getDate(), 2) + \"T\" +\n            padWithZeros(d.getHours(), 2) + \":\" +\n            padWithZeros(d.getMinutes(), 2) + \":\" +\n            padWithZeros(d.getSeconds(), 2) + \".\" +\n            padWithZeros(d.getMilliseconds(), 3) +\n            (printOffset ? dateOffsetToString(d.getTimezoneOffset() * -60000) : \"\");\n    }\n}\nfunction dateToISOStringWithOffset(dateWithOffset, offset) {\n    const str = dateWithOffset.toISOString();\n    return str.substring(0, str.length - 1) + dateOffsetToString(offset);\n}\nfunction dateToStringWithCustomFormat(date, format, utc) {\n    return format.replace(/(\\w)\\1*/g, (match) => {\n        let rep = Number.NaN;\n        switch (match.substring(0, 1)) {\n            case \"y\":\n                const y = utc ? date.getUTCFullYear() : date.getFullYear();\n                rep = match.length < 4 ? y % 100 : y;\n                break;\n            case \"M\":\n                rep = (utc ? date.getUTCMonth() : date.getMonth()) + 1;\n                break;\n            case \"d\":\n                rep = utc ? date.getUTCDate() : date.getDate();\n                break;\n            case \"H\":\n                rep = utc ? date.getUTCHours() : date.getHours();\n                break;\n            case \"h\":\n                const h = utc ? date.getUTCHours() : date.getHours();\n                rep = h > 12 ? h % 12 : h;\n                break;\n            case \"m\":\n                rep = utc ? date.getUTCMinutes() : date.getMinutes();\n                break;\n            case \"s\":\n                rep = utc ? date.getUTCSeconds() : date.getSeconds();\n                break;\n            case \"f\":\n                rep = utc ? date.getUTCMilliseconds() : date.getMilliseconds();\n                break;\n        }\n        if (Number.isNaN(rep)) {\n            return match;\n        }\n        else {\n            return (rep < 10 && match.length > 1) ? \"0\" + rep : \"\" + rep;\n        }\n    });\n}\nfunction dateToStringWithOffset(date, format) {\n    var _a, _b, _c;\n    const d = new Date(date.getTime() + ((_a = date.offset) !== null && _a !== void 0 ? _a : 0));\n    if (typeof format !== \"string\") {\n        return d.toISOString().replace(/\\.\\d+/, \"\").replace(/[A-Z]|\\.\\d+/g, \" \") + dateOffsetToString(((_b = date.offset) !== null && _b !== void 0 ? _b : 0));\n    }\n    else if (format.length === 1) {\n        switch (format) {\n            case \"D\":\n            case \"d\": return dateToHalfUTCString(d, \"first\");\n            case \"T\":\n            case \"t\": return dateToHalfUTCString(d, \"second\");\n            case \"O\":\n            case \"o\": return dateToISOStringWithOffset(d, ((_c = date.offset) !== null && _c !== void 0 ? _c : 0));\n            default: throw new Error(\"Unrecognized Date print format\");\n        }\n    }\n    else {\n        return dateToStringWithCustomFormat(d, format, true);\n    }\n}\nfunction dateToStringWithKind(date, format) {\n    const utc = date.kind === 1 /* UTC */;\n    if (typeof format !== \"string\") {\n        return utc ? date.toUTCString() : date.toLocaleString();\n    }\n    else if (format.length === 1) {\n        switch (format) {\n            case \"D\":\n            case \"d\":\n                return utc ? dateToHalfUTCString(date, \"first\") : date.toLocaleDateString();\n            case \"T\":\n            case \"t\":\n                return utc ? dateToHalfUTCString(date, \"second\") : date.toLocaleTimeString();\n            case \"O\":\n            case \"o\":\n                return dateToISOString(date, utc);\n            default:\n                throw new Error(\"Unrecognized Date print format\");\n        }\n    }\n    else {\n        return dateToStringWithCustomFormat(date, format, utc);\n    }\n}\nexport function toString(date, format, _provider) {\n    return date.offset != null\n        ? dateToStringWithOffset(date, format)\n        : dateToStringWithKind(date, format);\n}\nexport function DateTime(value, kind) {\n    const d = new Date(value);\n    d.kind = (kind == null ? 0 /* Unspecified */ : kind) | 0;\n    return d;\n}\nexport function fromTicks(ticks, kind) {\n    ticks = fromValue(ticks);\n    kind = kind != null ? kind : 2 /* Local */; // better default than Unspecified\n    let date = DateTime(ticksToUnixEpochMilliseconds(ticks), kind);\n    // Ticks are local to offset (in this case, either UTC or Local/Unknown).\n    // If kind is anything but UTC, that means that the tick number was not\n    // in utc, thus getTime() cannot return UTC, and needs to be shifted.\n    if (kind !== 1 /* UTC */) {\n        date = DateTime(date.getTime() - dateOffset(date), kind);\n    }\n    return date;\n}\nexport function fromDateTimeOffset(date, kind) {\n    var _a;\n    switch (kind) {\n        case 1 /* UTC */: return DateTime(date.getTime(), 1 /* UTC */);\n        case 2 /* Local */: return DateTime(date.getTime(), 2 /* Local */);\n        default:\n            const d = DateTime(date.getTime() + ((_a = date.offset) !== null && _a !== void 0 ? _a : 0), kind);\n            return DateTime(d.getTime() - dateOffset(d), kind);\n    }\n}\nexport function getTicks(date) {\n    return unixEpochMillisecondsToTicks(date.getTime(), dateOffset(date));\n}\nexport function minValue() {\n    // This is \"0001-01-01T00:00:00.000Z\", actual JS min value is -8640000000000000\n    return DateTime(-62135596800000, 0 /* Unspecified */);\n}\nexport function maxValue() {\n    // This is \"9999-12-31T23:59:59.999Z\", actual JS max value is 8640000000000000\n    return DateTime(253402300799999, 0 /* Unspecified */);\n}\nexport function parseRaw(input) {\n    function fail() {\n        throw new Error(`The string is not a valid Date: ${input}`);\n    }\n    if (input == null || input.trim() === \"\") {\n        fail();\n    }\n    // ISO dates without TZ are parsed as UTC. Adding time without TZ keeps them local.\n    if (input.length === 10 && input[4] === \"-\" && input[7] === \"-\") {\n        input += \"T00:00:00\";\n    }\n    let date = new Date(input);\n    let offset = null;\n    if (isNaN(date.getTime())) {\n        // Try to check strings JS Date cannot parse (see #1045, #1422)\n        // tslint:disable-next-line:max-line-length\n        const m = /^\\s*(\\d+[^\\w\\s:]\\d+[^\\w\\s:]\\d+)?\\s*(\\d+:\\d+(?::\\d+(?:\\.\\d+)?)?)?\\s*([AaPp][Mm])?\\s*(Z|[+-]([01]?\\d):?([0-5]?\\d)?)?\\s*$/.exec(input);\n        if (m != null) {\n            let baseDate;\n            let timeInSeconds = 0;\n            if (m[2] != null) {\n                const timeParts = m[2].split(\":\");\n                timeInSeconds =\n                    parseInt(timeParts[0], 10) * 3600 +\n                        parseInt(timeParts[1] || \"0\", 10) * 60 +\n                        parseFloat(timeParts[2] || \"0\");\n                if (m[3] != null && m[3].toUpperCase() === \"PM\") {\n                    timeInSeconds += 720;\n                }\n            }\n            if (m[4] != null) { // There's an offset, parse as UTC\n                if (m[1] != null) {\n                    baseDate = new Date(m[1] + \" UTC\");\n                }\n                else {\n                    const d = new Date();\n                    baseDate = new Date(d.getUTCFullYear() + \"/\" + (d.getUTCMonth() + 1) + \"/\" + d.getUTCDate());\n                }\n                if (m[4] === \"Z\") {\n                    offset = \"Z\";\n                }\n                else {\n                    let offsetInMinutes = parseInt(m[5], 10) * 60 + parseInt(m[6] || \"0\", 10);\n                    if (m[4][0] === \"-\") {\n                        offsetInMinutes *= -1;\n                    }\n                    offset = offsetInMinutes;\n                    timeInSeconds -= offsetInMinutes * 60;\n                }\n            }\n            else {\n                if (m[1] != null) {\n                    baseDate = new Date(m[1]);\n                }\n                else {\n                    const d = new Date();\n                    baseDate = new Date(d.getFullYear() + \"/\" + (d.getMonth() + 1) + \"/\" + d.getDate());\n                }\n            }\n            date = new Date(baseDate.getTime() + timeInSeconds * 1000);\n            // correct for daylight savings time\n            date = new Date(date.getTime() + (date.getTimezoneOffset() - baseDate.getTimezoneOffset()) * 60000);\n        }\n        else {\n            fail();\n        }\n        // Check again the date is valid after transformations, see #2229\n        if (isNaN(date.getTime())) {\n            fail();\n        }\n    }\n    return [date, offset];\n}\nexport function parse(str, detectUTC = false) {\n    const [date, offset] = parseRaw(str);\n    // .NET always parses DateTime as Local if there's offset info (even \"Z\")\n    // Newtonsoft.Json uses UTC if the offset is \"Z\"\n    const kind = offset != null\n        ? (detectUTC && offset === \"Z\" ? 1 /* UTC */ : 2 /* Local */)\n        : 0 /* Unspecified */;\n    return DateTime(date.getTime(), kind);\n}\nexport function tryParse(v, defValue) {\n    try {\n        defValue.contents = parse(v);\n        return true;\n    }\n    catch (_err) {\n        return false;\n    }\n}\nexport function create(year, month, day, h = 0, m = 0, s = 0, ms = 0, kind) {\n    const dateValue = kind === 1 /* UTC */\n        ? Date.UTC(year, month - 1, day, h, m, s, ms)\n        : new Date(year, month - 1, day, h, m, s, ms).getTime();\n    if (isNaN(dateValue)) {\n        throw new Error(\"The parameters describe an unrepresentable Date.\");\n    }\n    const date = DateTime(dateValue, kind);\n    if (year <= 99) {\n        date.setFullYear(year, month - 1, day);\n    }\n    return date;\n}\nexport function now() {\n    return DateTime(Date.now(), 2 /* Local */);\n}\nexport function utcNow() {\n    return DateTime(Date.now(), 1 /* UTC */);\n}\nexport function today() {\n    return date(now());\n}\nexport function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\nexport function daysInMonth(year, month) {\n    return month === 2\n        ? (isLeapYear(year) ? 29 : 28)\n        : (month >= 8 ? (month % 2 === 0 ? 31 : 30) : (month % 2 === 0 ? 30 : 31));\n}\nexport function toUniversalTime(date) {\n    return date.kind === 1 /* UTC */ ? date : DateTime(date.getTime(), 1 /* UTC */);\n}\nexport function toLocalTime(date) {\n    return date.kind === 2 /* Local */ ? date : DateTime(date.getTime(), 2 /* Local */);\n}\nexport function specifyKind(d, kind) {\n    return create(year(d), month(d), day(d), hour(d), minute(d), second(d), millisecond(d), kind);\n}\nexport function timeOfDay(d) {\n    return hour(d) * 3600000\n        + minute(d) * 60000\n        + second(d) * 1000\n        + millisecond(d);\n}\nexport function date(d) {\n    return create(year(d), month(d), day(d), 0, 0, 0, 0, d.kind);\n}\nexport function day(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCDate() : d.getDate();\n}\nexport function hour(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCHours() : d.getHours();\n}\nexport function millisecond(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCMilliseconds() : d.getMilliseconds();\n}\nexport function minute(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCMinutes() : d.getMinutes();\n}\nexport function month(d) {\n    return (d.kind === 1 /* UTC */ ? d.getUTCMonth() : d.getMonth()) + 1;\n}\nexport function second(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCSeconds() : d.getSeconds();\n}\nexport function year(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCFullYear() : d.getFullYear();\n}\nexport function dayOfWeek(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCDay() : d.getDay();\n}\nexport function dayOfYear(d) {\n    const _year = year(d);\n    const _month = month(d);\n    let _day = day(d);\n    for (let i = 1; i < _month; i++) {\n        _day += daysInMonth(_year, i);\n    }\n    return _day;\n}\nexport function add(d, ts) {\n    const newDate = DateTime(d.getTime() + ts, d.kind);\n    if (d.kind === 2 /* Local */) {\n        const oldTzOffset = d.getTimezoneOffset();\n        const newTzOffset = newDate.getTimezoneOffset();\n        return oldTzOffset !== newTzOffset\n            ? DateTime(newDate.getTime() + (newTzOffset - oldTzOffset) * 60000, d.kind)\n            : newDate;\n    }\n    else {\n        return newDate;\n    }\n}\nexport function addDays(d, v) {\n    return add(d, v * 86400000);\n}\nexport function addHours(d, v) {\n    return add(d, v * 3600000);\n}\nexport function addMinutes(d, v) {\n    return add(d, v * 60000);\n}\nexport function addSeconds(d, v) {\n    return add(d, v * 1000);\n}\nexport function addMilliseconds(d, v) {\n    return add(d, v);\n}\nexport function addYears(d, v) {\n    const newMonth = month(d);\n    const newYear = year(d) + v;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nexport function addMonths(d, v) {\n    let newMonth = month(d) + v;\n    let newMonth_ = 0;\n    let yearOffset = 0;\n    if (newMonth > 12) {\n        newMonth_ = newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12);\n        newMonth = newMonth_;\n    }\n    else if (newMonth < 1) {\n        newMonth_ = 12 + newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12) + (newMonth_ === 12 ? -1 : 0);\n        newMonth = newMonth_;\n    }\n    const newYear = year(d) + yearOffset;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nexport function subtract(d, that) {\n    return typeof that === \"number\"\n        ? add(d, -that)\n        : d.getTime() - that.getTime();\n}\nexport function toLongDateString(d) {\n    return d.toDateString();\n}\nexport function toShortDateString(d) {\n    return d.toLocaleDateString();\n}\nexport function toLongTimeString(d) {\n    return d.toLocaleTimeString();\n}\nexport function toShortTimeString(d) {\n    return d.toLocaleTimeString().replace(/:\\d\\d(?!:)/, \"\");\n}\nexport function equals(d1, d2) {\n    return d1.getTime() === d2.getTime();\n}\nexport const compare = compareDates;\nexport const compareTo = compareDates;\nexport function op_Addition(x, y) {\n    return add(x, y);\n}\nexport function op_Subtraction(x, y) {\n    return subtract(x, y);\n}\nexport function isDaylightSavingTime(x) {\n    const jan = new Date(x.getFullYear(), 0, 1);\n    const jul = new Date(x.getFullYear(), 6, 1);\n    return isDST(jan.getTimezoneOffset(), jul.getTimezoneOffset(), x.getTimezoneOffset());\n}\nfunction isDST(janOffset, julOffset, tOffset) {\n    return Math.min(janOffset, julOffset) === tOffset;\n}\nexport default DateTime;\n","export const symbol = Symbol(\"numeric\");\nexport function isNumeric(x) {\n    return typeof x === \"number\" || (x === null || x === void 0 ? void 0 : x[symbol]);\n}\nexport function compare(x, y) {\n    if (typeof x === \"number\") {\n        return x < y ? -1 : (x > y ? 1 : 0);\n    }\n    else {\n        return x.CompareTo(y);\n    }\n}\nexport function multiply(x, y) {\n    if (typeof x === \"number\") {\n        return x * y;\n    }\n    else {\n        return x[symbol]().multiply(y);\n    }\n}\nexport function toFixed(x, dp) {\n    if (typeof x === \"number\") {\n        return x.toFixed(dp);\n    }\n    else {\n        return x[symbol]().toFixed(dp);\n    }\n}\nexport function toPrecision(x, sd) {\n    if (typeof x === \"number\") {\n        return x.toPrecision(sd);\n    }\n    else {\n        return x[symbol]().toPrecision(sd);\n    }\n}\nexport function toExponential(x, dp) {\n    if (typeof x === \"number\") {\n        return x.toExponential(dp);\n    }\n    else {\n        return x[symbol]().toExponential(dp);\n    }\n}\nexport function toHex(x) {\n    if (typeof x === \"number\") {\n        return (Number(x) >>> 0).toString(16);\n    }\n    else {\n        return x[symbol]().toHex();\n    }\n}\n","export function create(pattern, options = 0) {\n    // Supported RegexOptions\n    // * IgnoreCase:  0x0001\n    // * Multiline:   0x0002\n    // * Compiled:    0x0008 (ignored)\n    // * Singleline:  0x0010\n    // * ECMAScript:  0x0100 (ignored)\n    if ((options & ~(1 ^ 2 ^ 8 ^ 16 ^ 256)) !== 0) {\n        throw new Error(\"RegexOptions only supports: IgnoreCase, Multiline, Compiled, Singleline and ECMAScript\");\n    }\n    // Set always global and unicode flags for compatibility with dotnet, see #2925\n    let flags = \"gu\";\n    flags += options & 1 ? \"i\" : \"\"; // 0x0001 RegexOptions.IgnoreCase\n    flags += options & 2 ? \"m\" : \"\";\n    flags += options & 16 ? \"s\" : \"\";\n    return new RegExp(pattern, flags);\n}\n// From http://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex\nexport function escape(str) {\n    return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n}\nexport function unescape(str) {\n    return str.replace(/\\\\([\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|])/g, \"$1\");\n}\nexport function isMatch(reg, input, startAt = 0) {\n    reg.lastIndex = startAt;\n    return reg.test(input);\n}\nexport function match(reg, input, startAt = 0) {\n    reg.lastIndex = startAt;\n    return reg.exec(input);\n}\nexport function matches(reg, input, startAt = 0) {\n    if (input == null) {\n        throw new Error(\"Input cannot ve null\");\n    }\n    if (!reg.global) {\n        throw new Error(\"Non-global RegExp\"); // Prevent infinite loop\n    }\n    reg.lastIndex = startAt;\n    const matches = [];\n    let m;\n    let lastMatchIndex = -1;\n    // tslint:disable-next-line:no-conditional-assignment\n    while ((m = reg.exec(input)) != null) {\n        // It can happen even global regex get stuck, see #2845\n        if (m.index === lastMatchIndex) {\n            reg.lastIndex++;\n        }\n        else {\n            lastMatchIndex = m.index;\n            matches.push(m);\n        }\n    }\n    return matches;\n}\nexport function options(reg) {\n    let options = 256; // ECMAScript\n    options |= reg.ignoreCase ? 1 : 0;\n    options |= reg.multiline ? 2 : 0;\n    return options;\n}\nexport function replace(reg, input, replacement, limit, offset = 0) {\n    function replacer() {\n        let res = arguments[0];\n        if (limit) {\n            limit--;\n            const match = [];\n            const len = arguments.length;\n            // arguments: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#specifying_a_function_as_a_parameter\n            // * match: matched substring\n            // * p1, p2, ...: nth capture group string\n            // * offset: offset of matched substring\n            // * string: whole string examined\n            // * groups: named capturing groups\n            //           ONLY if regex contains a named capture group AND browser supports named groups\n            // -> last element can be groups OR input string\n            // -> check if last element is string\n            const withGroups = typeof arguments[len - 1] !== \"string\";\n            let pLast = withGroups ? len - 3 : len - 2;\n            for (let i = 0; i < pLast; i++) {\n                match.push(arguments[i]);\n            }\n            match.index = arguments[pLast++];\n            match.input = arguments[pLast++];\n            if (withGroups) {\n                match.groups = arguments[pLast];\n            }\n            res = replacement(match);\n        }\n        return res;\n    }\n    if (typeof reg === \"string\") {\n        const tmp = reg;\n        reg = create(input, limit !== null && limit !== void 0 ? limit : 0);\n        input = tmp;\n        limit = undefined;\n    }\n    if (typeof replacement === \"function\") {\n        limit = limit == null ? -1 : limit;\n        return input.substring(0, offset) + input.substring(offset).replace(reg, replacer);\n    }\n    else {\n        replacement =\n            replacement\n                // $0 doesn't work with JS regex, see #1155\n                .replace(/\\$0/g, (_s) => \"$&\")\n                // named groups in replacement are `${name}` in .Net, but `$<name>` in JS (in regex: groups are `(?<name>...)` in both)\n                .replace(/\\${([^}]+)}/g, \"\\$<$1>\");\n        if (limit != null) {\n            let m;\n            const sub1 = input.substring(offset);\n            const _matches = matches(reg, sub1);\n            const sub2 = matches.length > limit ? (m = _matches[limit - 1], sub1.substring(0, m.index + m[0].length)) : sub1;\n            return input.substring(0, offset) + sub2.replace(reg, replacement)\n                + input.substring(offset + sub2.length);\n        }\n        else {\n            return input.replace(reg, replacement);\n        }\n    }\n}\nexport function split(reg, input, limit, offset = 0) {\n    if (typeof reg === \"string\") {\n        const tmp = reg;\n        reg = create(input, limit !== null && limit !== void 0 ? limit : 0);\n        input = tmp;\n        limit = undefined;\n    }\n    input = input.substring(offset);\n    return input.split(reg, limit);\n}\n","import { toString as dateToString } from \"./Date.js\";\nimport { compare as numericCompare, isNumeric, multiply, toExponential, toFixed, toHex, toPrecision } from \"./Numeric.js\";\nimport { escape } from \"./RegExp.js\";\nimport { toString } from \"./Types.js\";\nconst fsFormatRegExp = /(^|[^%])%([0+\\- ]*)(\\*|\\d+)?(?:\\.(\\d+))?(\\w)/g;\nconst interpolateRegExp = /(?:(^|[^%])%([0+\\- ]*)(\\d+)?(?:\\.(\\d+))?(\\w))?%P\\(\\)/g;\nconst formatRegExp = /\\{(\\d+)(,-?\\d+)?(?:\\:([a-zA-Z])(\\d{0,2})|\\:(.+?))?\\}/g;\nfunction isLessThan(x, y) {\n    return numericCompare(x, y) < 0;\n}\nfunction cmp(x, y, ic) {\n    function isIgnoreCase(i) {\n        return i === true ||\n            i === 1 /* CurrentCultureIgnoreCase */ ||\n            i === 3 /* InvariantCultureIgnoreCase */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    function isOrdinal(i) {\n        return i === 4 /* Ordinal */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    if (y == null) {\n        return 1;\n    } // everything is bigger than null\n    if (isOrdinal(ic)) {\n        if (isIgnoreCase(ic)) {\n            x = x.toLowerCase();\n            y = y.toLowerCase();\n        }\n        return (x === y) ? 0 : (x < y ? -1 : 1);\n    }\n    else {\n        if (isIgnoreCase(ic)) {\n            x = x.toLocaleLowerCase();\n            y = y.toLocaleLowerCase();\n        }\n        return x.localeCompare(y);\n    }\n}\nexport function compare(...args) {\n    switch (args.length) {\n        case 2: return cmp(args[0], args[1], false);\n        case 3: return cmp(args[0], args[1], args[2]);\n        case 4: return cmp(args[0], args[1], args[2] === true);\n        case 5: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), false);\n        case 6: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5]);\n        case 7: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5] === true);\n        default: throw new Error(\"String.compare: Unsupported number of parameters\");\n    }\n}\nexport function compareOrdinal(x, y) {\n    return cmp(x, y, 4 /* Ordinal */);\n}\nexport function compareTo(x, y) {\n    return cmp(x, y, 0 /* CurrentCulture */);\n}\nexport function startsWith(str, pattern, ic) {\n    if (str.length >= pattern.length) {\n        return cmp(str.substr(0, pattern.length), pattern, ic) === 0;\n    }\n    return false;\n}\nexport function indexOfAny(str, anyOf, ...args) {\n    if (str == null || str === \"\") {\n        return -1;\n    }\n    const startIndex = (args.length > 0) ? args[0] : 0;\n    if (startIndex < 0) {\n        throw new Error(\"Start index cannot be negative\");\n    }\n    const length = (args.length > 1) ? args[1] : str.length - startIndex;\n    if (length < 0) {\n        throw new Error(\"Length cannot be negative\");\n    }\n    if (length > str.length - startIndex) {\n        throw new Error(\"Invalid startIndex and length\");\n    }\n    str = str.substr(startIndex, length);\n    for (const c of anyOf) {\n        const index = str.indexOf(c);\n        if (index > -1) {\n            return index + startIndex;\n        }\n    }\n    return -1;\n}\nexport function printf(input) {\n    return {\n        input,\n        cont: fsFormat(input),\n    };\n}\nexport function interpolate(str, values) {\n    let valIdx = 0;\n    let strIdx = 0;\n    let result = \"\";\n    interpolateRegExp.lastIndex = 0;\n    let match = interpolateRegExp.exec(str);\n    while (match) {\n        // The first group corresponds to the no-escape char (^|[^%]), the actual pattern starts in the next char\n        // Note: we don't use negative lookbehind because some browsers don't support it yet\n        const matchIndex = match.index + (match[1] || \"\").length;\n        result += str.substring(strIdx, matchIndex).replace(/%%/g, \"%\");\n        const [, , flags, padLength, precision, format] = match;\n        // Save interpolateRegExp.lastIndex before running formatReplacement because the values\n        // may also involve interpolation and make use of interpolateRegExp (see #3078)\n        strIdx = interpolateRegExp.lastIndex;\n        result += formatReplacement(values[valIdx++], flags, padLength, precision, format);\n        // Move interpolateRegExp.lastIndex one char behind to make sure we match the no-escape char next time\n        interpolateRegExp.lastIndex = strIdx - 1;\n        match = interpolateRegExp.exec(str);\n    }\n    result += str.substring(strIdx).replace(/%%/g, \"%\");\n    return result;\n}\nfunction continuePrint(cont, arg) {\n    return typeof arg === \"string\" ? cont(arg) : arg.cont(cont);\n}\nexport function toConsole(arg) {\n    // Don't remove the lambda here, see #1357\n    return continuePrint((x) => console.log(x), arg);\n}\nexport function toConsoleError(arg) {\n    return continuePrint((x) => console.error(x), arg);\n}\nexport function toText(arg) {\n    return continuePrint((x) => x, arg);\n}\nexport function toFail(arg) {\n    return continuePrint((x) => {\n        throw new Error(x);\n    }, arg);\n}\nfunction formatReplacement(rep, flags, padLength, precision, format) {\n    let sign = \"\";\n    flags = flags || \"\";\n    format = format || \"\";\n    if (isNumeric(rep)) {\n        if (format.toLowerCase() !== \"x\") {\n            if (isLessThan(rep, 0)) {\n                rep = multiply(rep, -1);\n                sign = \"-\";\n            }\n            else {\n                if (flags.indexOf(\" \") >= 0) {\n                    sign = \" \";\n                }\n                else if (flags.indexOf(\"+\") >= 0) {\n                    sign = \"+\";\n                }\n            }\n        }\n        precision = precision == null ? null : parseInt(precision, 10);\n        switch (format) {\n            case \"f\":\n            case \"F\":\n                precision = precision != null ? precision : 6;\n                rep = toFixed(rep, precision);\n                break;\n            case \"g\":\n            case \"G\":\n                rep = precision != null ? toPrecision(rep, precision) : toPrecision(rep);\n                break;\n            case \"e\":\n            case \"E\":\n                rep = precision != null ? toExponential(rep, precision) : toExponential(rep);\n                break;\n            case \"x\":\n                rep = toHex(rep);\n                break;\n            case \"X\":\n                rep = toHex(rep).toUpperCase();\n                break;\n            default: // AOid\n                rep = String(rep);\n                break;\n        }\n    }\n    else if (rep instanceof Date) {\n        rep = dateToString(rep);\n    }\n    else {\n        rep = toString(rep);\n    }\n    padLength = typeof padLength === \"number\" ? padLength : parseInt(padLength, 10);\n    if (!isNaN(padLength)) {\n        const zeroFlag = flags.indexOf(\"0\") >= 0; // Use '0' for left padding\n        const minusFlag = flags.indexOf(\"-\") >= 0; // Right padding\n        const ch = minusFlag || !zeroFlag ? \" \" : \"0\";\n        if (ch === \"0\") {\n            rep = pad(rep, padLength - sign.length, ch, minusFlag);\n            rep = sign + rep;\n        }\n        else {\n            rep = pad(sign + rep, padLength, ch, minusFlag);\n        }\n    }\n    else {\n        rep = sign + rep;\n    }\n    return rep;\n}\nfunction createPrinter(cont, _strParts, _matches, _result = \"\", padArg = -1) {\n    return (...args) => {\n        // Make copies of the values passed by reference because the function can be used multiple times\n        let result = _result;\n        const strParts = _strParts.slice();\n        const matches = _matches.slice();\n        for (const arg of args) {\n            const [, , flags, _padLength, precision, format] = matches[0];\n            let padLength = _padLength;\n            if (padArg >= 0) {\n                padLength = padArg;\n                padArg = -1;\n            }\n            else if (padLength === \"*\") {\n                if (arg < 0) {\n                    throw new Error(\"Non-negative number required\");\n                }\n                padArg = arg;\n                continue;\n            }\n            result += strParts[0];\n            result += formatReplacement(arg, flags, padLength, precision, format);\n            strParts.splice(0, 1);\n            matches.splice(0, 1);\n        }\n        if (matches.length === 0) {\n            result += strParts[0];\n            return cont(result);\n        }\n        else {\n            return createPrinter(cont, strParts, matches, result, padArg);\n        }\n    };\n}\nexport function fsFormat(str) {\n    return (cont) => {\n        fsFormatRegExp.lastIndex = 0;\n        const strParts = [];\n        const matches = [];\n        let strIdx = 0;\n        let match = fsFormatRegExp.exec(str);\n        while (match) {\n            // The first group corresponds to the no-escape char (^|[^%]), the actual pattern starts in the next char\n            // Note: we don't use negative lookbehind because some browsers don't support it yet\n            const matchIndex = match.index + (match[1] || \"\").length;\n            strParts.push(str.substring(strIdx, matchIndex).replace(/%%/g, \"%\"));\n            matches.push(match);\n            strIdx = fsFormatRegExp.lastIndex;\n            // Likewise we need to move fsFormatRegExp.lastIndex one char behind to make sure we match the no-escape char next time\n            fsFormatRegExp.lastIndex -= 1;\n            match = fsFormatRegExp.exec(str);\n        }\n        if (strParts.length === 0) {\n            return cont(str.replace(/%%/g, \"%\"));\n        }\n        else {\n            strParts.push(str.substring(strIdx).replace(/%%/g, \"%\"));\n            return createPrinter(cont, strParts, matches);\n        }\n    };\n}\nexport function format(str, ...args) {\n    if (typeof str === \"object\" && args.length > 0) {\n        // Called with culture info\n        str = args[0];\n        args.shift();\n    }\n    return str.replace(formatRegExp, (_, idx, padLength, format, precision, pattern) => {\n        if (idx < 0 || idx >= args.length) {\n            throw new Error(\"Index must be greater or equal to zero and less than the arguments' length.\");\n        }\n        let rep = args[idx];\n        if (isNumeric(rep)) {\n            precision = precision == null ? null : parseInt(precision, 10);\n            switch (format) {\n                case \"f\":\n                case \"F\":\n                    precision = precision != null ? precision : 2;\n                    rep = toFixed(rep, precision);\n                    break;\n                case \"g\":\n                case \"G\":\n                    rep = precision != null ? toPrecision(rep, precision) : toPrecision(rep);\n                    break;\n                case \"e\":\n                case \"E\":\n                    rep = precision != null ? toExponential(rep, precision) : toExponential(rep);\n                    break;\n                case \"p\":\n                case \"P\":\n                    precision = precision != null ? precision : 2;\n                    rep = toFixed(multiply(rep, 100), precision) + \" %\";\n                    break;\n                case \"d\":\n                case \"D\":\n                    rep = precision != null ? padLeft(String(rep), precision, \"0\") : String(rep);\n                    break;\n                case \"x\":\n                case \"X\":\n                    rep = precision != null ? padLeft(toHex(rep), precision, \"0\") : toHex(rep);\n                    if (format === \"X\") {\n                        rep = rep.toUpperCase();\n                    }\n                    break;\n                default:\n                    if (pattern) {\n                        let sign = \"\";\n                        rep = pattern.replace(/([0#,]+)(\\.[0#]+)?/, (_, intPart, decimalPart) => {\n                            if (isLessThan(rep, 0)) {\n                                rep = multiply(rep, -1);\n                                sign = \"-\";\n                            }\n                            decimalPart = decimalPart == null ? \"\" : decimalPart.substring(1);\n                            rep = toFixed(rep, Math.max(decimalPart.length, 0));\n                            let [repInt, repDecimal] = rep.split(\".\");\n                            repDecimal || (repDecimal = \"\");\n                            const leftZeroes = intPart.replace(/,/g, \"\").replace(/^#+/, \"\").length;\n                            repInt = padLeft(repInt, leftZeroes, \"0\");\n                            const rightZeros = decimalPart.replace(/#+$/, \"\").length;\n                            if (rightZeros > repDecimal.length) {\n                                repDecimal = padRight(repDecimal, rightZeros, \"0\");\n                            }\n                            else if (rightZeros < repDecimal.length) {\n                                repDecimal = repDecimal.substring(0, rightZeros) + repDecimal.substring(rightZeros).replace(/0+$/, \"\");\n                            }\n                            // Thousands separator\n                            if (intPart.indexOf(\",\") > 0) {\n                                const i = repInt.length % 3;\n                                const thousandGroups = Math.floor(repInt.length / 3);\n                                let thousands = i > 0 ? repInt.substr(0, i) + (thousandGroups > 0 ? \",\" : \"\") : \"\";\n                                for (let j = 0; j < thousandGroups; j++) {\n                                    thousands += repInt.substr(i + j * 3, 3) + (j < thousandGroups - 1 ? \",\" : \"\");\n                                }\n                                repInt = thousands;\n                            }\n                            return repDecimal.length > 0 ? repInt + \".\" + repDecimal : repInt;\n                        });\n                        rep = sign + rep;\n                    }\n            }\n        }\n        else if (rep instanceof Date) {\n            rep = dateToString(rep, pattern || format);\n        }\n        else {\n            rep = toString(rep);\n        }\n        padLength = parseInt((padLength || \" \").substring(1), 10);\n        if (!isNaN(padLength)) {\n            rep = pad(String(rep), Math.abs(padLength), \" \", padLength < 0);\n        }\n        return rep;\n    });\n}\nexport function endsWith(str, search) {\n    const idx = str.lastIndexOf(search);\n    return idx >= 0 && idx === str.length - search.length;\n}\nexport function initialize(n, f) {\n    if (n < 0) {\n        throw new Error(\"String length must be non-negative\");\n    }\n    const xs = new Array(n);\n    for (let i = 0; i < n; i++) {\n        xs[i] = f(i);\n    }\n    return xs.join(\"\");\n}\nexport function insert(str, startIndex, value) {\n    if (startIndex < 0 || startIndex > str.length) {\n        throw new Error(\"startIndex is negative or greater than the length of this instance.\");\n    }\n    return str.substring(0, startIndex) + value + str.substring(startIndex);\n}\nexport function isNullOrEmpty(str) {\n    return typeof str !== \"string\" || str.length === 0;\n}\nexport function isNullOrWhiteSpace(str) {\n    return typeof str !== \"string\" || /^\\s*$/.test(str);\n}\nexport function concat(...xs) {\n    return xs.map((x) => String(x)).join(\"\");\n}\nexport function join(delimiter, xs) {\n    if (Array.isArray(xs)) {\n        return xs.join(delimiter);\n    }\n    else {\n        return Array.from(xs).join(delimiter);\n    }\n}\nexport function joinWithIndices(delimiter, xs, startIndex, count) {\n    const endIndexPlusOne = startIndex + count;\n    if (endIndexPlusOne > xs.length) {\n        throw new Error(\"Index and count must refer to a location within the buffer.\");\n    }\n    return xs.slice(startIndex, endIndexPlusOne).join(delimiter);\n}\nfunction notSupported(name) {\n    throw new Error(\"The environment doesn't support '\" + name + \"', please use a polyfill.\");\n}\nexport function toBase64String(inArray) {\n    let str = \"\";\n    for (let i = 0; i < inArray.length; i++) {\n        str += String.fromCharCode(inArray[i]);\n    }\n    return typeof btoa === \"function\" ? btoa(str) : notSupported(\"btoa\");\n}\nexport function fromBase64String(b64Encoded) {\n    const binary = typeof atob === \"function\" ? atob(b64Encoded) : notSupported(\"atob\");\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n}\nfunction pad(str, len, ch, isRight) {\n    ch = ch || \" \";\n    len = len - str.length;\n    for (let i = 0; i < len; i++) {\n        str = isRight ? str + ch : ch + str;\n    }\n    return str;\n}\nexport function padLeft(str, len, ch) {\n    return pad(str, len, ch);\n}\nexport function padRight(str, len, ch) {\n    return pad(str, len, ch, true);\n}\nexport function remove(str, startIndex, count) {\n    if (startIndex >= str.length) {\n        throw new Error(\"startIndex must be less than length of string\");\n    }\n    if (typeof count === \"number\" && (startIndex + count) > str.length) {\n        throw new Error(\"Index and count must refer to a location within the string.\");\n    }\n    return str.slice(0, startIndex) + (typeof count === \"number\" ? str.substr(startIndex + count) : \"\");\n}\nexport function replace(str, search, replace) {\n    return str.replace(new RegExp(escape(search), \"g\"), replace);\n}\nexport function replicate(n, x) {\n    return initialize(n, () => x);\n}\nexport function getCharAtIndex(input, index) {\n    if (index < 0 || index >= input.length) {\n        throw new Error(\"Index was outside the bounds of the array.\");\n    }\n    return input[index];\n}\nexport function split(str, splitters, count, options) {\n    count = typeof count === \"number\" ? count : undefined;\n    options = typeof options === \"number\" ? options : 0;\n    if (count && count < 0) {\n        throw new Error(\"Count cannot be less than zero\");\n    }\n    if (count === 0) {\n        return [];\n    }\n    const removeEmpty = (options & 1) === 1;\n    const trim = (options & 2) === 2;\n    splitters = splitters || [];\n    splitters = splitters.filter(x => x).map(escape);\n    splitters = splitters.length > 0 ? splitters : [\"\\\\s\"];\n    const splits = [];\n    const reg = new RegExp(splitters.join(\"|\"), \"g\");\n    let findSplits = true;\n    let i = 0;\n    do {\n        const match = reg.exec(str);\n        if (match === null) {\n            const candidate = trim ? str.substring(i).trim() : str.substring(i);\n            if (!removeEmpty || candidate.length > 0) {\n                splits.push(candidate);\n            }\n            findSplits = false;\n        }\n        else {\n            const candidate = trim ? str.substring(i, match.index).trim() : str.substring(i, match.index);\n            if (!removeEmpty || candidate.length > 0) {\n                if (count != null && splits.length + 1 === count) {\n                    splits.push(trim ? str.substring(i).trim() : str.substring(i));\n                    findSplits = false;\n                }\n                else {\n                    splits.push(candidate);\n                }\n            }\n            i = reg.lastIndex;\n        }\n    } while (findSplits);\n    return splits;\n}\nexport function trim(str, ...chars) {\n    if (chars.length === 0) {\n        return str.trim();\n    }\n    const pattern = \"[\" + escape(chars.join(\"\")) + \"]+\";\n    return str.replace(new RegExp(\"^\" + pattern), \"\").replace(new RegExp(pattern + \"$\"), \"\");\n}\nexport function trimStart(str, ...chars) {\n    return chars.length === 0\n        ? str.trimStart()\n        : str.replace(new RegExp(\"^[\" + escape(chars.join(\"\")) + \"]+\"), \"\");\n}\nexport function trimEnd(str, ...chars) {\n    return chars.length === 0\n        ? str.trimEnd()\n        : str.replace(new RegExp(\"[\" + escape(chars.join(\"\")) + \"]+$\"), \"\");\n}\nexport function filter(pred, x) {\n    return x.split(\"\").filter((c) => pred(c)).join(\"\");\n}\nexport function substring(str, startIndex, length) {\n    if ((startIndex + (length || 0) > str.length)) {\n        throw new Error(\"Invalid startIndex and/or length\");\n    }\n    return length != null ? str.substr(startIndex, length) : str.substr(startIndex);\n}\nexport function fmt(strs, ...args) {\n    return ({ strs, args });\n}\nexport function fmtWith(fmts) {\n    return (strs, ...args) => ({ strs, args, fmts });\n}\nexport function getFormat(s) {\n    return s.fmts\n        ? s.strs.reduce((acc, newPart, index) => acc + `{${String(index - 1) + s.fmts[index - 1]}}` + newPart)\n        : s.strs.reduce((acc, newPart, index) => acc + `{${index - 1}}` + newPart);\n}\n","import { compare, equals, structuralHash } from \"./Util.js\";\n// Using a class here for better compatibility with TS files importing Some\nexport class Some {\n    constructor(value) {\n        this.value = value;\n    }\n    toJSON() {\n        return this.value;\n    }\n    // Don't add \"Some\" for consistency with erased options\n    toString() {\n        return String(this.value);\n    }\n    GetHashCode() {\n        return structuralHash(this.value);\n    }\n    Equals(other) {\n        if (other == null) {\n            return false;\n        }\n        else {\n            return equals(this.value, other instanceof Some ? other.value : other);\n        }\n    }\n    CompareTo(other) {\n        if (other == null) {\n            return 1;\n        }\n        else {\n            return compare(this.value, other instanceof Some ? other.value : other);\n        }\n    }\n}\nexport function some(x) {\n    return x == null || x instanceof Some ? new Some(x) : x;\n}\nexport function value(x) {\n    if (x == null) {\n        throw new Error(\"Option has no value\");\n    }\n    else {\n        return x instanceof Some ? x.value : x;\n    }\n}\nexport function ofNullable(x) {\n    // This will fail with unit probably, an alternative would be:\n    // return x === null ? undefined : (x === undefined ? new Some(x) : x);\n    return x == null ? undefined : x;\n}\nexport function toNullable(x) {\n    return x == null ? null : value(x);\n}\nexport function flatten(x) {\n    return x == null ? undefined : value(x);\n}\nexport function toArray(opt) {\n    return (opt == null) ? [] : [value(opt)];\n}\nexport function defaultArg(opt, defaultValue) {\n    return (opt != null) ? value(opt) : defaultValue;\n}\nexport function defaultArgWith(opt, defThunk) {\n    return (opt != null) ? value(opt) : defThunk();\n}\nexport function orElse(opt, ifNone) {\n    return opt == null ? ifNone : opt;\n}\nexport function orElseWith(opt, ifNoneThunk) {\n    return opt == null ? ifNoneThunk() : opt;\n}\nexport function filter(predicate, opt) {\n    return (opt != null) ? (predicate(value(opt)) ? opt : undefined) : opt;\n}\nexport function map(mapping, opt) {\n    return (opt != null) ? some(mapping(value(opt))) : undefined;\n}\nexport function map2(mapping, opt1, opt2) {\n    return (opt1 != null && opt2 != null) ? mapping(value(opt1), value(opt2)) : undefined;\n}\nexport function map3(mapping, opt1, opt2, opt3) {\n    return (opt1 != null && opt2 != null && opt3 != null) ? mapping(value(opt1), value(opt2), value(opt3)) : undefined;\n}\nexport function bind(binder, opt) {\n    return opt != null ? binder(value(opt)) : undefined;\n}\nexport function tryOp(op, arg) {\n    try {\n        return some(op(arg));\n    }\n    catch (_a) {\n        return undefined;\n    }\n}\n","import { join } from \"./String.js\";\r\nimport { uncurry, disposeSafe, isArrayLike, getEnumerator, toIterator, compare, structuralHash, equals } from \"./Util.js\";\r\nimport { Record } from \"./Types.js\";\r\nimport { class_type, record_type, option_type } from \"./Reflection.js\";\r\nimport { SR_inputSequenceTooLong, SR_inputSequenceEmpty, SR_inputMustBeNonNegative, SR_notEnoughElements, SR_differentLengths, SR_keyNotFoundAlt, SR_indexOutOfBounds, SR_inputWasEmpty } from \"./Global.js\";\r\nimport { defaultArg, value as value_1, some } from \"./Option.js\";\r\nimport { transpose as transpose_1, splitInto as splitInto_1, windowed as windowed_1, pairwise as pairwise_1, chunkBySize as chunkBySize_1, map as map_1, permute as permute_1, tryFindIndexBack as tryFindIndexBack_1, tryFindBack as tryFindBack_1, scanBack as scanBack_1, foldBack2 as foldBack2_1, foldBack as foldBack_1, fill } from \"./Array.js\";\r\n\r\nexport class FSharpList extends Record {\r\n    constructor(head, tail) {\r\n        super();\r\n        this.head = head;\r\n        this.tail = tail;\r\n    }\r\n    toString() {\r\n        const xs = this;\r\n        return (\"[\" + join(\"; \", xs)) + \"]\";\r\n    }\r\n    Equals(other) {\r\n        const xs = this;\r\n        if (xs === other) {\r\n            return true;\r\n        }\r\n        else {\r\n            const loop = (xs_1_mut, ys_1_mut) => {\r\n                loop:\r\n                while (true) {\r\n                    const xs_1 = xs_1_mut, ys_1 = ys_1_mut;\r\n                    const matchValue = [xs_1.tail, ys_1.tail];\r\n                    if (matchValue[0] != null) {\r\n                        if (matchValue[1] != null) {\r\n                            const xt = matchValue[0];\r\n                            const yt = matchValue[1];\r\n                            if (equals(xs_1.head, ys_1.head)) {\r\n                                xs_1_mut = xt;\r\n                                ys_1_mut = yt;\r\n                                continue loop;\r\n                            }\r\n                            else {\r\n                                return false;\r\n                            }\r\n                        }\r\n                        else {\r\n                            return false;\r\n                        }\r\n                    }\r\n                    else if (matchValue[1] != null) {\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        return true;\r\n                    }\r\n                    break;\r\n                }\r\n            };\r\n            return loop(xs, other);\r\n        }\r\n    }\r\n    GetHashCode() {\r\n        const xs = this;\r\n        const loop = (i_mut, h_mut, xs_1_mut) => {\r\n            loop:\r\n            while (true) {\r\n                const i = i_mut, h = h_mut, xs_1 = xs_1_mut;\r\n                const matchValue = xs_1.tail;\r\n                if (matchValue != null) {\r\n                    const t = matchValue;\r\n                    if (i > 18) {\r\n                        return h | 0;\r\n                    }\r\n                    else {\r\n                        i_mut = (i + 1);\r\n                        h_mut = (((h << 1) + structuralHash(xs_1.head)) + (631 * i));\r\n                        xs_1_mut = t;\r\n                        continue loop;\r\n                    }\r\n                }\r\n                else {\r\n                    return h | 0;\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        return loop(0, 0, xs) | 0;\r\n    }\r\n    toJSON(_key) {\r\n        const this$ = this;\r\n        return Array.from(this$);\r\n    }\r\n    CompareTo(other) {\r\n        const xs = this;\r\n        const loop = (xs_1_mut, ys_1_mut) => {\r\n            loop:\r\n            while (true) {\r\n                const xs_1 = xs_1_mut, ys_1 = ys_1_mut;\r\n                const matchValue = [xs_1.tail, ys_1.tail];\r\n                if (matchValue[0] != null) {\r\n                    if (matchValue[1] != null) {\r\n                        const xt = matchValue[0];\r\n                        const yt = matchValue[1];\r\n                        const c = compare(xs_1.head, ys_1.head) | 0;\r\n                        if (c === 0) {\r\n                            xs_1_mut = xt;\r\n                            ys_1_mut = yt;\r\n                            continue loop;\r\n                        }\r\n                        else {\r\n                            return c | 0;\r\n                        }\r\n                    }\r\n                    else {\r\n                        return 1;\r\n                    }\r\n                }\r\n                else if (matchValue[1] != null) {\r\n                    return -1;\r\n                }\r\n                else {\r\n                    return 0;\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        return loop(xs, other) | 0;\r\n    }\r\n    GetEnumerator() {\r\n        const xs = this;\r\n        return ListEnumerator$1_$ctor_3002E699(xs);\r\n    }\r\n    [Symbol.iterator]() {\r\n        return toIterator(this.GetEnumerator());\r\n    }\r\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\r\n        const xs = this;\r\n        return getEnumerator(xs);\r\n    }\r\n}\r\n\r\nexport function FSharpList$reflection(gen0) {\r\n    return record_type(\"ListModule.FSharpList\", [gen0], FSharpList, () => [[\"head\", gen0], [\"tail\", option_type(FSharpList$reflection(gen0))]]);\r\n}\r\n\r\nexport class ListEnumerator$1 {\r\n    constructor(xs) {\r\n        this.xs = xs;\r\n        this.it = this.xs;\r\n        this.current = null;\r\n    }\r\n    [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\r\n        const __ = this;\r\n        return __.current;\r\n    }\r\n    [\"System.Collections.IEnumerator.get_Current\"]() {\r\n        const __ = this;\r\n        return __.current;\r\n    }\r\n    [\"System.Collections.IEnumerator.MoveNext\"]() {\r\n        const __ = this;\r\n        const matchValue = __.it.tail;\r\n        if (matchValue != null) {\r\n            const t = matchValue;\r\n            __.current = __.it.head;\r\n            __.it = t;\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    [\"System.Collections.IEnumerator.Reset\"]() {\r\n        const __ = this;\r\n        __.it = __.xs;\r\n        __.current = null;\r\n    }\r\n    Dispose() {\r\n    }\r\n}\r\n\r\nexport function ListEnumerator$1$reflection(gen0) {\r\n    return class_type(\"ListModule.ListEnumerator`1\", [gen0], ListEnumerator$1);\r\n}\r\n\r\nexport function ListEnumerator$1_$ctor_3002E699(xs) {\r\n    return new ListEnumerator$1(xs);\r\n}\r\n\r\nexport function FSharpList_get_Empty() {\r\n    return new FSharpList(null, void 0);\r\n}\r\n\r\nexport function FSharpList_Cons_305B8EAC(x, xs) {\r\n    return new FSharpList(x, xs);\r\n}\r\n\r\nexport function FSharpList__get_IsEmpty(xs) {\r\n    return xs.tail == null;\r\n}\r\n\r\nexport function FSharpList__get_Length(xs) {\r\n    const loop = (i_mut, xs_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, xs_1 = xs_1_mut;\r\n            const matchValue = xs_1.tail;\r\n            if (matchValue != null) {\r\n                i_mut = (i + 1);\r\n                xs_1_mut = matchValue;\r\n                continue loop;\r\n            }\r\n            else {\r\n                return i | 0;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0, xs) | 0;\r\n}\r\n\r\nexport function FSharpList__get_Head(xs) {\r\n    const matchValue = xs.tail;\r\n    if (matchValue != null) {\r\n        return xs.head;\r\n    }\r\n    else {\r\n        throw (new Error((SR_inputWasEmpty + \"\\\\nParameter name: \") + \"list\"));\r\n    }\r\n}\r\n\r\nexport function FSharpList__get_Tail(xs) {\r\n    const matchValue = xs.tail;\r\n    if (matchValue != null) {\r\n        return matchValue;\r\n    }\r\n    else {\r\n        throw (new Error((SR_inputWasEmpty + \"\\\\nParameter name: \") + \"list\"));\r\n    }\r\n}\r\n\r\nexport function FSharpList__get_Item_Z524259A4(xs, index) {\r\n    const loop = (i_mut, xs_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, xs_1 = xs_1_mut;\r\n            const matchValue = xs_1.tail;\r\n            if (matchValue != null) {\r\n                if (i === index) {\r\n                    return xs_1.head;\r\n                }\r\n                else {\r\n                    i_mut = (i + 1);\r\n                    xs_1_mut = matchValue;\r\n                    continue loop;\r\n                }\r\n            }\r\n            else {\r\n                throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0, xs);\r\n}\r\n\r\nexport function empty() {\r\n    return FSharpList_get_Empty();\r\n}\r\n\r\nexport function cons(x, xs) {\r\n    return FSharpList_Cons_305B8EAC(x, xs);\r\n}\r\n\r\nexport function singleton(x) {\r\n    return FSharpList_Cons_305B8EAC(x, FSharpList_get_Empty());\r\n}\r\n\r\nexport function isEmpty(xs) {\r\n    return FSharpList__get_IsEmpty(xs);\r\n}\r\n\r\nexport function length(xs) {\r\n    return FSharpList__get_Length(xs);\r\n}\r\n\r\nexport function head(xs) {\r\n    return FSharpList__get_Head(xs);\r\n}\r\n\r\nexport function tryHead(xs) {\r\n    if (FSharpList__get_IsEmpty(xs)) {\r\n        return void 0;\r\n    }\r\n    else {\r\n        return some(FSharpList__get_Head(xs));\r\n    }\r\n}\r\n\r\nexport function tail(xs) {\r\n    return FSharpList__get_Tail(xs);\r\n}\r\n\r\nexport function tryLast(xs_mut) {\r\n    tryLast:\r\n    while (true) {\r\n        const xs = xs_mut;\r\n        if (FSharpList__get_IsEmpty(xs)) {\r\n            return void 0;\r\n        }\r\n        else {\r\n            const t = FSharpList__get_Tail(xs);\r\n            if (FSharpList__get_IsEmpty(t)) {\r\n                return some(FSharpList__get_Head(xs));\r\n            }\r\n            else {\r\n                xs_mut = t;\r\n                continue tryLast;\r\n            }\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function last(xs) {\r\n    const matchValue = tryLast(xs);\r\n    if (matchValue == null) {\r\n        throw (new Error(SR_inputWasEmpty));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function compareWith(comparer, xs, ys) {\r\n    const loop = (xs_1_mut, ys_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const xs_1 = xs_1_mut, ys_1 = ys_1_mut;\r\n            const matchValue = [FSharpList__get_IsEmpty(xs_1), FSharpList__get_IsEmpty(ys_1)];\r\n            if (matchValue[0]) {\r\n                if (matchValue[1]) {\r\n                    return 0;\r\n                }\r\n                else {\r\n                    return -1;\r\n                }\r\n            }\r\n            else if (matchValue[1]) {\r\n                return 1;\r\n            }\r\n            else {\r\n                const c = comparer(FSharpList__get_Head(xs_1), FSharpList__get_Head(ys_1)) | 0;\r\n                if (c === 0) {\r\n                    xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                    ys_1_mut = FSharpList__get_Tail(ys_1);\r\n                    continue loop;\r\n                }\r\n                else {\r\n                    return c | 0;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(xs, ys) | 0;\r\n}\r\n\r\nexport function toArray(xs) {\r\n    const len = FSharpList__get_Length(xs) | 0;\r\n    const res = fill(new Array(len), 0, len, null);\r\n    const loop = (i_mut, xs_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, xs_1 = xs_1_mut;\r\n            if (!FSharpList__get_IsEmpty(xs_1)) {\r\n                res[i] = FSharpList__get_Head(xs_1);\r\n                i_mut = (i + 1);\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    loop(0, xs);\r\n    return res;\r\n}\r\n\r\nexport function fold(folder, state, xs) {\r\n    let acc = state;\r\n    let xs_1 = xs;\r\n    while (!FSharpList__get_IsEmpty(xs_1)) {\r\n        acc = folder(acc, FSharpList__get_Head(xs_1));\r\n        xs_1 = FSharpList__get_Tail(xs_1);\r\n    }\r\n    return acc;\r\n}\r\n\r\nexport function reverse(xs) {\r\n    return fold((acc, x) => FSharpList_Cons_305B8EAC(x, acc), FSharpList_get_Empty(), xs);\r\n}\r\n\r\nexport function foldBack(folder, xs, state) {\r\n    return foldBack_1(folder, toArray(xs), state);\r\n}\r\n\r\nexport function foldIndexed(folder, state, xs) {\r\n    const loop = (i_mut, acc_mut, xs_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, acc = acc_mut, xs_1 = xs_1_mut;\r\n            if (FSharpList__get_IsEmpty(xs_1)) {\r\n                return acc;\r\n            }\r\n            else {\r\n                i_mut = (i + 1);\r\n                acc_mut = folder(i, acc, FSharpList__get_Head(xs_1));\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0, state, xs);\r\n}\r\n\r\nexport function fold2(folder, state, xs, ys) {\r\n    let acc = state;\r\n    let xs_1 = xs;\r\n    let ys_1 = ys;\r\n    while ((!FSharpList__get_IsEmpty(xs_1)) && (!FSharpList__get_IsEmpty(ys_1))) {\r\n        acc = folder(acc, FSharpList__get_Head(xs_1), FSharpList__get_Head(ys_1));\r\n        xs_1 = FSharpList__get_Tail(xs_1);\r\n        ys_1 = FSharpList__get_Tail(ys_1);\r\n    }\r\n    return acc;\r\n}\r\n\r\nexport function foldBack2(folder, xs, ys, state) {\r\n    return foldBack2_1(folder, toArray(xs), toArray(ys), state);\r\n}\r\n\r\nexport function unfold(gen, state) {\r\n    const loop = (acc_mut, node_mut) => {\r\n        let t;\r\n        loop:\r\n        while (true) {\r\n            const acc = acc_mut, node = node_mut;\r\n            const matchValue = gen(acc);\r\n            if (matchValue != null) {\r\n                acc_mut = matchValue[1];\r\n                node_mut = ((t = (new FSharpList(matchValue[0], void 0)), (node.tail = t, t)));\r\n                continue loop;\r\n            }\r\n            else {\r\n                return node;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const root = FSharpList_get_Empty();\r\n    const node_1 = loop(state, root);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node_1.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function iterate(action, xs) {\r\n    fold((unitVar, x) => {\r\n        action(x);\r\n    }, void 0, xs);\r\n}\r\n\r\nexport function iterate2(action, xs, ys) {\r\n    fold2((unitVar, x, y) => {\r\n        action(x, y);\r\n    }, void 0, xs, ys);\r\n}\r\n\r\nexport function iterateIndexed(action, xs) {\r\n    fold((i, x) => {\r\n        action(i, x);\r\n        return (i + 1) | 0;\r\n    }, 0, xs);\r\n}\r\n\r\nexport function iterateIndexed2(action, xs, ys) {\r\n    fold2((i, x, y) => {\r\n        action(i, x, y);\r\n        return (i + 1) | 0;\r\n    }, 0, xs, ys);\r\n}\r\n\r\nexport function toSeq(xs) {\r\n    return xs;\r\n}\r\n\r\nexport function ofArrayWithTail(xs, tail_1) {\r\n    let res = tail_1;\r\n    for (let i = xs.length - 1; i >= 0; i--) {\r\n        res = FSharpList_Cons_305B8EAC(xs[i], res);\r\n    }\r\n    return res;\r\n}\r\n\r\nexport function ofArray(xs) {\r\n    return ofArrayWithTail(xs, FSharpList_get_Empty());\r\n}\r\n\r\nexport function ofSeq(xs) {\r\n    let xs_3, t;\r\n    if (isArrayLike(xs)) {\r\n        return ofArray(xs);\r\n    }\r\n    else if (xs instanceof FSharpList) {\r\n        return xs;\r\n    }\r\n    else {\r\n        const root = FSharpList_get_Empty();\r\n        let node = root;\r\n        const enumerator = getEnumerator(xs);\r\n        try {\r\n            while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                const x = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n                node = ((xs_3 = node, (t = (new FSharpList(x, void 0)), (xs_3.tail = t, t))));\r\n            }\r\n        }\r\n        finally {\r\n            disposeSafe(enumerator);\r\n        }\r\n        const xs_5 = node;\r\n        const t_2 = FSharpList_get_Empty();\r\n        xs_5.tail = t_2;\r\n        return FSharpList__get_Tail(root);\r\n    }\r\n}\r\n\r\nexport function concat(lists) {\r\n    const root = FSharpList_get_Empty();\r\n    let node = root;\r\n    const action = (xs) => {\r\n        node = fold((acc, x) => {\r\n            const t = new FSharpList(x, void 0);\r\n            acc.tail = t;\r\n            return t;\r\n        }, node, xs);\r\n    };\r\n    if (isArrayLike(lists)) {\r\n        lists.forEach(action);\r\n    }\r\n    else if (lists instanceof FSharpList) {\r\n        iterate(action, lists);\r\n    }\r\n    else {\r\n        const enumerator = getEnumerator(lists);\r\n        try {\r\n            while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                action(enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n            }\r\n        }\r\n        finally {\r\n            disposeSafe(enumerator);\r\n        }\r\n    }\r\n    const xs_6 = node;\r\n    const t_2 = FSharpList_get_Empty();\r\n    xs_6.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function scan(folder, state, xs) {\r\n    let xs_4, t_2;\r\n    const root = FSharpList_get_Empty();\r\n    let node;\r\n    const t = new FSharpList(state, void 0);\r\n    root.tail = t;\r\n    node = t;\r\n    let acc = state;\r\n    let xs_3 = xs;\r\n    while (!FSharpList__get_IsEmpty(xs_3)) {\r\n        acc = folder(acc, FSharpList__get_Head(xs_3));\r\n        node = ((xs_4 = node, (t_2 = (new FSharpList(acc, void 0)), (xs_4.tail = t_2, t_2))));\r\n        xs_3 = FSharpList__get_Tail(xs_3);\r\n    }\r\n    const xs_6 = node;\r\n    const t_4 = FSharpList_get_Empty();\r\n    xs_6.tail = t_4;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function scanBack(folder, xs, state) {\r\n    return ofArray(scanBack_1(folder, toArray(xs), state));\r\n}\r\n\r\nexport function append(xs, ys) {\r\n    return fold((acc, x) => FSharpList_Cons_305B8EAC(x, acc), ys, reverse(xs));\r\n}\r\n\r\nexport function collect(mapping, xs) {\r\n    let xs_1, t;\r\n    const root = FSharpList_get_Empty();\r\n    let node = root;\r\n    let ys = xs;\r\n    while (!FSharpList__get_IsEmpty(ys)) {\r\n        let zs = mapping(FSharpList__get_Head(ys));\r\n        while (!FSharpList__get_IsEmpty(zs)) {\r\n            node = ((xs_1 = node, (t = (new FSharpList(FSharpList__get_Head(zs), void 0)), (xs_1.tail = t, t))));\r\n            zs = FSharpList__get_Tail(zs);\r\n        }\r\n        ys = FSharpList__get_Tail(ys);\r\n    }\r\n    const xs_3 = node;\r\n    const t_2 = FSharpList_get_Empty();\r\n    xs_3.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function mapIndexed(mapping, xs) {\r\n    const root = FSharpList_get_Empty();\r\n    const node = foldIndexed((i, acc, x) => {\r\n        const t = new FSharpList(mapping(i, x), void 0);\r\n        acc.tail = t;\r\n        return t;\r\n    }, root, xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function map(mapping, xs) {\r\n    const root = FSharpList_get_Empty();\r\n    const node = fold((acc, x) => {\r\n        const t = new FSharpList(mapping(x), void 0);\r\n        acc.tail = t;\r\n        return t;\r\n    }, root, xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function indexed(xs) {\r\n    return mapIndexed((i, x) => [i, x], xs);\r\n}\r\n\r\nexport function map2(mapping, xs, ys) {\r\n    const root = FSharpList_get_Empty();\r\n    const node = fold2((acc, x, y) => {\r\n        const t = new FSharpList(mapping(x, y), void 0);\r\n        acc.tail = t;\r\n        return t;\r\n    }, root, xs, ys);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function mapIndexed2(mapping, xs, ys) {\r\n    const loop = (i_mut, acc_mut, xs_1_mut, ys_1_mut) => {\r\n        let t;\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, acc = acc_mut, xs_1 = xs_1_mut, ys_1 = ys_1_mut;\r\n            if (FSharpList__get_IsEmpty(xs_1) ? true : FSharpList__get_IsEmpty(ys_1)) {\r\n                return acc;\r\n            }\r\n            else {\r\n                i_mut = (i + 1);\r\n                acc_mut = ((t = (new FSharpList(mapping(i, FSharpList__get_Head(xs_1), FSharpList__get_Head(ys_1)), void 0)), (acc.tail = t, t)));\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                ys_1_mut = FSharpList__get_Tail(ys_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const root = FSharpList_get_Empty();\r\n    const node_1 = loop(0, root, xs, ys);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node_1.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function map3(mapping, xs, ys, zs) {\r\n    const loop = (acc_mut, xs_1_mut, ys_1_mut, zs_1_mut) => {\r\n        let t;\r\n        loop:\r\n        while (true) {\r\n            const acc = acc_mut, xs_1 = xs_1_mut, ys_1 = ys_1_mut, zs_1 = zs_1_mut;\r\n            if ((FSharpList__get_IsEmpty(xs_1) ? true : FSharpList__get_IsEmpty(ys_1)) ? true : FSharpList__get_IsEmpty(zs_1)) {\r\n                return acc;\r\n            }\r\n            else {\r\n                acc_mut = ((t = (new FSharpList(mapping(FSharpList__get_Head(xs_1), FSharpList__get_Head(ys_1), FSharpList__get_Head(zs_1)), void 0)), (acc.tail = t, t)));\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                ys_1_mut = FSharpList__get_Tail(ys_1);\r\n                zs_1_mut = FSharpList__get_Tail(zs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const root = FSharpList_get_Empty();\r\n    const node_1 = loop(root, xs, ys, zs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node_1.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function mapFold(mapping, state, xs) {\r\n    const root = FSharpList_get_Empty();\r\n    const patternInput_1 = fold((tupledArg, x) => {\r\n        let t;\r\n        const patternInput = mapping(tupledArg[1], x);\r\n        return [(t = (new FSharpList(patternInput[0], void 0)), (tupledArg[0].tail = t, t)), patternInput[1]];\r\n    }, [root, state], xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    patternInput_1[0].tail = t_2;\r\n    return [FSharpList__get_Tail(root), patternInput_1[1]];\r\n}\r\n\r\nexport function mapFoldBack(mapping, xs, state) {\r\n    return mapFold((acc, x) => mapping(x, acc), state, reverse(xs));\r\n}\r\n\r\nexport function tryPick(f, xs) {\r\n    const loop = (xs_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const xs_1 = xs_1_mut;\r\n            if (FSharpList__get_IsEmpty(xs_1)) {\r\n                return void 0;\r\n            }\r\n            else {\r\n                const matchValue = f(FSharpList__get_Head(xs_1));\r\n                if (matchValue == null) {\r\n                    xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                    continue loop;\r\n                }\r\n                else {\r\n                    return matchValue;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(xs);\r\n}\r\n\r\nexport function pick(f, xs) {\r\n    const matchValue = tryPick(f, xs);\r\n    if (matchValue == null) {\r\n        throw (new Error(SR_keyNotFoundAlt));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function tryFind(f, xs) {\r\n    return tryPick((x) => (f(x) ? some(x) : (void 0)), xs);\r\n}\r\n\r\nexport function find(f, xs) {\r\n    const matchValue = tryFind(f, xs);\r\n    if (matchValue == null) {\r\n        throw (new Error(SR_keyNotFoundAlt));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function tryFindBack(f, xs) {\r\n    return tryFindBack_1(f, toArray(xs));\r\n}\r\n\r\nexport function findBack(f, xs) {\r\n    const matchValue = tryFindBack(f, xs);\r\n    if (matchValue == null) {\r\n        throw (new Error(SR_keyNotFoundAlt));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function tryFindIndex(f, xs) {\r\n    const loop = (i_mut, xs_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, xs_1 = xs_1_mut;\r\n            if (FSharpList__get_IsEmpty(xs_1)) {\r\n                return void 0;\r\n            }\r\n            else if (f(FSharpList__get_Head(xs_1))) {\r\n                return i;\r\n            }\r\n            else {\r\n                i_mut = (i + 1);\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0, xs);\r\n}\r\n\r\nexport function findIndex(f, xs) {\r\n    const matchValue = tryFindIndex(f, xs);\r\n    if (matchValue == null) {\r\n        throw (new Error(SR_keyNotFoundAlt));\r\n    }\r\n    else {\r\n        return matchValue | 0;\r\n    }\r\n}\r\n\r\nexport function tryFindIndexBack(f, xs) {\r\n    return tryFindIndexBack_1(f, toArray(xs));\r\n}\r\n\r\nexport function findIndexBack(f, xs) {\r\n    const matchValue = tryFindIndexBack(f, xs);\r\n    if (matchValue == null) {\r\n        throw (new Error(SR_keyNotFoundAlt));\r\n    }\r\n    else {\r\n        return matchValue | 0;\r\n    }\r\n}\r\n\r\nexport function tryItem(n, xs) {\r\n    const loop = (i_mut, xs_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, xs_1 = xs_1_mut;\r\n            if (FSharpList__get_IsEmpty(xs_1)) {\r\n                return void 0;\r\n            }\r\n            else if (i === n) {\r\n                return some(FSharpList__get_Head(xs_1));\r\n            }\r\n            else {\r\n                i_mut = (i + 1);\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0, xs);\r\n}\r\n\r\nexport function item(n, xs) {\r\n    return FSharpList__get_Item_Z524259A4(xs, n);\r\n}\r\n\r\nexport function filter(f, xs) {\r\n    const root = FSharpList_get_Empty();\r\n    const node = fold((acc, x) => {\r\n        if (f(x)) {\r\n            const t = new FSharpList(x, void 0);\r\n            acc.tail = t;\r\n            return t;\r\n        }\r\n        else {\r\n            return acc;\r\n        }\r\n    }, root, xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function partition(f, xs) {\r\n    const patternInput = [FSharpList_get_Empty(), FSharpList_get_Empty()];\r\n    const root2 = patternInput[1];\r\n    const root1 = patternInput[0];\r\n    const patternInput_1 = fold(uncurry(2, (tupledArg) => {\r\n        const lacc = tupledArg[0];\r\n        const racc = tupledArg[1];\r\n        return (x) => {\r\n            let t, t_2;\r\n            return f(x) ? [(t = (new FSharpList(x, void 0)), (lacc.tail = t, t)), racc] : [lacc, (t_2 = (new FSharpList(x, void 0)), (racc.tail = t_2, t_2))];\r\n        };\r\n    }), [root1, root2], xs);\r\n    const t_4 = FSharpList_get_Empty();\r\n    patternInput_1[0].tail = t_4;\r\n    const t_5 = FSharpList_get_Empty();\r\n    patternInput_1[1].tail = t_5;\r\n    return [FSharpList__get_Tail(root1), FSharpList__get_Tail(root2)];\r\n}\r\n\r\nexport function choose(f, xs) {\r\n    const root = FSharpList_get_Empty();\r\n    const node = fold((acc, x) => {\r\n        const matchValue = f(x);\r\n        if (matchValue == null) {\r\n            return acc;\r\n        }\r\n        else {\r\n            const t = new FSharpList(value_1(matchValue), void 0);\r\n            acc.tail = t;\r\n            return t;\r\n        }\r\n    }, root, xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function contains(value, xs, eq) {\r\n    return tryFindIndex((v) => eq.Equals(value, v), xs) != null;\r\n}\r\n\r\nexport function initialize(n, f) {\r\n    let xs, t;\r\n    const root = FSharpList_get_Empty();\r\n    let node = root;\r\n    for (let i = 0; i <= (n - 1); i++) {\r\n        node = ((xs = node, (t = (new FSharpList(f(i), void 0)), (xs.tail = t, t))));\r\n    }\r\n    const xs_2 = node;\r\n    const t_2 = FSharpList_get_Empty();\r\n    xs_2.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function replicate(n, x) {\r\n    return initialize(n, (_arg) => x);\r\n}\r\n\r\nexport function reduce(f, xs) {\r\n    if (FSharpList__get_IsEmpty(xs)) {\r\n        throw (new Error(SR_inputWasEmpty));\r\n    }\r\n    else {\r\n        return fold(f, head(xs), tail(xs));\r\n    }\r\n}\r\n\r\nexport function reduceBack(f, xs) {\r\n    if (FSharpList__get_IsEmpty(xs)) {\r\n        throw (new Error(SR_inputWasEmpty));\r\n    }\r\n    else {\r\n        return foldBack(f, tail(xs), head(xs));\r\n    }\r\n}\r\n\r\nexport function forAll(f, xs) {\r\n    return fold((acc, x) => (acc && f(x)), true, xs);\r\n}\r\n\r\nexport function forAll2(f, xs, ys) {\r\n    return fold2((acc, x, y) => (acc && f(x, y)), true, xs, ys);\r\n}\r\n\r\nexport function exists(f, xs) {\r\n    return tryFindIndex(f, xs) != null;\r\n}\r\n\r\nexport function exists2(f_mut, xs_mut, ys_mut) {\r\n    exists2:\r\n    while (true) {\r\n        const f = f_mut, xs = xs_mut, ys = ys_mut;\r\n        const matchValue = [FSharpList__get_IsEmpty(xs), FSharpList__get_IsEmpty(ys)];\r\n        let pattern_matching_result;\r\n        if (matchValue[0]) {\r\n            if (matchValue[1]) {\r\n                pattern_matching_result = 0;\r\n            }\r\n            else {\r\n                pattern_matching_result = 2;\r\n            }\r\n        }\r\n        else if (matchValue[1]) {\r\n            pattern_matching_result = 2;\r\n        }\r\n        else {\r\n            pattern_matching_result = 1;\r\n        }\r\n        switch (pattern_matching_result) {\r\n            case 0: {\r\n                return false;\r\n            }\r\n            case 1: {\r\n                if (f(FSharpList__get_Head(xs), FSharpList__get_Head(ys))) {\r\n                    return true;\r\n                }\r\n                else {\r\n                    f_mut = f;\r\n                    xs_mut = FSharpList__get_Tail(xs);\r\n                    ys_mut = FSharpList__get_Tail(ys);\r\n                    continue exists2;\r\n                }\r\n            }\r\n            case 2: {\r\n                throw (new Error((SR_differentLengths + \"\\\\nParameter name: \") + \"list2\"));\r\n            }\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function unzip(xs) {\r\n    return foldBack((tupledArg, tupledArg_1) => [FSharpList_Cons_305B8EAC(tupledArg[0], tupledArg_1[0]), FSharpList_Cons_305B8EAC(tupledArg[1], tupledArg_1[1])], xs, [FSharpList_get_Empty(), FSharpList_get_Empty()]);\r\n}\r\n\r\nexport function unzip3(xs) {\r\n    return foldBack((tupledArg, tupledArg_1) => [FSharpList_Cons_305B8EAC(tupledArg[0], tupledArg_1[0]), FSharpList_Cons_305B8EAC(tupledArg[1], tupledArg_1[1]), FSharpList_Cons_305B8EAC(tupledArg[2], tupledArg_1[2])], xs, [FSharpList_get_Empty(), FSharpList_get_Empty(), FSharpList_get_Empty()]);\r\n}\r\n\r\nexport function zip(xs, ys) {\r\n    return map2((x, y) => [x, y], xs, ys);\r\n}\r\n\r\nexport function zip3(xs, ys, zs) {\r\n    return map3((x, y, z) => [x, y, z], xs, ys, zs);\r\n}\r\n\r\nexport function sortWith(comparer, xs) {\r\n    const arr = toArray(xs);\r\n    arr.sort(comparer);\r\n    return ofArray(arr);\r\n}\r\n\r\nexport function sort(xs, comparer) {\r\n    return sortWith((x, y) => comparer.Compare(x, y), xs);\r\n}\r\n\r\nexport function sortBy(projection, xs, comparer) {\r\n    return sortWith((x, y) => comparer.Compare(projection(x), projection(y)), xs);\r\n}\r\n\r\nexport function sortDescending(xs, comparer) {\r\n    return sortWith((x, y) => (comparer.Compare(x, y) * -1), xs);\r\n}\r\n\r\nexport function sortByDescending(projection, xs, comparer) {\r\n    return sortWith((x, y) => (comparer.Compare(projection(x), projection(y)) * -1), xs);\r\n}\r\n\r\nexport function sum(xs, adder) {\r\n    return fold((acc, x) => adder.Add(acc, x), adder.GetZero(), xs);\r\n}\r\n\r\nexport function sumBy(f, xs, adder) {\r\n    return fold((acc, x) => adder.Add(acc, f(x)), adder.GetZero(), xs);\r\n}\r\n\r\nexport function maxBy(projection, xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? y : x), xs);\r\n}\r\n\r\nexport function max(xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? y : x), xs);\r\n}\r\n\r\nexport function minBy(projection, xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? x : y), xs);\r\n}\r\n\r\nexport function min(xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? x : y), xs);\r\n}\r\n\r\nexport function average(xs, averager) {\r\n    let count = 0;\r\n    const total = fold((acc, x) => {\r\n        count = ((count + 1) | 0);\r\n        return averager.Add(acc, x);\r\n    }, averager.GetZero(), xs);\r\n    return averager.DivideByInt(total, count);\r\n}\r\n\r\nexport function averageBy(f, xs, averager) {\r\n    let count = 0;\r\n    const total = fold((acc, x) => {\r\n        count = ((count + 1) | 0);\r\n        return averager.Add(acc, f(x));\r\n    }, averager.GetZero(), xs);\r\n    return averager.DivideByInt(total, count);\r\n}\r\n\r\nexport function permute(f, xs) {\r\n    return ofArray(permute_1(f, toArray(xs)));\r\n}\r\n\r\nexport function chunkBySize(chunkSize, xs) {\r\n    return ofArray(map_1(ofArray, chunkBySize_1(chunkSize, toArray(xs))));\r\n}\r\n\r\nexport function allPairs(xs, ys) {\r\n    const root = FSharpList_get_Empty();\r\n    let node = root;\r\n    iterate((x) => {\r\n        iterate((y) => {\r\n            let xs_1, t;\r\n            node = ((xs_1 = node, (t = (new FSharpList([x, y], void 0)), (xs_1.tail = t, t))));\r\n        }, ys);\r\n    }, xs);\r\n    const xs_3 = node;\r\n    const t_2 = FSharpList_get_Empty();\r\n    xs_3.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function skip(count_mut, xs_mut) {\r\n    skip:\r\n    while (true) {\r\n        const count = count_mut, xs = xs_mut;\r\n        if (count <= 0) {\r\n            return xs;\r\n        }\r\n        else if (FSharpList__get_IsEmpty(xs)) {\r\n            throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"list\"));\r\n        }\r\n        else {\r\n            count_mut = (count - 1);\r\n            xs_mut = FSharpList__get_Tail(xs);\r\n            continue skip;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function skipWhile(predicate_mut, xs_mut) {\r\n    skipWhile:\r\n    while (true) {\r\n        const predicate = predicate_mut, xs = xs_mut;\r\n        if (FSharpList__get_IsEmpty(xs)) {\r\n            return xs;\r\n        }\r\n        else if (!predicate(FSharpList__get_Head(xs))) {\r\n            return xs;\r\n        }\r\n        else {\r\n            predicate_mut = predicate;\r\n            xs_mut = FSharpList__get_Tail(xs);\r\n            continue skipWhile;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function take(count, xs) {\r\n    if (count < 0) {\r\n        throw (new Error((SR_inputMustBeNonNegative + \"\\\\nParameter name: \") + \"count\"));\r\n    }\r\n    const loop = (i_mut, acc_mut, xs_1_mut) => {\r\n        let t;\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, acc = acc_mut, xs_1 = xs_1_mut;\r\n            if (i <= 0) {\r\n                return acc;\r\n            }\r\n            else if (FSharpList__get_IsEmpty(xs_1)) {\r\n                throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"list\"));\r\n            }\r\n            else {\r\n                i_mut = (i - 1);\r\n                acc_mut = ((t = (new FSharpList(FSharpList__get_Head(xs_1), void 0)), (acc.tail = t, t)));\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const root = FSharpList_get_Empty();\r\n    const node = loop(count, root, xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function takeWhile(predicate, xs) {\r\n    const loop = (acc_mut, xs_1_mut) => {\r\n        let t;\r\n        loop:\r\n        while (true) {\r\n            const acc = acc_mut, xs_1 = xs_1_mut;\r\n            if (FSharpList__get_IsEmpty(xs_1)) {\r\n                return acc;\r\n            }\r\n            else if (!predicate(FSharpList__get_Head(xs_1))) {\r\n                return acc;\r\n            }\r\n            else {\r\n                acc_mut = ((t = (new FSharpList(FSharpList__get_Head(xs_1), void 0)), (acc.tail = t, t)));\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const root = FSharpList_get_Empty();\r\n    const node = loop(root, xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function truncate(count, xs) {\r\n    const loop = (i_mut, acc_mut, xs_1_mut) => {\r\n        let t;\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, acc = acc_mut, xs_1 = xs_1_mut;\r\n            if (i <= 0) {\r\n                return acc;\r\n            }\r\n            else if (FSharpList__get_IsEmpty(xs_1)) {\r\n                return acc;\r\n            }\r\n            else {\r\n                i_mut = (i - 1);\r\n                acc_mut = ((t = (new FSharpList(FSharpList__get_Head(xs_1), void 0)), (acc.tail = t, t)));\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const root = FSharpList_get_Empty();\r\n    const node = loop(count, root, xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function getSlice(startIndex, endIndex, xs) {\r\n    const len = length(xs) | 0;\r\n    const startIndex_1 = defaultArg(startIndex, 0) | 0;\r\n    const endIndex_1 = defaultArg(endIndex, len - 1) | 0;\r\n    if (startIndex_1 < 0) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"startIndex\"));\r\n    }\r\n    else if (endIndex_1 >= len) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"endIndex\"));\r\n    }\r\n    else if (endIndex_1 < startIndex_1) {\r\n        return FSharpList_get_Empty();\r\n    }\r\n    else {\r\n        return take((endIndex_1 - startIndex_1) + 1, skip(startIndex_1, xs));\r\n    }\r\n}\r\n\r\nexport function splitAt(index, xs) {\r\n    if (index < 0) {\r\n        throw (new Error((SR_inputMustBeNonNegative + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    if (index > FSharpList__get_Length(xs)) {\r\n        throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    return [take(index, xs), skip(index, xs)];\r\n}\r\n\r\nexport function exactlyOne(xs) {\r\n    if (FSharpList__get_IsEmpty(xs)) {\r\n        throw (new Error((SR_inputSequenceEmpty + \"\\\\nParameter name: \") + \"list\"));\r\n    }\r\n    else if (FSharpList__get_IsEmpty(FSharpList__get_Tail(xs))) {\r\n        return FSharpList__get_Head(xs);\r\n    }\r\n    else {\r\n        throw (new Error((SR_inputSequenceTooLong + \"\\\\nParameter name: \") + \"list\"));\r\n    }\r\n}\r\n\r\nexport function tryExactlyOne(xs) {\r\n    if ((!FSharpList__get_IsEmpty(xs)) && FSharpList__get_IsEmpty(FSharpList__get_Tail(xs))) {\r\n        return some(FSharpList__get_Head(xs));\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function where(predicate, xs) {\r\n    return filter(predicate, xs);\r\n}\r\n\r\nexport function pairwise(xs) {\r\n    return ofArray(pairwise_1(toArray(xs)));\r\n}\r\n\r\nexport function windowed(windowSize, xs) {\r\n    return ofArray(map_1(ofArray, windowed_1(windowSize, toArray(xs))));\r\n}\r\n\r\nexport function splitInto(chunks, xs) {\r\n    return ofArray(map_1(ofArray, splitInto_1(chunks, toArray(xs))));\r\n}\r\n\r\nexport function transpose(lists) {\r\n    return ofArray(map_1(ofArray, transpose_1(map_1(toArray, Array.from(lists)))));\r\n}\r\n\r\nexport function insertAt(index, y, xs) {\r\n    let i = -1;\r\n    let isDone = false;\r\n    const result = fold((acc, x) => {\r\n        i = ((i + 1) | 0);\r\n        if (i === index) {\r\n            isDone = true;\r\n            return FSharpList_Cons_305B8EAC(x, FSharpList_Cons_305B8EAC(y, acc));\r\n        }\r\n        else {\r\n            return FSharpList_Cons_305B8EAC(x, acc);\r\n        }\r\n    }, FSharpList_get_Empty(), xs);\r\n    return reverse(isDone ? result : (((i + 1) === index) ? FSharpList_Cons_305B8EAC(y, result) : (() => {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n    })()));\r\n}\r\n\r\nexport function insertManyAt(index, ys, xs) {\r\n    let i = -1;\r\n    let isDone = false;\r\n    const ys_1 = ofSeq(ys);\r\n    const result = fold((acc, x) => {\r\n        i = ((i + 1) | 0);\r\n        if (i === index) {\r\n            isDone = true;\r\n            return FSharpList_Cons_305B8EAC(x, append(ys_1, acc));\r\n        }\r\n        else {\r\n            return FSharpList_Cons_305B8EAC(x, acc);\r\n        }\r\n    }, FSharpList_get_Empty(), xs);\r\n    return reverse(isDone ? result : (((i + 1) === index) ? append(ys_1, result) : (() => {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n    })()));\r\n}\r\n\r\nexport function removeAt(index, xs) {\r\n    let i = -1;\r\n    let isDone = false;\r\n    const ys = filter((_arg) => {\r\n        i = ((i + 1) | 0);\r\n        if (i === index) {\r\n            isDone = true;\r\n            return false;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }, xs);\r\n    if (!isDone) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    return ys;\r\n}\r\n\r\nexport function removeManyAt(index, count, xs) {\r\n    let i = -1;\r\n    let status = -1;\r\n    const ys = filter((_arg) => {\r\n        i = ((i + 1) | 0);\r\n        if (i === index) {\r\n            status = 0;\r\n            return false;\r\n        }\r\n        else if (i > index) {\r\n            if (i < (index + count)) {\r\n                return false;\r\n            }\r\n            else {\r\n                status = 1;\r\n                return true;\r\n            }\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }, xs);\r\n    const status_1 = (((status === 0) && ((i + 1) === (index + count))) ? 1 : status) | 0;\r\n    if (status_1 < 1) {\r\n        const arg = (status_1 < 0) ? \"index\" : \"count\";\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + arg));\r\n    }\r\n    return ys;\r\n}\r\n\r\nexport function updateAt(index, y, xs) {\r\n    let isDone = false;\r\n    const ys = mapIndexed((i, x) => {\r\n        if (i === index) {\r\n            isDone = true;\r\n            return y;\r\n        }\r\n        else {\r\n            return x;\r\n        }\r\n    }, xs);\r\n    if (!isDone) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    return ys;\r\n}\r\n\r\n","import { singleton, concat, map, empty, iterate } from \"../fable-library.3.7.18/List.js\";\nimport { singleton as singleton_1 } from \"../fable-library.3.7.18/AsyncBuilder.js\";\nimport { startImmediate, catchAsync } from \"../fable-library.3.7.18/Async.js\";\nimport { Timer_delay } from \"./prelude.fs.js\";\n\nexport function Cmd_exec(onError, dispatch, cmd) {\n    iterate((call) => {\n        try {\n            call(dispatch);\n        }\n        catch (ex) {\n            onError(ex);\n        }\n    }, cmd);\n}\n\nexport function Cmd_none() {\n    return empty();\n}\n\nexport function Cmd_map(f, cmd) {\n    return map((g) => ((arg_1) => {\n        g((arg) => {\n            arg_1(f(arg));\n        });\n    }), cmd);\n}\n\nexport function Cmd_batch(cmds) {\n    return concat(cmds);\n}\n\nexport function Cmd_ofSub(sub) {\n    return singleton(sub);\n}\n\nexport function Cmd_OfFunc_either(task, arg, ofSuccess, ofError) {\n    return singleton((dispatch) => {\n        try {\n            return dispatch(ofSuccess(task(arg)));\n        }\n        catch (x) {\n            return dispatch(ofError(x));\n        }\n    });\n}\n\nexport function Cmd_OfFunc_perform(task, arg, ofSuccess) {\n    return singleton((dispatch) => {\n        try {\n            dispatch(ofSuccess(task(arg)));\n        }\n        catch (x) {\n        }\n    });\n}\n\nexport function Cmd_OfFunc_attempt(task, arg, ofError) {\n    return singleton((dispatch) => {\n        try {\n            task(arg);\n        }\n        catch (x) {\n            dispatch(ofError(x));\n        }\n    });\n}\n\nexport function Cmd_OfFunc_result(msg) {\n    return singleton((dispatch) => {\n        dispatch(msg);\n    });\n}\n\nexport function Cmd_OfAsyncWith_either(start, task, arg, ofSuccess, ofError) {\n    return singleton((arg_2) => {\n        start(singleton_1.Delay(() => singleton_1.Bind(catchAsync(task(arg)), (_arg) => {\n            const r = _arg;\n            arg_2((r.tag === 1) ? ofError(r.fields[0]) : ofSuccess(r.fields[0]));\n            return singleton_1.Zero();\n        })));\n    });\n}\n\nexport function Cmd_OfAsyncWith_perform(start, task, arg, ofSuccess) {\n    return singleton((arg_2) => {\n        start(singleton_1.Delay(() => singleton_1.Bind(catchAsync(task(arg)), (_arg) => {\n            const r = _arg;\n            if (r.tag === 0) {\n                arg_2(ofSuccess(r.fields[0]));\n                return singleton_1.Zero();\n            }\n            else {\n                return singleton_1.Zero();\n            }\n        })));\n    });\n}\n\nexport function Cmd_OfAsyncWith_attempt(start, task, arg, ofError) {\n    return singleton((arg_2) => {\n        start(singleton_1.Delay(() => singleton_1.Bind(catchAsync(task(arg)), (_arg) => {\n            const r = _arg;\n            if (r.tag === 1) {\n                arg_2(ofError(r.fields[0]));\n                return singleton_1.Zero();\n            }\n            else {\n                return singleton_1.Zero();\n            }\n        })));\n    });\n}\n\nexport function Cmd_OfAsyncWith_result(start, task) {\n    return singleton((arg) => {\n        start(singleton_1.Delay(() => singleton_1.Bind(task, (_arg) => {\n            arg(_arg);\n            return singleton_1.Zero();\n        })));\n    });\n}\n\nexport function Cmd_OfAsync_start(x) {\n    Timer_delay(0, (_arg) => {\n        startImmediate(x);\n    });\n}\n\nexport function Cmd_OfPromise_either(task, arg, ofSuccess, ofError) {\n    return singleton((dispatch) => {\n        task(arg).then((arg_1) => dispatch(ofSuccess(arg_1))).catch((arg_3) => dispatch(ofError(arg_3)));\n    });\n}\n\nexport function Cmd_OfPromise_perform(task, arg, ofSuccess) {\n    return singleton((dispatch) => {\n        task(arg).then((arg_1) => dispatch(ofSuccess(arg_1)));\n    });\n}\n\nexport function Cmd_OfPromise_attempt(task, arg, ofError) {\n    return singleton((dispatch) => {\n        task(arg).catch((arg_2) => {\n            dispatch(ofError(arg_2));\n        });\n    });\n}\n\nexport function Cmd_OfPromise_result(task) {\n    return singleton((dispatch) => {\n        task.then(dispatch);\n    });\n}\n\nexport function Cmd_attemptFunc(task, arg, ofError) {\n    return Cmd_OfFunc_attempt(task, arg, ofError);\n}\n\n","import { value as value_2, map as map_1, defaultArg, some } from \"./Option.js\";\r\nimport { min as min_1, disposeSafe, getEnumerator, comparePrimitives, max as max_1 } from \"./Util.js\";\r\nimport { SR_indexOutOfBounds } from \"./Global.js\";\r\n\r\nexport function Helpers_allocateArrayFromCons(cons, len) {\r\n    if ((typeof cons) === \"function\") {\r\n        return new cons(len);\r\n    }\r\n    else {\r\n        return new Array(len);\r\n    }\r\n}\r\n\r\nfunction indexNotFound() {\r\n    throw (new Error(\"An index satisfying the predicate was not found in the collection.\"));\r\n}\r\n\r\nfunction differentLengths() {\r\n    throw (new Error(\"Arrays had different lengths\"));\r\n}\r\n\r\nexport function append(array1, array2, cons) {\r\n    const len1 = array1.length | 0;\r\n    const len2 = array2.length | 0;\r\n    const newArray = Helpers_allocateArrayFromCons(cons, len1 + len2);\r\n    for (let i = 0; i <= (len1 - 1); i++) {\r\n        newArray[i] = array1[i];\r\n    }\r\n    for (let i_1 = 0; i_1 <= (len2 - 1); i_1++) {\r\n        newArray[i_1 + len1] = array2[i_1];\r\n    }\r\n    return newArray;\r\n}\r\n\r\nexport function filter(predicate, array) {\r\n    return array.filter(predicate);\r\n}\r\n\r\nexport function fill(target, targetIndex, count, value) {\r\n    const start = targetIndex | 0;\r\n    return target.fill(value, start, (start + count));\r\n}\r\n\r\nexport function getSubArray(array, start, count) {\r\n    const start_1 = start | 0;\r\n    return array.slice(start_1, (start_1 + count));\r\n}\r\n\r\nexport function last(array) {\r\n    if (array.length === 0) {\r\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\r\n    }\r\n    return array[array.length - 1];\r\n}\r\n\r\nexport function tryLast(array) {\r\n    if (array.length === 0) {\r\n        return void 0;\r\n    }\r\n    else {\r\n        return some(array[array.length - 1]);\r\n    }\r\n}\r\n\r\nexport function mapIndexed(f, source, cons) {\r\n    const len = source.length | 0;\r\n    const target = Helpers_allocateArrayFromCons(cons, len);\r\n    for (let i = 0; i <= (len - 1); i++) {\r\n        target[i] = f(i, source[i]);\r\n    }\r\n    return target;\r\n}\r\n\r\nexport function map(f, source, cons) {\r\n    const len = source.length | 0;\r\n    const target = Helpers_allocateArrayFromCons(cons, len);\r\n    for (let i = 0; i <= (len - 1); i++) {\r\n        target[i] = f(source[i]);\r\n    }\r\n    return target;\r\n}\r\n\r\nexport function mapIndexed2(f, source1, source2, cons) {\r\n    if (source1.length !== source2.length) {\r\n        throw (new Error(\"Arrays had different lengths\"));\r\n    }\r\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\r\n    for (let i = 0; i <= (source1.length - 1); i++) {\r\n        result[i] = f(i, source1[i], source2[i]);\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function map2(f, source1, source2, cons) {\r\n    if (source1.length !== source2.length) {\r\n        throw (new Error(\"Arrays had different lengths\"));\r\n    }\r\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\r\n    for (let i = 0; i <= (source1.length - 1); i++) {\r\n        result[i] = f(source1[i], source2[i]);\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function mapIndexed3(f, source1, source2, source3, cons) {\r\n    if ((source1.length !== source2.length) ? true : (source2.length !== source3.length)) {\r\n        throw (new Error(\"Arrays had different lengths\"));\r\n    }\r\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\r\n    for (let i = 0; i <= (source1.length - 1); i++) {\r\n        result[i] = f(i, source1[i], source2[i], source3[i]);\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function map3(f, source1, source2, source3, cons) {\r\n    if ((source1.length !== source2.length) ? true : (source2.length !== source3.length)) {\r\n        throw (new Error(\"Arrays had different lengths\"));\r\n    }\r\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\r\n    for (let i = 0; i <= (source1.length - 1); i++) {\r\n        result[i] = f(source1[i], source2[i], source3[i]);\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function mapFold(mapping, state, array, cons) {\r\n    const matchValue = array.length | 0;\r\n    if (matchValue === 0) {\r\n        return [[], state];\r\n    }\r\n    else {\r\n        let acc = state;\r\n        const res = Helpers_allocateArrayFromCons(cons, matchValue);\r\n        for (let i = 0; i <= (array.length - 1); i++) {\r\n            const patternInput = mapping(acc, array[i]);\r\n            res[i] = patternInput[0];\r\n            acc = patternInput[1];\r\n        }\r\n        return [res, acc];\r\n    }\r\n}\r\n\r\nexport function mapFoldBack(mapping, array, state, cons) {\r\n    const matchValue = array.length | 0;\r\n    if (matchValue === 0) {\r\n        return [[], state];\r\n    }\r\n    else {\r\n        let acc = state;\r\n        const res = Helpers_allocateArrayFromCons(cons, matchValue);\r\n        for (let i = array.length - 1; i >= 0; i--) {\r\n            const patternInput = mapping(array[i], acc);\r\n            res[i] = patternInput[0];\r\n            acc = patternInput[1];\r\n        }\r\n        return [res, acc];\r\n    }\r\n}\r\n\r\nexport function indexed(source) {\r\n    const len = source.length | 0;\r\n    const target = new Array(len);\r\n    for (let i = 0; i <= (len - 1); i++) {\r\n        target[i] = [i, source[i]];\r\n    }\r\n    return target;\r\n}\r\n\r\nexport function truncate(count, array) {\r\n    const count_1 = max_1(comparePrimitives, 0, count) | 0;\r\n    const start = 0;\r\n    return array.slice(start, (start + count_1));\r\n}\r\n\r\nexport function concat(arrays, cons) {\r\n    const arrays_1 = Array.isArray(arrays) ? arrays : (Array.from(arrays));\r\n    const matchValue = arrays_1.length | 0;\r\n    switch (matchValue) {\r\n        case 0: {\r\n            return Helpers_allocateArrayFromCons(cons, 0);\r\n        }\r\n        case 1: {\r\n            return arrays_1[0];\r\n        }\r\n        default: {\r\n            let totalIdx = 0;\r\n            let totalLength = 0;\r\n            for (let idx = 0; idx <= (arrays_1.length - 1); idx++) {\r\n                const arr_1 = arrays_1[idx];\r\n                totalLength = ((totalLength + arr_1.length) | 0);\r\n            }\r\n            const result = Helpers_allocateArrayFromCons(cons, totalLength);\r\n            for (let idx_1 = 0; idx_1 <= (arrays_1.length - 1); idx_1++) {\r\n                const arr_2 = arrays_1[idx_1];\r\n                for (let j = 0; j <= (arr_2.length - 1); j++) {\r\n                    result[totalIdx] = arr_2[j];\r\n                    totalIdx = ((totalIdx + 1) | 0);\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n    }\r\n}\r\n\r\nexport function collect(mapping, array, cons) {\r\n    return concat(map(mapping, array, null), cons);\r\n}\r\n\r\nexport function where(predicate, array) {\r\n    return array.filter(predicate);\r\n}\r\n\r\nexport function indexOf(array, item_1, start, count, eq) {\r\n    const start_1 = defaultArg(start, 0) | 0;\r\n    const end$0027 = defaultArg(map_1((c) => (start_1 + c), count), array.length) | 0;\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i >= end$0027) {\r\n                return -1;\r\n            }\r\n            else if (eq.Equals(item_1, array[i])) {\r\n                return i | 0;\r\n            }\r\n            else {\r\n                i_mut = (i + 1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(start_1) | 0;\r\n}\r\n\r\nexport function contains(value, array, eq) {\r\n    return indexOf(array, value, void 0, void 0, eq) >= 0;\r\n}\r\n\r\nexport function empty(cons) {\r\n    return Helpers_allocateArrayFromCons(cons, 0);\r\n}\r\n\r\nexport function singleton(value, cons) {\r\n    const ar = Helpers_allocateArrayFromCons(cons, 1);\r\n    ar[0] = value;\r\n    return ar;\r\n}\r\n\r\nexport function initialize(count, initializer, cons) {\r\n    if (count < 0) {\r\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\r\n    }\r\n    const result = Helpers_allocateArrayFromCons(cons, count);\r\n    for (let i = 0; i <= (count - 1); i++) {\r\n        result[i] = initializer(i);\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function pairwise(array) {\r\n    if (array.length < 2) {\r\n        return [];\r\n    }\r\n    else {\r\n        const count = (array.length - 1) | 0;\r\n        const result = new Array(count);\r\n        for (let i = 0; i <= (count - 1); i++) {\r\n            result[i] = [array[i], array[i + 1]];\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\nexport function replicate(count, initial, cons) {\r\n    if (count < 0) {\r\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\r\n    }\r\n    const result = Helpers_allocateArrayFromCons(cons, count);\r\n    for (let i = 0; i <= (result.length - 1); i++) {\r\n        result[i] = initial;\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function copy(array) {\r\n    return array.slice();\r\n}\r\n\r\nexport function reverse(array) {\r\n    const array_2 = array.slice();\r\n    return array_2.reverse();\r\n}\r\n\r\nexport function scan(folder, state, array, cons) {\r\n    const res = Helpers_allocateArrayFromCons(cons, array.length + 1);\r\n    res[0] = state;\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        res[i + 1] = folder(res[i], array[i]);\r\n    }\r\n    return res;\r\n}\r\n\r\nexport function scanBack(folder, array, state, cons) {\r\n    const res = Helpers_allocateArrayFromCons(cons, array.length + 1);\r\n    res[array.length] = state;\r\n    for (let i = array.length - 1; i >= 0; i--) {\r\n        res[i] = folder(array[i], res[i + 1]);\r\n    }\r\n    return res;\r\n}\r\n\r\nexport function skip(count, array, cons) {\r\n    if (count > array.length) {\r\n        throw (new Error(\"count is greater than array length\\\\nParameter name: count\"));\r\n    }\r\n    if (count === array.length) {\r\n        return Helpers_allocateArrayFromCons(cons, 0);\r\n    }\r\n    else {\r\n        const count_1 = ((count < 0) ? 0 : count) | 0;\r\n        return array.slice(count_1);\r\n    }\r\n}\r\n\r\nexport function skipWhile(predicate, array, cons) {\r\n    let count = 0;\r\n    while ((count < array.length) && predicate(array[count])) {\r\n        count = ((count + 1) | 0);\r\n    }\r\n    if (count === array.length) {\r\n        return Helpers_allocateArrayFromCons(cons, 0);\r\n    }\r\n    else {\r\n        const count_1 = count | 0;\r\n        return array.slice(count_1);\r\n    }\r\n}\r\n\r\nexport function take(count, array, cons) {\r\n    if (count < 0) {\r\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\r\n    }\r\n    if (count > array.length) {\r\n        throw (new Error(\"count is greater than array length\\\\nParameter name: count\"));\r\n    }\r\n    if (count === 0) {\r\n        return Helpers_allocateArrayFromCons(cons, 0);\r\n    }\r\n    else {\r\n        const start = 0;\r\n        return array.slice(start, (start + count));\r\n    }\r\n}\r\n\r\nexport function takeWhile(predicate, array, cons) {\r\n    let count = 0;\r\n    while ((count < array.length) && predicate(array[count])) {\r\n        count = ((count + 1) | 0);\r\n    }\r\n    if (count === 0) {\r\n        return Helpers_allocateArrayFromCons(cons, 0);\r\n    }\r\n    else {\r\n        const start = 0;\r\n        const count_1 = count | 0;\r\n        return array.slice(start, (start + count_1));\r\n    }\r\n}\r\n\r\nexport function addInPlace(x, array) {\r\n    array.push(x);\r\n}\r\n\r\nexport function addRangeInPlace(range, array) {\r\n    const enumerator = getEnumerator(range);\r\n    try {\r\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            addInPlace(enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), array);\r\n        }\r\n    }\r\n    finally {\r\n        disposeSafe(enumerator);\r\n    }\r\n}\r\n\r\nexport function insertRangeInPlace(index, range, array) {\r\n    let index_1;\r\n    let i = index;\r\n    const enumerator = getEnumerator(range);\r\n    try {\r\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            const x = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n            (index_1 = (i | 0), array.splice(index_1, 0, x));\r\n            i = ((i + 1) | 0);\r\n        }\r\n    }\r\n    finally {\r\n        disposeSafe(enumerator);\r\n    }\r\n}\r\n\r\nexport function removeInPlace(item_1, array, eq) {\r\n    const i = indexOf(array, item_1, void 0, void 0, eq) | 0;\r\n    if (i > -1) {\r\n        array.splice(i, 1);\r\n        return true;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function removeAllInPlace(predicate, array) {\r\n    const countRemoveAll = (count) => {\r\n        const i = (array.findIndex(predicate)) | 0;\r\n        if (i > -1) {\r\n            array.splice(i, 1);\r\n            return (countRemoveAll(count) + 1) | 0;\r\n        }\r\n        else {\r\n            return count | 0;\r\n        }\r\n    };\r\n    return countRemoveAll(0) | 0;\r\n}\r\n\r\nexport function copyTo(source, sourceIndex, target, targetIndex, count) {\r\n    const diff = (targetIndex - sourceIndex) | 0;\r\n    for (let i = sourceIndex; i <= ((sourceIndex + count) - 1); i++) {\r\n        target[i + diff] = source[i];\r\n    }\r\n}\r\n\r\nexport function copyToTypedArray(source, sourceIndex, target, targetIndex, count) {\r\n    try {\r\n        target.set(source.subarray(sourceIndex, sourceIndex + count), targetIndex);\r\n    }\r\n    catch (matchValue) {\r\n        copyTo(source, sourceIndex, target, targetIndex, count);\r\n    }\r\n}\r\n\r\nexport function partition(f, source, cons) {\r\n    const len = source.length | 0;\r\n    const res1 = Helpers_allocateArrayFromCons(cons, len);\r\n    const res2 = Helpers_allocateArrayFromCons(cons, len);\r\n    let iTrue = 0;\r\n    let iFalse = 0;\r\n    for (let i = 0; i <= (len - 1); i++) {\r\n        if (f(source[i])) {\r\n            res1[iTrue] = source[i];\r\n            iTrue = ((iTrue + 1) | 0);\r\n        }\r\n        else {\r\n            res2[iFalse] = source[i];\r\n            iFalse = ((iFalse + 1) | 0);\r\n        }\r\n    }\r\n    return [truncate(iTrue, res1), truncate(iFalse, res2)];\r\n}\r\n\r\nexport function find(predicate, array) {\r\n    const matchValue = array.find(predicate);\r\n    if (matchValue == null) {\r\n        return indexNotFound();\r\n    }\r\n    else {\r\n        return value_2(matchValue);\r\n    }\r\n}\r\n\r\nexport function tryFind(predicate, array) {\r\n    return array.find(predicate);\r\n}\r\n\r\nexport function findIndex(predicate, array) {\r\n    const matchValue = (array.findIndex(predicate)) | 0;\r\n    if (matchValue > -1) {\r\n        return matchValue | 0;\r\n    }\r\n    else {\r\n        return indexNotFound() | 0;\r\n    }\r\n}\r\n\r\nexport function tryFindIndex(predicate, array) {\r\n    const matchValue = (array.findIndex(predicate)) | 0;\r\n    if (matchValue > -1) {\r\n        return matchValue;\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function pick(chooser, array) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i >= array.length) {\r\n                return indexNotFound();\r\n            }\r\n            else {\r\n                const matchValue = chooser(array[i]);\r\n                if (matchValue != null) {\r\n                    return value_2(matchValue);\r\n                }\r\n                else {\r\n                    i_mut = (i + 1);\r\n                    continue loop;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0);\r\n}\r\n\r\nexport function tryPick(chooser, array) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i >= array.length) {\r\n                return void 0;\r\n            }\r\n            else {\r\n                const matchValue = chooser(array[i]);\r\n                if (matchValue == null) {\r\n                    i_mut = (i + 1);\r\n                    continue loop;\r\n                }\r\n                else {\r\n                    return matchValue;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0);\r\n}\r\n\r\nexport function findBack(predicate, array) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i < 0) {\r\n                return indexNotFound();\r\n            }\r\n            else if (predicate(array[i])) {\r\n                return array[i];\r\n            }\r\n            else {\r\n                i_mut = (i - 1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(array.length - 1);\r\n}\r\n\r\nexport function tryFindBack(predicate, array) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i < 0) {\r\n                return void 0;\r\n            }\r\n            else if (predicate(array[i])) {\r\n                return some(array[i]);\r\n            }\r\n            else {\r\n                i_mut = (i - 1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(array.length - 1);\r\n}\r\n\r\nexport function findLastIndex(predicate, array) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i < 0) {\r\n                return -1;\r\n            }\r\n            else if (predicate(array[i])) {\r\n                return i | 0;\r\n            }\r\n            else {\r\n                i_mut = (i - 1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(array.length - 1) | 0;\r\n}\r\n\r\nexport function findIndexBack(predicate, array) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i < 0) {\r\n                return indexNotFound() | 0;\r\n            }\r\n            else if (predicate(array[i])) {\r\n                return i | 0;\r\n            }\r\n            else {\r\n                i_mut = (i - 1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(array.length - 1) | 0;\r\n}\r\n\r\nexport function tryFindIndexBack(predicate, array) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i < 0) {\r\n                return void 0;\r\n            }\r\n            else if (predicate(array[i])) {\r\n                return i;\r\n            }\r\n            else {\r\n                i_mut = (i - 1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(array.length - 1);\r\n}\r\n\r\nexport function choose(chooser, array, cons) {\r\n    const res = [];\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        const matchValue = chooser(array[i]);\r\n        if (matchValue != null) {\r\n            const y = value_2(matchValue);\r\n            res.push(y);\r\n        }\r\n    }\r\n    if ((typeof cons) === \"function\") {\r\n        return map((x) => x, res, cons);\r\n    }\r\n    else {\r\n        return res;\r\n    }\r\n}\r\n\r\nexport function foldIndexed(folder, state, array) {\r\n    return array.reduce(((delegateArg, delegateArg_1, delegateArg_2) => folder(delegateArg_2, delegateArg, delegateArg_1)), state);\r\n}\r\n\r\nexport function fold(folder, state, array) {\r\n    return array.reduce((folder), state);\r\n}\r\n\r\nexport function iterate(action, array) {\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        action(array[i]);\r\n    }\r\n}\r\n\r\nexport function iterateIndexed(action, array) {\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        action(i, array[i]);\r\n    }\r\n}\r\n\r\nexport function iterate2(action, array1, array2) {\r\n    if (array1.length !== array2.length) {\r\n        differentLengths();\r\n    }\r\n    for (let i = 0; i <= (array1.length - 1); i++) {\r\n        action(array1[i], array2[i]);\r\n    }\r\n}\r\n\r\nexport function iterateIndexed2(action, array1, array2) {\r\n    if (array1.length !== array2.length) {\r\n        differentLengths();\r\n    }\r\n    for (let i = 0; i <= (array1.length - 1); i++) {\r\n        action(i, array1[i], array2[i]);\r\n    }\r\n}\r\n\r\nexport function isEmpty(array) {\r\n    return array.length === 0;\r\n}\r\n\r\nexport function forAll(predicate, array) {\r\n    return array.every(predicate);\r\n}\r\n\r\nexport function permute(f, array) {\r\n    const size = array.length | 0;\r\n    const res = array.slice();\r\n    const checkFlags = new Array(size);\r\n    iterateIndexed((i, x) => {\r\n        const j = f(i) | 0;\r\n        if ((j < 0) ? true : (j >= size)) {\r\n            throw (new Error(\"Not a valid permutation\"));\r\n        }\r\n        res[j] = x;\r\n        checkFlags[j] = 1;\r\n    }, array);\r\n    if (!(checkFlags.every((y) => (1 === y)))) {\r\n        throw (new Error(\"Not a valid permutation\"));\r\n    }\r\n    return res;\r\n}\r\n\r\nexport function setSlice(target, lower, upper, source) {\r\n    const lower_1 = defaultArg(lower, 0) | 0;\r\n    const upper_1 = defaultArg(upper, -1) | 0;\r\n    const length = (((upper_1 >= 0) ? upper_1 : (target.length - 1)) - lower_1) | 0;\r\n    for (let i = 0; i <= length; i++) {\r\n        target[i + lower_1] = source[i];\r\n    }\r\n}\r\n\r\nexport function sortInPlaceBy(projection, xs, comparer) {\r\n    xs.sort((x, y) => comparer.Compare(projection(x), projection(y)));\r\n}\r\n\r\nexport function sortInPlace(xs, comparer) {\r\n    xs.sort((x, y) => comparer.Compare(x, y));\r\n}\r\n\r\nexport function sort(xs, comparer) {\r\n    const xs_1 = xs.slice();\r\n    xs_1.sort((x, y) => comparer.Compare(x, y));\r\n    return xs_1;\r\n}\r\n\r\nexport function sortBy(projection, xs, comparer) {\r\n    const xs_1 = xs.slice();\r\n    xs_1.sort((x, y) => comparer.Compare(projection(x), projection(y)));\r\n    return xs_1;\r\n}\r\n\r\nexport function sortDescending(xs, comparer) {\r\n    const xs_1 = xs.slice();\r\n    xs_1.sort((x, y) => (comparer.Compare(x, y) * -1));\r\n    return xs_1;\r\n}\r\n\r\nexport function sortByDescending(projection, xs, comparer) {\r\n    const xs_1 = xs.slice();\r\n    xs_1.sort((x, y) => (comparer.Compare(projection(x), projection(y)) * -1));\r\n    return xs_1;\r\n}\r\n\r\nexport function sortWith(comparer, xs) {\r\n    const comparer_1 = comparer;\r\n    const xs_1 = xs.slice();\r\n    xs_1.sort(comparer_1);\r\n    return xs_1;\r\n}\r\n\r\nexport function allPairs(xs, ys) {\r\n    const len1 = xs.length | 0;\r\n    const len2 = ys.length | 0;\r\n    const res = new Array(len1 * len2);\r\n    for (let i = 0; i <= (xs.length - 1); i++) {\r\n        for (let j = 0; j <= (ys.length - 1); j++) {\r\n            res[(i * len2) + j] = [xs[i], ys[j]];\r\n        }\r\n    }\r\n    return res;\r\n}\r\n\r\nexport function unfold(generator, state) {\r\n    const res = [];\r\n    const loop = (state_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const state_1 = state_1_mut;\r\n            const matchValue = generator(state_1);\r\n            if (matchValue != null) {\r\n                const x = matchValue[0];\r\n                const s = matchValue[1];\r\n                res.push(x);\r\n                state_1_mut = s;\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    loop(state);\r\n    return res;\r\n}\r\n\r\nexport function unzip(array) {\r\n    const len = array.length | 0;\r\n    const res1 = new Array(len);\r\n    const res2 = new Array(len);\r\n    iterateIndexed((i, tupledArg) => {\r\n        res1[i] = tupledArg[0];\r\n        res2[i] = tupledArg[1];\r\n    }, array);\r\n    return [res1, res2];\r\n}\r\n\r\nexport function unzip3(array) {\r\n    const len = array.length | 0;\r\n    const res1 = new Array(len);\r\n    const res2 = new Array(len);\r\n    const res3 = new Array(len);\r\n    iterateIndexed((i, tupledArg) => {\r\n        res1[i] = tupledArg[0];\r\n        res2[i] = tupledArg[1];\r\n        res3[i] = tupledArg[2];\r\n    }, array);\r\n    return [res1, res2, res3];\r\n}\r\n\r\nexport function zip(array1, array2) {\r\n    if (array1.length !== array2.length) {\r\n        differentLengths();\r\n    }\r\n    const result = new Array(array1.length);\r\n    for (let i = 0; i <= (array1.length - 1); i++) {\r\n        result[i] = [array1[i], array2[i]];\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function zip3(array1, array2, array3) {\r\n    if ((array1.length !== array2.length) ? true : (array2.length !== array3.length)) {\r\n        differentLengths();\r\n    }\r\n    const result = new Array(array1.length);\r\n    for (let i = 0; i <= (array1.length - 1); i++) {\r\n        result[i] = [array1[i], array2[i], array3[i]];\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function chunkBySize(chunkSize, array) {\r\n    if (chunkSize < 1) {\r\n        throw (new Error(\"The input must be positive.\\\\nParameter name: size\"));\r\n    }\r\n    if (array.length === 0) {\r\n        return [[]];\r\n    }\r\n    else {\r\n        const result = [];\r\n        for (let x = 0; x <= ((~(~Math.ceil(array.length / chunkSize))) - 1); x++) {\r\n            let slice;\r\n            const start_1 = (x * chunkSize) | 0;\r\n            slice = (array.slice(start_1, (start_1 + chunkSize)));\r\n            result.push(slice);\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\nexport function splitAt(index, array) {\r\n    let start;\r\n    if ((index < 0) ? true : (index > array.length)) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    return [(start = 0, array.slice(start, (start + index))), array.slice(index)];\r\n}\r\n\r\nexport function compareWith(comparer, source1, source2) {\r\n    if (source1 == null) {\r\n        if (source2 == null) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return -1;\r\n        }\r\n    }\r\n    else if (source2 == null) {\r\n        return 1;\r\n    }\r\n    else {\r\n        const len1 = source1.length | 0;\r\n        const len2 = source2.length | 0;\r\n        const len = ((len1 < len2) ? len1 : len2) | 0;\r\n        let i = 0;\r\n        let res = 0;\r\n        while ((res === 0) && (i < len)) {\r\n            res = (comparer(source1[i], source2[i]) | 0);\r\n            i = ((i + 1) | 0);\r\n        }\r\n        if (res !== 0) {\r\n            return res | 0;\r\n        }\r\n        else if (len1 > len2) {\r\n            return 1;\r\n        }\r\n        else if (len1 < len2) {\r\n            return -1;\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n}\r\n\r\nexport function compareTo(comparer, source1, source2) {\r\n    if (source1 == null) {\r\n        if (source2 == null) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return -1;\r\n        }\r\n    }\r\n    else if (source2 == null) {\r\n        return 1;\r\n    }\r\n    else {\r\n        const len1 = source1.length | 0;\r\n        const len2 = source2.length | 0;\r\n        if (len1 > len2) {\r\n            return 1;\r\n        }\r\n        else if (len1 < len2) {\r\n            return -1;\r\n        }\r\n        else {\r\n            let i = 0;\r\n            let res = 0;\r\n            while ((res === 0) && (i < len1)) {\r\n                res = (comparer(source1[i], source2[i]) | 0);\r\n                i = ((i + 1) | 0);\r\n            }\r\n            return res | 0;\r\n        }\r\n    }\r\n}\r\n\r\nexport function equalsWith(equals, array1, array2) {\r\n    if (array1 == null) {\r\n        if (array2 == null) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    else if (array2 == null) {\r\n        return false;\r\n    }\r\n    else {\r\n        let i = 0;\r\n        let result = true;\r\n        const length1 = array1.length | 0;\r\n        const length2 = array2.length | 0;\r\n        if (length1 > length2) {\r\n            return false;\r\n        }\r\n        else if (length1 < length2) {\r\n            return false;\r\n        }\r\n        else {\r\n            while ((i < length1) && result) {\r\n                result = equals(array1[i], array2[i]);\r\n                i = ((i + 1) | 0);\r\n            }\r\n            return result;\r\n        }\r\n    }\r\n}\r\n\r\nexport function exactlyOne(array) {\r\n    if (array.length === 1) {\r\n        return array[0];\r\n    }\r\n    else if (array.length === 0) {\r\n        throw (new Error(\"The input sequence was empty\\\\nParameter name: array\"));\r\n    }\r\n    else {\r\n        throw (new Error(\"Input array too long\\\\nParameter name: array\"));\r\n    }\r\n}\r\n\r\nexport function tryExactlyOne(array) {\r\n    if (array.length === 1) {\r\n        return some(array[0]);\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function head(array) {\r\n    if (array.length === 0) {\r\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\r\n    }\r\n    else {\r\n        return array[0];\r\n    }\r\n}\r\n\r\nexport function tryHead(array) {\r\n    if (array.length === 0) {\r\n        return void 0;\r\n    }\r\n    else {\r\n        return some(array[0]);\r\n    }\r\n}\r\n\r\nexport function tail(array) {\r\n    if (array.length === 0) {\r\n        throw (new Error(\"Not enough elements\\\\nParameter name: array\"));\r\n    }\r\n    return array.slice(1);\r\n}\r\n\r\nexport function item(index, array) {\r\n    return array[index];\r\n}\r\n\r\nexport function tryItem(index, array) {\r\n    if ((index < 0) ? true : (index >= array.length)) {\r\n        return void 0;\r\n    }\r\n    else {\r\n        return some(array[index]);\r\n    }\r\n}\r\n\r\nexport function foldBackIndexed(folder, array, state) {\r\n    return array.reduceRight(((delegateArg, delegateArg_1, delegateArg_2) => folder(delegateArg_2, delegateArg_1, delegateArg)), state);\r\n}\r\n\r\nexport function foldBack(folder, array, state) {\r\n    return array.reduceRight(((delegateArg, delegateArg_1) => folder(delegateArg_1, delegateArg)), state);\r\n}\r\n\r\nexport function foldIndexed2(folder, state, array1, array2) {\r\n    let acc = state;\r\n    if (array1.length !== array2.length) {\r\n        throw (new Error(\"Arrays have different lengths\"));\r\n    }\r\n    for (let i = 0; i <= (array1.length - 1); i++) {\r\n        acc = folder(i, acc, array1[i], array2[i]);\r\n    }\r\n    return acc;\r\n}\r\n\r\nexport function fold2(folder, state, array1, array2) {\r\n    return foldIndexed2((_arg, acc, x, y) => folder(acc, x, y), state, array1, array2);\r\n}\r\n\r\nexport function foldBackIndexed2(folder, array1, array2, state) {\r\n    let acc = state;\r\n    if (array1.length !== array2.length) {\r\n        differentLengths();\r\n    }\r\n    const size = array1.length | 0;\r\n    for (let i = 1; i <= size; i++) {\r\n        acc = folder(i - 1, array1[size - i], array2[size - i], acc);\r\n    }\r\n    return acc;\r\n}\r\n\r\nexport function foldBack2(f, array1, array2, state) {\r\n    return foldBackIndexed2((_arg, x, y, acc) => f(x, y, acc), array1, array2, state);\r\n}\r\n\r\nexport function reduce(reduction, array) {\r\n    if (array.length === 0) {\r\n        throw (new Error(\"The input array was empty\"));\r\n    }\r\n    const reduction_1 = reduction;\r\n    return array.reduce(reduction_1);\r\n}\r\n\r\nexport function reduceBack(reduction, array) {\r\n    if (array.length === 0) {\r\n        throw (new Error(\"The input array was empty\"));\r\n    }\r\n    const reduction_1 = reduction;\r\n    return array.reduceRight(reduction_1);\r\n}\r\n\r\nexport function forAll2(predicate, array1, array2) {\r\n    return fold2((acc, x, y) => (acc && predicate(x, y)), true, array1, array2);\r\n}\r\n\r\nexport function existsOffset(predicate_mut, array_mut, index_mut) {\r\n    existsOffset:\r\n    while (true) {\r\n        const predicate = predicate_mut, array = array_mut, index = index_mut;\r\n        if (index === array.length) {\r\n            return false;\r\n        }\r\n        else if (predicate(array[index])) {\r\n            return true;\r\n        }\r\n        else {\r\n            predicate_mut = predicate;\r\n            array_mut = array;\r\n            index_mut = (index + 1);\r\n            continue existsOffset;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function exists(predicate, array) {\r\n    return existsOffset(predicate, array, 0);\r\n}\r\n\r\nexport function existsOffset2(predicate_mut, array1_mut, array2_mut, index_mut) {\r\n    existsOffset2:\r\n    while (true) {\r\n        const predicate = predicate_mut, array1 = array1_mut, array2 = array2_mut, index = index_mut;\r\n        if (index === array1.length) {\r\n            return false;\r\n        }\r\n        else if (predicate(array1[index], array2[index])) {\r\n            return true;\r\n        }\r\n        else {\r\n            predicate_mut = predicate;\r\n            array1_mut = array1;\r\n            array2_mut = array2;\r\n            index_mut = (index + 1);\r\n            continue existsOffset2;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function exists2(predicate, array1, array2) {\r\n    if (array1.length !== array2.length) {\r\n        differentLengths();\r\n    }\r\n    return existsOffset2(predicate, array1, array2, 0);\r\n}\r\n\r\nexport function sum(array, adder) {\r\n    let acc = adder.GetZero();\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        acc = adder.Add(acc, array[i]);\r\n    }\r\n    return acc;\r\n}\r\n\r\nexport function sumBy(projection, array, adder) {\r\n    let acc = adder.GetZero();\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        acc = adder.Add(acc, projection(array[i]));\r\n    }\r\n    return acc;\r\n}\r\n\r\nexport function maxBy(projection, xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? y : x), xs);\r\n}\r\n\r\nexport function max(xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? y : x), xs);\r\n}\r\n\r\nexport function minBy(projection, xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? x : y), xs);\r\n}\r\n\r\nexport function min(xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? x : y), xs);\r\n}\r\n\r\nexport function average(array, averager) {\r\n    if (array.length === 0) {\r\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\r\n    }\r\n    let total = averager.GetZero();\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        total = averager.Add(total, array[i]);\r\n    }\r\n    return averager.DivideByInt(total, array.length);\r\n}\r\n\r\nexport function averageBy(projection, array, averager) {\r\n    if (array.length === 0) {\r\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\r\n    }\r\n    let total = averager.GetZero();\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        total = averager.Add(total, projection(array[i]));\r\n    }\r\n    return averager.DivideByInt(total, array.length);\r\n}\r\n\r\nexport function windowed(windowSize, source) {\r\n    if (windowSize <= 0) {\r\n        throw (new Error(\"windowSize must be positive\"));\r\n    }\r\n    let res;\r\n    const len = max_1(comparePrimitives, 0, (source.length - windowSize) + 1) | 0;\r\n    res = (new Array(len));\r\n    for (let i = windowSize; i <= source.length; i++) {\r\n        res[i - windowSize] = source.slice(i - windowSize, (i - 1) + 1);\r\n    }\r\n    return res;\r\n}\r\n\r\nexport function splitInto(chunks, array) {\r\n    if (chunks < 1) {\r\n        throw (new Error(\"The input must be positive.\\\\nParameter name: chunks\"));\r\n    }\r\n    if (array.length === 0) {\r\n        return [[]];\r\n    }\r\n    else {\r\n        const result = [];\r\n        const chunks_1 = min_1(comparePrimitives, chunks, array.length) | 0;\r\n        const minChunkSize = (~(~(array.length / chunks_1))) | 0;\r\n        const chunksWithExtraItem = (array.length % chunks_1) | 0;\r\n        for (let i = 0; i <= (chunks_1 - 1); i++) {\r\n            const chunkSize = ((i < chunksWithExtraItem) ? (minChunkSize + 1) : minChunkSize) | 0;\r\n            let slice;\r\n            const start_1 = ((i * minChunkSize) + min_1(comparePrimitives, chunksWithExtraItem, i)) | 0;\r\n            slice = (array.slice(start_1, (start_1 + chunkSize)));\r\n            result.push(slice);\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\nexport function transpose(arrays, cons) {\r\n    const arrays_1 = Array.isArray(arrays) ? arrays : (Array.from(arrays));\r\n    const len = arrays_1.length | 0;\r\n    if (len === 0) {\r\n        return new Array(0);\r\n    }\r\n    else {\r\n        const firstArray = arrays_1[0];\r\n        const lenInner = firstArray.length | 0;\r\n        if (!forAll((a) => (a.length === lenInner), arrays_1)) {\r\n            differentLengths();\r\n        }\r\n        const result = new Array(lenInner);\r\n        for (let i = 0; i <= (lenInner - 1); i++) {\r\n            result[i] = Helpers_allocateArrayFromCons(cons, len);\r\n            for (let j = 0; j <= (len - 1); j++) {\r\n                result[i][j] = arrays_1[j][i];\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\nexport function insertAt(index, y, xs) {\r\n    const len = xs.length | 0;\r\n    if ((index < 0) ? true : (index > len)) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    const target = new xs.constructor(len + 1);\r\n    for (let i = 0; i <= (index - 1); i++) {\r\n        target[i] = xs[i];\r\n    }\r\n    target[index] = y;\r\n    for (let i_1 = index; i_1 <= (len - 1); i_1++) {\r\n        target[i_1 + 1] = xs[i_1];\r\n    }\r\n    return target;\r\n}\r\n\r\nexport function insertManyAt(index, ys, xs) {\r\n    const len = xs.length | 0;\r\n    if ((index < 0) ? true : (index > len)) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    const ys_1 = Array.from(ys);\r\n    const len2 = ys_1.length | 0;\r\n    const target = new xs.constructor(len + len2);\r\n    for (let i = 0; i <= (index - 1); i++) {\r\n        target[i] = xs[i];\r\n    }\r\n    for (let i_1 = 0; i_1 <= (len2 - 1); i_1++) {\r\n        target[index + i_1] = ys_1[i_1];\r\n    }\r\n    for (let i_2 = index; i_2 <= (len - 1); i_2++) {\r\n        target[i_2 + len2] = xs[i_2];\r\n    }\r\n    return target;\r\n}\r\n\r\nexport function removeAt(index, xs) {\r\n    if ((index < 0) ? true : (index >= xs.length)) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    let i = -1;\r\n    return filter((_arg) => {\r\n        i = ((i + 1) | 0);\r\n        return i !== index;\r\n    }, xs);\r\n}\r\n\r\nexport function removeManyAt(index, count, xs) {\r\n    let i = -1;\r\n    let status = -1;\r\n    const ys = filter((_arg) => {\r\n        i = ((i + 1) | 0);\r\n        if (i === index) {\r\n            status = 0;\r\n            return false;\r\n        }\r\n        else if (i > index) {\r\n            if (i < (index + count)) {\r\n                return false;\r\n            }\r\n            else {\r\n                status = 1;\r\n                return true;\r\n            }\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }, xs);\r\n    const status_1 = (((status === 0) && ((i + 1) === (index + count))) ? 1 : status) | 0;\r\n    if (status_1 < 1) {\r\n        const arg = (status_1 < 0) ? \"index\" : \"count\";\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + arg));\r\n    }\r\n    return ys;\r\n}\r\n\r\nexport function updateAt(index, y, xs) {\r\n    const len = xs.length | 0;\r\n    if ((index < 0) ? true : (index >= len)) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    const target = new xs.constructor(len);\r\n    for (let i = 0; i <= (len - 1); i++) {\r\n        target[i] = ((i === index) ? y : xs[i]);\r\n    }\r\n    return target;\r\n}\r\n\r\n","import { clear, equals, isArrayLike, isDisposable, toIterator, disposeSafe, getEnumerator } from \"./Util.js\";\r\nimport { toString } from \"./Types.js\";\r\nimport { class_type } from \"./Reflection.js\";\r\nimport { some, value as value_1 } from \"./Option.js\";\r\nimport { Operators_Lock, Operators_NullArg } from \"./FSharp.Core.js\";\r\nimport { chunkBySize as chunkBySize_1, permute as permute_1, transpose as transpose_1, windowed as windowed_1, splitInto as splitInto_1, map as map_1, pairwise as pairwise_1, scanBack as scanBack_1, reverse as reverse_1, mapFoldBack as mapFoldBack_1, mapFold as mapFold_1, tryItem as tryItem_1, tryHead as tryHead_1, foldBack2 as foldBack2_1, foldBack as foldBack_1, tryFindIndexBack as tryFindIndexBack_1, tryFindBack as tryFindBack_1, singleton as singleton_1 } from \"./Array.js\";\r\nimport { length as length_1, tryItem as tryItem_2, isEmpty as isEmpty_1, tryHead as tryHead_2, ofSeq as ofSeq_1, ofArray as ofArray_1, toArray as toArray_1, FSharpList } from \"./List.js\";\r\nimport { SR_indexOutOfBounds } from \"./Global.js\";\r\n\r\nexport const SR_enumerationAlreadyFinished = \"Enumeration already finished.\";\r\n\r\nexport const SR_enumerationNotStarted = \"Enumeration has not started. Call MoveNext.\";\r\n\r\nexport const SR_inputSequenceEmpty = \"The input sequence was empty.\";\r\n\r\nexport const SR_inputSequenceTooLong = \"The input sequence contains more than one element.\";\r\n\r\nexport const SR_keyNotFoundAlt = \"An index satisfying the predicate was not found in the collection.\";\r\n\r\nexport const SR_notEnoughElements = \"The input sequence has an insufficient number of elements.\";\r\n\r\nexport const SR_resetNotSupported = \"Reset is not supported on this enumerator.\";\r\n\r\nexport function Enumerator_noReset() {\r\n    throw (new Error(SR_resetNotSupported));\r\n}\r\n\r\nexport function Enumerator_notStarted() {\r\n    throw (new Error(SR_enumerationNotStarted));\r\n}\r\n\r\nexport function Enumerator_alreadyFinished() {\r\n    throw (new Error(SR_enumerationAlreadyFinished));\r\n}\r\n\r\nexport class Enumerator_Seq {\r\n    constructor(f) {\r\n        this.f = f;\r\n    }\r\n    toString() {\r\n        const xs = this;\r\n        const maxCount = 4;\r\n        let i = 0;\r\n        let str = \"seq [\";\r\n        const e = getEnumerator(xs);\r\n        try {\r\n            while ((i < maxCount) && e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                if (i > 0) {\r\n                    str = (str + \"; \");\r\n                }\r\n                str = (str + toString(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()));\r\n                i = ((i + 1) | 0);\r\n            }\r\n            if (i === maxCount) {\r\n                str = (str + \"; ...\");\r\n            }\r\n            return str + \"]\";\r\n        }\r\n        finally {\r\n            disposeSafe(e);\r\n        }\r\n    }\r\n    GetEnumerator() {\r\n        const x = this;\r\n        return x.f();\r\n    }\r\n    [Symbol.iterator]() {\r\n        return toIterator(this.GetEnumerator());\r\n    }\r\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\r\n        const x = this;\r\n        return x.f();\r\n    }\r\n}\r\n\r\nexport function Enumerator_Seq$reflection(gen0) {\r\n    return class_type(\"SeqModule.Enumerator.Seq\", [gen0], Enumerator_Seq);\r\n}\r\n\r\nexport function Enumerator_Seq_$ctor_673A07F2(f) {\r\n    return new Enumerator_Seq(f);\r\n}\r\n\r\nexport class Enumerator_FromFunctions$1 {\r\n    constructor(current, next, dispose) {\r\n        this.current = current;\r\n        this.next = next;\r\n        this.dispose = dispose;\r\n    }\r\n    [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\r\n        const __ = this;\r\n        return __.current();\r\n    }\r\n    [\"System.Collections.IEnumerator.get_Current\"]() {\r\n        const __ = this;\r\n        return __.current();\r\n    }\r\n    [\"System.Collections.IEnumerator.MoveNext\"]() {\r\n        const __ = this;\r\n        return __.next();\r\n    }\r\n    [\"System.Collections.IEnumerator.Reset\"]() {\r\n        Enumerator_noReset();\r\n    }\r\n    Dispose() {\r\n        const __ = this;\r\n        __.dispose();\r\n    }\r\n}\r\n\r\nexport function Enumerator_FromFunctions$1$reflection(gen0) {\r\n    return class_type(\"SeqModule.Enumerator.FromFunctions`1\", [gen0], Enumerator_FromFunctions$1);\r\n}\r\n\r\nexport function Enumerator_FromFunctions$1_$ctor_58C54629(current, next, dispose) {\r\n    return new Enumerator_FromFunctions$1(current, next, dispose);\r\n}\r\n\r\nexport function Enumerator_cast(e) {\r\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => e[\"System.Collections.IEnumerator.get_Current\"](), () => e[\"System.Collections.IEnumerator.MoveNext\"](), () => {\r\n        if (isDisposable(e)) {\r\n            disposeSafe(e);\r\n        }\r\n    });\r\n}\r\n\r\nexport function Enumerator_concat(sources) {\r\n    let outerOpt = void 0;\r\n    let innerOpt = void 0;\r\n    let started = false;\r\n    let finished = false;\r\n    let curr = void 0;\r\n    const finish = () => {\r\n        finished = true;\r\n        if (innerOpt != null) {\r\n            const inner = innerOpt;\r\n            try {\r\n                disposeSafe(inner);\r\n            }\r\n            finally {\r\n                innerOpt = (void 0);\r\n            }\r\n        }\r\n        if (outerOpt != null) {\r\n            const outer = outerOpt;\r\n            try {\r\n                disposeSafe(outer);\r\n            }\r\n            finally {\r\n                outerOpt = (void 0);\r\n            }\r\n        }\r\n    };\r\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => {\r\n        if (!started) {\r\n            Enumerator_notStarted();\r\n        }\r\n        else if (finished) {\r\n            Enumerator_alreadyFinished();\r\n        }\r\n        if (curr != null) {\r\n            return value_1(curr);\r\n        }\r\n        else {\r\n            return Enumerator_alreadyFinished();\r\n        }\r\n    }, () => {\r\n        let copyOfStruct;\r\n        if (!started) {\r\n            started = true;\r\n        }\r\n        if (finished) {\r\n            return false;\r\n        }\r\n        else {\r\n            let res = void 0;\r\n            while (res == null) {\r\n                const matchValue = [outerOpt, innerOpt];\r\n                if (matchValue[0] != null) {\r\n                    if (matchValue[1] != null) {\r\n                        const inner_1 = matchValue[1];\r\n                        if (inner_1[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                            curr = some(inner_1[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n                            res = true;\r\n                        }\r\n                        else {\r\n                            try {\r\n                                disposeSafe(inner_1);\r\n                            }\r\n                            finally {\r\n                                innerOpt = (void 0);\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        const outer_1 = matchValue[0];\r\n                        if (outer_1[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                            const ie = outer_1[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n                            innerOpt = ((copyOfStruct = ie, getEnumerator(copyOfStruct)));\r\n                        }\r\n                        else {\r\n                            finish();\r\n                            res = false;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    outerOpt = getEnumerator(sources);\r\n                }\r\n            }\r\n            return value_1(res);\r\n        }\r\n    }, () => {\r\n        if (!finished) {\r\n            finish();\r\n        }\r\n    });\r\n}\r\n\r\nexport function Enumerator_enumerateThenFinally(f, e) {\r\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => e[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), () => e[\"System.Collections.IEnumerator.MoveNext\"](), () => {\r\n        try {\r\n            disposeSafe(e);\r\n        }\r\n        finally {\r\n            f();\r\n        }\r\n    });\r\n}\r\n\r\nexport function Enumerator_generateWhileSome(openf, compute, closef) {\r\n    let started = false;\r\n    let curr = void 0;\r\n    let state = some(openf());\r\n    const dispose = () => {\r\n        if (state != null) {\r\n            const x_1 = value_1(state);\r\n            try {\r\n                closef(x_1);\r\n            }\r\n            finally {\r\n                state = (void 0);\r\n            }\r\n        }\r\n    };\r\n    const finish = () => {\r\n        try {\r\n            dispose();\r\n        }\r\n        finally {\r\n            curr = (void 0);\r\n        }\r\n    };\r\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => {\r\n        if (!started) {\r\n            Enumerator_notStarted();\r\n        }\r\n        if (curr != null) {\r\n            return value_1(curr);\r\n        }\r\n        else {\r\n            return Enumerator_alreadyFinished();\r\n        }\r\n    }, () => {\r\n        if (!started) {\r\n            started = true;\r\n        }\r\n        if (state != null) {\r\n            const s = value_1(state);\r\n            let matchValue_1;\r\n            try {\r\n                matchValue_1 = compute(s);\r\n            }\r\n            catch (matchValue) {\r\n                finish();\r\n                throw matchValue;\r\n            }\r\n            if (matchValue_1 != null) {\r\n                curr = matchValue_1;\r\n                return true;\r\n            }\r\n            else {\r\n                finish();\r\n                return false;\r\n            }\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }, dispose);\r\n}\r\n\r\nexport function Enumerator_unfold(f, state) {\r\n    let curr = void 0;\r\n    let acc = state;\r\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => {\r\n        if (curr != null) {\r\n            const x = curr[0];\r\n            const st = curr[1];\r\n            return x;\r\n        }\r\n        else {\r\n            return Enumerator_notStarted();\r\n        }\r\n    }, () => {\r\n        curr = f(acc);\r\n        if (curr != null) {\r\n            const x_1 = curr[0];\r\n            const st_1 = curr[1];\r\n            acc = st_1;\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }, () => {\r\n    });\r\n}\r\n\r\nexport function indexNotFound() {\r\n    throw (new Error(SR_keyNotFoundAlt));\r\n}\r\n\r\nexport function checkNonNull(argName, arg) {\r\n    if (arg == null) {\r\n        Operators_NullArg(argName);\r\n    }\r\n}\r\n\r\nexport function mkSeq(f) {\r\n    return Enumerator_Seq_$ctor_673A07F2(f);\r\n}\r\n\r\nexport function ofSeq(xs) {\r\n    checkNonNull(\"source\", xs);\r\n    return getEnumerator(xs);\r\n}\r\n\r\nexport function delay(generator) {\r\n    return mkSeq(() => getEnumerator(generator()));\r\n}\r\n\r\nexport function concat(sources) {\r\n    return mkSeq(() => Enumerator_concat(sources));\r\n}\r\n\r\nexport function unfold(generator, state) {\r\n    return mkSeq(() => Enumerator_unfold(generator, state));\r\n}\r\n\r\nexport function empty() {\r\n    return delay(() => (new Array(0)));\r\n}\r\n\r\nexport function singleton(x) {\r\n    return delay(() => singleton_1(x));\r\n}\r\n\r\nexport function ofArray(arr) {\r\n    return arr;\r\n}\r\n\r\nexport function toArray(xs) {\r\n    if (xs instanceof FSharpList) {\r\n        return toArray_1(xs);\r\n    }\r\n    else {\r\n        return Array.from(xs);\r\n    }\r\n}\r\n\r\nexport function ofList(xs) {\r\n    return xs;\r\n}\r\n\r\nexport function toList(xs) {\r\n    if (isArrayLike(xs)) {\r\n        return ofArray_1(xs);\r\n    }\r\n    else if (xs instanceof FSharpList) {\r\n        return xs;\r\n    }\r\n    else {\r\n        return ofSeq_1(xs);\r\n    }\r\n}\r\n\r\nexport function generate(create, compute, dispose) {\r\n    return mkSeq(() => Enumerator_generateWhileSome(create, compute, dispose));\r\n}\r\n\r\nexport function generateIndexed(create, compute, dispose) {\r\n    return mkSeq(() => {\r\n        let i = -1;\r\n        return Enumerator_generateWhileSome(create, (x) => {\r\n            i = ((i + 1) | 0);\r\n            return compute(i, x);\r\n        }, dispose);\r\n    });\r\n}\r\n\r\nexport function append(xs, ys) {\r\n    return concat([xs, ys]);\r\n}\r\n\r\nexport function cast(xs) {\r\n    return mkSeq(() => {\r\n        checkNonNull(\"source\", xs);\r\n        return Enumerator_cast(getEnumerator(xs));\r\n    });\r\n}\r\n\r\nexport function choose(chooser, xs) {\r\n    return generate(() => ofSeq(xs), (e) => {\r\n        let curr = void 0;\r\n        while ((curr == null) && e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            curr = chooser(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n        return curr;\r\n    }, (e_1) => {\r\n        disposeSafe(e_1);\r\n    });\r\n}\r\n\r\nexport function compareWith(comparer, xs, ys) {\r\n    const e1 = ofSeq(xs);\r\n    try {\r\n        const e2 = ofSeq(ys);\r\n        try {\r\n            let c = 0;\r\n            let b1 = e1[\"System.Collections.IEnumerator.MoveNext\"]();\r\n            let b2 = e2[\"System.Collections.IEnumerator.MoveNext\"]();\r\n            while (((c === 0) && b1) && b2) {\r\n                c = (comparer(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) | 0);\r\n                if (c === 0) {\r\n                    b1 = e1[\"System.Collections.IEnumerator.MoveNext\"]();\r\n                    b2 = e2[\"System.Collections.IEnumerator.MoveNext\"]();\r\n                }\r\n            }\r\n            return ((c !== 0) ? c : (b1 ? 1 : (b2 ? -1 : 0))) | 0;\r\n        }\r\n        finally {\r\n            disposeSafe(e2);\r\n        }\r\n    }\r\n    finally {\r\n        disposeSafe(e1);\r\n    }\r\n}\r\n\r\nexport function contains(value, xs, comparer) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        let found = false;\r\n        while ((!found) && e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            found = comparer.Equals(value, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n        return found;\r\n    }\r\n    finally {\r\n        disposeSafe(e);\r\n    }\r\n}\r\n\r\nexport function enumerateFromFunctions(create, moveNext, current) {\r\n    return generate(create, (x) => (moveNext(x) ? some(current(x)) : (void 0)), (x_1) => {\r\n        const matchValue = x_1;\r\n        if (isDisposable(matchValue)) {\r\n            disposeSafe(matchValue);\r\n        }\r\n    });\r\n}\r\n\r\nexport function enumerateThenFinally(source, compensation) {\r\n    const compensation_1 = compensation;\r\n    return mkSeq(() => {\r\n        try {\r\n            return Enumerator_enumerateThenFinally(compensation_1, ofSeq(source));\r\n        }\r\n        catch (matchValue) {\r\n            compensation_1();\r\n            throw matchValue;\r\n        }\r\n    });\r\n}\r\n\r\nexport function enumerateUsing(resource, source) {\r\n    const compensation = () => {\r\n        if (equals(resource, null)) {\r\n        }\r\n        else {\r\n            let copyOfStruct = resource;\r\n            disposeSafe(copyOfStruct);\r\n        }\r\n    };\r\n    return mkSeq(() => {\r\n        try {\r\n            return Enumerator_enumerateThenFinally(compensation, ofSeq(source(resource)));\r\n        }\r\n        catch (matchValue_1) {\r\n            compensation();\r\n            throw matchValue_1;\r\n        }\r\n    });\r\n}\r\n\r\nexport function enumerateWhile(guard, xs) {\r\n    return concat(unfold((i) => (guard() ? [xs, i + 1] : (void 0)), 0));\r\n}\r\n\r\nexport function filter(f, xs) {\r\n    return choose((x) => {\r\n        if (f(x)) {\r\n            return some(x);\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n    }, xs);\r\n}\r\n\r\nexport function exists(predicate, xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        let found = false;\r\n        while ((!found) && e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            found = predicate(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n        return found;\r\n    }\r\n    finally {\r\n        disposeSafe(e);\r\n    }\r\n}\r\n\r\nexport function exists2(predicate, xs, ys) {\r\n    const e1 = ofSeq(xs);\r\n    try {\r\n        const e2 = ofSeq(ys);\r\n        try {\r\n            let found = false;\r\n            while (((!found) && e1[\"System.Collections.IEnumerator.MoveNext\"]()) && e2[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                found = predicate(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n            }\r\n            return found;\r\n        }\r\n        finally {\r\n            disposeSafe(e2);\r\n        }\r\n    }\r\n    finally {\r\n        disposeSafe(e1);\r\n    }\r\n}\r\n\r\nexport function exactlyOne(xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            const v = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n            if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                throw (new Error((SR_inputSequenceTooLong + \"\\\\nParameter name: \") + \"source\"));\r\n            }\r\n            else {\r\n                return v;\r\n            }\r\n        }\r\n        else {\r\n            throw (new Error((SR_inputSequenceEmpty + \"\\\\nParameter name: \") + \"source\"));\r\n        }\r\n    }\r\n    finally {\r\n        disposeSafe(e);\r\n    }\r\n}\r\n\r\nexport function tryExactlyOne(xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            const v = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n            return e[\"System.Collections.IEnumerator.MoveNext\"]() ? (void 0) : some(v);\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n    }\r\n    finally {\r\n        disposeSafe(e);\r\n    }\r\n}\r\n\r\nexport function tryFind(predicate, xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        let res = void 0;\r\n        while ((res == null) && e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            const c = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n            if (predicate(c)) {\r\n                res = some(c);\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    finally {\r\n        disposeSafe(e);\r\n    }\r\n}\r\n\r\nexport function find(predicate, xs) {\r\n    const matchValue = tryFind(predicate, xs);\r\n    if (matchValue == null) {\r\n        return indexNotFound();\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function tryFindBack(predicate, xs) {\r\n    return tryFindBack_1(predicate, toArray(xs));\r\n}\r\n\r\nexport function findBack(predicate, xs) {\r\n    const matchValue = tryFindBack(predicate, xs);\r\n    if (matchValue == null) {\r\n        return indexNotFound();\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function tryFindIndex(predicate, xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        const loop = (i_mut) => {\r\n            loop:\r\n            while (true) {\r\n                const i = i_mut;\r\n                if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                    if (predicate(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) {\r\n                        return i;\r\n                    }\r\n                    else {\r\n                        i_mut = (i + 1);\r\n                        continue loop;\r\n                    }\r\n                }\r\n                else {\r\n                    return void 0;\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        return loop(0);\r\n    }\r\n    finally {\r\n        disposeSafe(e);\r\n    }\r\n}\r\n\r\nexport function findIndex(predicate, xs) {\r\n    const matchValue = tryFindIndex(predicate, xs);\r\n    if (matchValue == null) {\r\n        return indexNotFound() | 0;\r\n    }\r\n    else {\r\n        return matchValue | 0;\r\n    }\r\n}\r\n\r\nexport function tryFindIndexBack(predicate, xs) {\r\n    return tryFindIndexBack_1(predicate, toArray(xs));\r\n}\r\n\r\nexport function findIndexBack(predicate, xs) {\r\n    const matchValue = tryFindIndexBack(predicate, xs);\r\n    if (matchValue == null) {\r\n        return indexNotFound() | 0;\r\n    }\r\n    else {\r\n        return matchValue | 0;\r\n    }\r\n}\r\n\r\nexport function fold(folder, state, xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        let acc = state;\r\n        while (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            acc = folder(acc, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n        return acc;\r\n    }\r\n    finally {\r\n        disposeSafe(e);\r\n    }\r\n}\r\n\r\nexport function foldBack(folder, xs, state) {\r\n    return foldBack_1(folder, toArray(xs), state);\r\n}\r\n\r\nexport function fold2(folder, state, xs, ys) {\r\n    const e1 = ofSeq(xs);\r\n    try {\r\n        const e2 = ofSeq(ys);\r\n        try {\r\n            let acc = state;\r\n            while (e1[\"System.Collections.IEnumerator.MoveNext\"]() && e2[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                acc = folder(acc, e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n            }\r\n            return acc;\r\n        }\r\n        finally {\r\n            disposeSafe(e2);\r\n        }\r\n    }\r\n    finally {\r\n        disposeSafe(e1);\r\n    }\r\n}\r\n\r\nexport function foldBack2(folder, xs, ys, state) {\r\n    return foldBack2_1(folder, toArray(xs), toArray(ys), state);\r\n}\r\n\r\nexport function forAll(predicate, xs) {\r\n    return !exists((x) => (!predicate(x)), xs);\r\n}\r\n\r\nexport function forAll2(predicate, xs, ys) {\r\n    return !exists2((x, y) => (!predicate(x, y)), xs, ys);\r\n}\r\n\r\nexport function tryHead(xs) {\r\n    if (isArrayLike(xs)) {\r\n        return tryHead_1(xs);\r\n    }\r\n    else if (xs instanceof FSharpList) {\r\n        return tryHead_2(xs);\r\n    }\r\n    else {\r\n        const e = ofSeq(xs);\r\n        try {\r\n            return e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : (void 0);\r\n        }\r\n        finally {\r\n            disposeSafe(e);\r\n        }\r\n    }\r\n}\r\n\r\nexport function head(xs) {\r\n    const matchValue = tryHead(xs);\r\n    if (matchValue == null) {\r\n        throw (new Error((SR_inputSequenceEmpty + \"\\\\nParameter name: \") + \"source\"));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function initialize(count, f) {\r\n    return unfold((i) => ((i < count) ? [f(i), i + 1] : (void 0)), 0);\r\n}\r\n\r\nexport function initializeInfinite(f) {\r\n    return initialize(2147483647, f);\r\n}\r\n\r\nexport function isEmpty(xs) {\r\n    if (isArrayLike(xs)) {\r\n        return xs.length === 0;\r\n    }\r\n    else if (xs instanceof FSharpList) {\r\n        return isEmpty_1(xs);\r\n    }\r\n    else {\r\n        const e = ofSeq(xs);\r\n        try {\r\n            return !e[\"System.Collections.IEnumerator.MoveNext\"]();\r\n        }\r\n        finally {\r\n            disposeSafe(e);\r\n        }\r\n    }\r\n}\r\n\r\nexport function tryItem(index, xs) {\r\n    if (isArrayLike(xs)) {\r\n        return tryItem_1(index, xs);\r\n    }\r\n    else if (xs instanceof FSharpList) {\r\n        return tryItem_2(index, xs);\r\n    }\r\n    else {\r\n        const e = ofSeq(xs);\r\n        try {\r\n            const loop = (index_1_mut) => {\r\n                loop:\r\n                while (true) {\r\n                    const index_1 = index_1_mut;\r\n                    if (!e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                        return void 0;\r\n                    }\r\n                    else if (index_1 === 0) {\r\n                        return some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n                    }\r\n                    else {\r\n                        index_1_mut = (index_1 - 1);\r\n                        continue loop;\r\n                    }\r\n                    break;\r\n                }\r\n            };\r\n            return loop(index);\r\n        }\r\n        finally {\r\n            disposeSafe(e);\r\n        }\r\n    }\r\n}\r\n\r\nexport function item(index, xs) {\r\n    const matchValue = tryItem(index, xs);\r\n    if (matchValue == null) {\r\n        throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function iterate(action, xs) {\r\n    fold((unitVar, x) => {\r\n        action(x);\r\n    }, void 0, xs);\r\n}\r\n\r\nexport function iterate2(action, xs, ys) {\r\n    fold2((unitVar, x, y) => {\r\n        action(x, y);\r\n    }, void 0, xs, ys);\r\n}\r\n\r\nexport function iterateIndexed(action, xs) {\r\n    fold((i, x) => {\r\n        action(i, x);\r\n        return (i + 1) | 0;\r\n    }, 0, xs);\r\n}\r\n\r\nexport function iterateIndexed2(action, xs, ys) {\r\n    fold2((i, x, y) => {\r\n        action(i, x, y);\r\n        return (i + 1) | 0;\r\n    }, 0, xs, ys);\r\n}\r\n\r\nexport function tryLast(xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        const loop = (acc_mut) => {\r\n            loop:\r\n            while (true) {\r\n                const acc = acc_mut;\r\n                if (!e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                    return acc;\r\n                }\r\n                else {\r\n                    acc_mut = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n                    continue loop;\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        return e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(loop(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0);\r\n    }\r\n    finally {\r\n        disposeSafe(e);\r\n    }\r\n}\r\n\r\nexport function last(xs) {\r\n    const matchValue = tryLast(xs);\r\n    if (matchValue == null) {\r\n        throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"source\"));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function length(xs) {\r\n    if (isArrayLike(xs)) {\r\n        return xs.length | 0;\r\n    }\r\n    else if (xs instanceof FSharpList) {\r\n        return length_1(xs) | 0;\r\n    }\r\n    else {\r\n        const e = ofSeq(xs);\r\n        try {\r\n            let count = 0;\r\n            while (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                count = ((count + 1) | 0);\r\n            }\r\n            return count | 0;\r\n        }\r\n        finally {\r\n            disposeSafe(e);\r\n        }\r\n    }\r\n}\r\n\r\nexport function map(mapping, xs) {\r\n    return generate(() => ofSeq(xs), (e) => (e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(mapping(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0)), (e_1) => {\r\n        disposeSafe(e_1);\r\n    });\r\n}\r\n\r\nexport function mapIndexed(mapping, xs) {\r\n    return generateIndexed(() => ofSeq(xs), (i, e) => (e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(mapping(i, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0)), (e_1) => {\r\n        disposeSafe(e_1);\r\n    });\r\n}\r\n\r\nexport function indexed(xs) {\r\n    return mapIndexed((i, x) => [i, x], xs);\r\n}\r\n\r\nexport function map2(mapping, xs, ys) {\r\n    return generate(() => [ofSeq(xs), ofSeq(ys)], (tupledArg) => {\r\n        const e1 = tupledArg[0];\r\n        const e2 = tupledArg[1];\r\n        return (e1[\"System.Collections.IEnumerator.MoveNext\"]() && e2[\"System.Collections.IEnumerator.MoveNext\"]()) ? some(mapping(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0);\r\n    }, (tupledArg_1) => {\r\n        try {\r\n            disposeSafe(tupledArg_1[0]);\r\n        }\r\n        finally {\r\n            disposeSafe(tupledArg_1[1]);\r\n        }\r\n    });\r\n}\r\n\r\nexport function mapIndexed2(mapping, xs, ys) {\r\n    return generateIndexed(() => [ofSeq(xs), ofSeq(ys)], (i, tupledArg) => {\r\n        const e1 = tupledArg[0];\r\n        const e2 = tupledArg[1];\r\n        return (e1[\"System.Collections.IEnumerator.MoveNext\"]() && e2[\"System.Collections.IEnumerator.MoveNext\"]()) ? some(mapping(i, e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0);\r\n    }, (tupledArg_1) => {\r\n        try {\r\n            disposeSafe(tupledArg_1[0]);\r\n        }\r\n        finally {\r\n            disposeSafe(tupledArg_1[1]);\r\n        }\r\n    });\r\n}\r\n\r\nexport function map3(mapping, xs, ys, zs) {\r\n    return generate(() => [ofSeq(xs), ofSeq(ys), ofSeq(zs)], (tupledArg) => {\r\n        const e1 = tupledArg[0];\r\n        const e2 = tupledArg[1];\r\n        const e3 = tupledArg[2];\r\n        return ((e1[\"System.Collections.IEnumerator.MoveNext\"]() && e2[\"System.Collections.IEnumerator.MoveNext\"]()) && e3[\"System.Collections.IEnumerator.MoveNext\"]()) ? some(mapping(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e3[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0);\r\n    }, (tupledArg_1) => {\r\n        try {\r\n            disposeSafe(tupledArg_1[0]);\r\n        }\r\n        finally {\r\n            try {\r\n                disposeSafe(tupledArg_1[1]);\r\n            }\r\n            finally {\r\n                disposeSafe(tupledArg_1[2]);\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function readOnly(xs) {\r\n    checkNonNull(\"source\", xs);\r\n    return map((x) => x, xs);\r\n}\r\n\r\nexport class CachedSeq$1 {\r\n    constructor(cleanup, res) {\r\n        this.cleanup = cleanup;\r\n        this.res = res;\r\n    }\r\n    Dispose() {\r\n        const _ = this;\r\n        _.cleanup();\r\n    }\r\n    GetEnumerator() {\r\n        const _ = this;\r\n        return getEnumerator(_.res);\r\n    }\r\n    [Symbol.iterator]() {\r\n        return toIterator(this.GetEnumerator());\r\n    }\r\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\r\n        const _ = this;\r\n        return getEnumerator(_.res);\r\n    }\r\n}\r\n\r\nexport function CachedSeq$1$reflection(gen0) {\r\n    return class_type(\"SeqModule.CachedSeq`1\", [gen0], CachedSeq$1);\r\n}\r\n\r\nexport function CachedSeq$1_$ctor_Z7A8347D4(cleanup, res) {\r\n    return new CachedSeq$1(cleanup, res);\r\n}\r\n\r\nexport function CachedSeq$1__Clear(_) {\r\n    _.cleanup();\r\n}\r\n\r\nexport function cache(source) {\r\n    checkNonNull(\"source\", source);\r\n    const prefix = [];\r\n    let enumeratorR = void 0;\r\n    return CachedSeq$1_$ctor_Z7A8347D4(() => {\r\n        Operators_Lock(prefix, () => {\r\n            clear(prefix);\r\n            let pattern_matching_result, e;\r\n            if (enumeratorR != null) {\r\n                if (value_1(enumeratorR) != null) {\r\n                    pattern_matching_result = 0;\r\n                    e = value_1(enumeratorR);\r\n                }\r\n                else {\r\n                    pattern_matching_result = 1;\r\n                }\r\n            }\r\n            else {\r\n                pattern_matching_result = 1;\r\n            }\r\n            switch (pattern_matching_result) {\r\n                case 0: {\r\n                    disposeSafe(e);\r\n                    break;\r\n                }\r\n            }\r\n            enumeratorR = (void 0);\r\n        });\r\n    }, unfold((i_1) => Operators_Lock(prefix, () => {\r\n        if (i_1 < prefix.length) {\r\n            return [prefix[i_1], i_1 + 1];\r\n        }\r\n        else {\r\n            if (i_1 >= prefix.length) {\r\n                let optEnumerator_2;\r\n                if (enumeratorR != null) {\r\n                    optEnumerator_2 = value_1(enumeratorR);\r\n                }\r\n                else {\r\n                    const optEnumerator = getEnumerator(source);\r\n                    enumeratorR = some(optEnumerator);\r\n                    optEnumerator_2 = optEnumerator;\r\n                }\r\n                if (optEnumerator_2 == null) {\r\n                }\r\n                else {\r\n                    const enumerator = optEnumerator_2;\r\n                    if (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                        void (prefix.push(enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()));\r\n                    }\r\n                    else {\r\n                        disposeSafe(enumerator);\r\n                        enumeratorR = some(void 0);\r\n                    }\r\n                }\r\n            }\r\n            return (i_1 < prefix.length) ? [prefix[i_1], i_1 + 1] : (void 0);\r\n        }\r\n    }), 0));\r\n}\r\n\r\nexport function allPairs(xs, ys) {\r\n    const ysCache = cache(ys);\r\n    return delay(() => concat(map((x) => map((y) => [x, y], ysCache), xs)));\r\n}\r\n\r\nexport function mapFold(mapping, state, xs) {\r\n    const patternInput = mapFold_1(mapping, state, toArray(xs));\r\n    return [readOnly(patternInput[0]), patternInput[1]];\r\n}\r\n\r\nexport function mapFoldBack(mapping, xs, state) {\r\n    const patternInput = mapFoldBack_1(mapping, toArray(xs), state);\r\n    return [readOnly(patternInput[0]), patternInput[1]];\r\n}\r\n\r\nexport function tryPick(chooser, xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        let res = void 0;\r\n        while ((res == null) && e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            res = chooser(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n        return res;\r\n    }\r\n    finally {\r\n        disposeSafe(e);\r\n    }\r\n}\r\n\r\nexport function pick(chooser, xs) {\r\n    const matchValue = tryPick(chooser, xs);\r\n    if (matchValue == null) {\r\n        return indexNotFound();\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function reduce(folder, xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        const loop = (acc_mut) => {\r\n            loop:\r\n            while (true) {\r\n                const acc = acc_mut;\r\n                if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                    acc_mut = folder(acc, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n                    continue loop;\r\n                }\r\n                else {\r\n                    return acc;\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            return loop(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n        else {\r\n            throw (new Error(SR_inputSequenceEmpty));\r\n        }\r\n    }\r\n    finally {\r\n        disposeSafe(e);\r\n    }\r\n}\r\n\r\nexport function reduceBack(folder, xs) {\r\n    const arr = toArray(xs);\r\n    if (arr.length > 0) {\r\n        return arr.reduceRight(folder);\r\n    }\r\n    else {\r\n        throw (new Error(SR_inputSequenceEmpty));\r\n    }\r\n}\r\n\r\nexport function replicate(n, x) {\r\n    return initialize(n, (_arg) => x);\r\n}\r\n\r\nexport function reverse(xs) {\r\n    return delay(() => ofArray(reverse_1(toArray(xs))));\r\n}\r\n\r\nexport function scan(folder, state, xs) {\r\n    return delay(() => {\r\n        let acc = state;\r\n        return concat([singleton(state), map((x) => {\r\n            acc = folder(acc, x);\r\n            return acc;\r\n        }, xs)]);\r\n    });\r\n}\r\n\r\nexport function scanBack(folder, xs, state) {\r\n    return delay(() => ofArray(scanBack_1(folder, toArray(xs), state)));\r\n}\r\n\r\nexport function skip(count, source) {\r\n    return mkSeq(() => {\r\n        const e = ofSeq(source);\r\n        try {\r\n            for (let _ = 1; _ <= count; _++) {\r\n                if (!e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                    throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"source\"));\r\n                }\r\n            }\r\n            return Enumerator_enumerateThenFinally(() => {\r\n            }, e);\r\n        }\r\n        catch (matchValue) {\r\n            disposeSafe(e);\r\n            throw matchValue;\r\n        }\r\n    });\r\n}\r\n\r\nexport function skipWhile(predicate, xs) {\r\n    return delay(() => {\r\n        let skipped = true;\r\n        return filter((x) => {\r\n            if (skipped) {\r\n                skipped = predicate(x);\r\n            }\r\n            return !skipped;\r\n        }, xs);\r\n    });\r\n}\r\n\r\nexport function tail(xs) {\r\n    return skip(1, xs);\r\n}\r\n\r\nexport function take(count, xs) {\r\n    return generateIndexed(() => ofSeq(xs), (i, e) => {\r\n        if (i < count) {\r\n            if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                return some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n            }\r\n            else {\r\n                throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"source\"));\r\n            }\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n    }, (e_1) => {\r\n        disposeSafe(e_1);\r\n    });\r\n}\r\n\r\nexport function takeWhile(predicate, xs) {\r\n    return generate(() => ofSeq(xs), (e) => ((e[\"System.Collections.IEnumerator.MoveNext\"]() && predicate(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) ? some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : (void 0)), (e_1) => {\r\n        disposeSafe(e_1);\r\n    });\r\n}\r\n\r\nexport function truncate(count, xs) {\r\n    return generateIndexed(() => ofSeq(xs), (i, e) => (((i < count) && e[\"System.Collections.IEnumerator.MoveNext\"]()) ? some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : (void 0)), (e_1) => {\r\n        disposeSafe(e_1);\r\n    });\r\n}\r\n\r\nexport function zip(xs, ys) {\r\n    return map2((x, y) => [x, y], xs, ys);\r\n}\r\n\r\nexport function zip3(xs, ys, zs) {\r\n    return map3((x, y, z) => [x, y, z], xs, ys, zs);\r\n}\r\n\r\nexport function collect(mapping, xs) {\r\n    return delay(() => concat(map(mapping, xs)));\r\n}\r\n\r\nexport function where(predicate, xs) {\r\n    return filter(predicate, xs);\r\n}\r\n\r\nexport function pairwise(xs) {\r\n    return delay(() => ofArray(pairwise_1(toArray(xs))));\r\n}\r\n\r\nexport function splitInto(chunks, xs) {\r\n    return delay(() => ofArray(map_1(ofArray, splitInto_1(chunks, toArray(xs)))));\r\n}\r\n\r\nexport function windowed(windowSize, xs) {\r\n    return delay(() => ofArray(map_1(ofArray, windowed_1(windowSize, toArray(xs)))));\r\n}\r\n\r\nexport function transpose(xss) {\r\n    return delay(() => ofArray(map_1(ofArray, transpose_1(map_1(toArray, toArray(xss))))));\r\n}\r\n\r\nexport function sortWith(comparer, xs) {\r\n    return delay(() => {\r\n        const arr = toArray(xs);\r\n        arr.sort(comparer);\r\n        return ofArray(arr);\r\n    });\r\n}\r\n\r\nexport function sort(xs, comparer) {\r\n    return sortWith((x, y) => comparer.Compare(x, y), xs);\r\n}\r\n\r\nexport function sortBy(projection, xs, comparer) {\r\n    return sortWith((x, y) => comparer.Compare(projection(x), projection(y)), xs);\r\n}\r\n\r\nexport function sortDescending(xs, comparer) {\r\n    return sortWith((x, y) => (comparer.Compare(x, y) * -1), xs);\r\n}\r\n\r\nexport function sortByDescending(projection, xs, comparer) {\r\n    return sortWith((x, y) => (comparer.Compare(projection(x), projection(y)) * -1), xs);\r\n}\r\n\r\nexport function sum(xs, adder) {\r\n    return fold((acc, x) => adder.Add(acc, x), adder.GetZero(), xs);\r\n}\r\n\r\nexport function sumBy(f, xs, adder) {\r\n    return fold((acc, x) => adder.Add(acc, f(x)), adder.GetZero(), xs);\r\n}\r\n\r\nexport function maxBy(projection, xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? y : x), xs);\r\n}\r\n\r\nexport function max(xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? y : x), xs);\r\n}\r\n\r\nexport function minBy(projection, xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? x : y), xs);\r\n}\r\n\r\nexport function min(xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? x : y), xs);\r\n}\r\n\r\nexport function average(xs, averager) {\r\n    let count = 0;\r\n    const total = fold((acc, x) => {\r\n        count = ((count + 1) | 0);\r\n        return averager.Add(acc, x);\r\n    }, averager.GetZero(), xs);\r\n    if (count === 0) {\r\n        throw (new Error((SR_inputSequenceEmpty + \"\\\\nParameter name: \") + \"source\"));\r\n    }\r\n    else {\r\n        return averager.DivideByInt(total, count);\r\n    }\r\n}\r\n\r\nexport function averageBy(f, xs, averager) {\r\n    let count = 0;\r\n    const total = fold((acc, x) => {\r\n        count = ((count + 1) | 0);\r\n        return averager.Add(acc, f(x));\r\n    }, averager.GetZero(), xs);\r\n    if (count === 0) {\r\n        throw (new Error((SR_inputSequenceEmpty + \"\\\\nParameter name: \") + \"source\"));\r\n    }\r\n    else {\r\n        return averager.DivideByInt(total, count);\r\n    }\r\n}\r\n\r\nexport function permute(f, xs) {\r\n    return delay(() => ofArray(permute_1(f, toArray(xs))));\r\n}\r\n\r\nexport function chunkBySize(chunkSize, xs) {\r\n    return delay(() => ofArray(map_1(ofArray, chunkBySize_1(chunkSize, toArray(xs)))));\r\n}\r\n\r\nexport function insertAt(index, y, xs) {\r\n    let isDone = false;\r\n    if (index < 0) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    return generateIndexed(() => ofSeq(xs), (i, e) => {\r\n        if ((isDone ? true : (i < index)) && e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            return some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n        else if (i === index) {\r\n            isDone = true;\r\n            return some(y);\r\n        }\r\n        else {\r\n            if (!isDone) {\r\n                throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n            }\r\n            return void 0;\r\n        }\r\n    }, (e_1) => {\r\n        disposeSafe(e_1);\r\n    });\r\n}\r\n\r\nexport function insertManyAt(index, ys, xs) {\r\n    let status = -1;\r\n    if (index < 0) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    return generateIndexed(() => [ofSeq(xs), ofSeq(ys)], (i, tupledArg) => {\r\n        const e1 = tupledArg[0];\r\n        const e2 = tupledArg[1];\r\n        if (i === index) {\r\n            status = 0;\r\n        }\r\n        let inserted;\r\n        if (status === 0) {\r\n            if (e2[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                inserted = some(e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n            }\r\n            else {\r\n                status = 1;\r\n                inserted = (void 0);\r\n            }\r\n        }\r\n        else {\r\n            inserted = (void 0);\r\n        }\r\n        if (inserted == null) {\r\n            if (e1[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                return some(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n            }\r\n            else {\r\n                if (status < 1) {\r\n                    throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n                }\r\n                return void 0;\r\n            }\r\n        }\r\n        else {\r\n            return some(value_1(inserted));\r\n        }\r\n    }, (tupledArg_1) => {\r\n        disposeSafe(tupledArg_1[0]);\r\n        disposeSafe(tupledArg_1[1]);\r\n    });\r\n}\r\n\r\nexport function removeAt(index, xs) {\r\n    let isDone = false;\r\n    if (index < 0) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    return generateIndexed(() => ofSeq(xs), (i, e) => {\r\n        if ((isDone ? true : (i < index)) && e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            return some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n        else if ((i === index) && e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            isDone = true;\r\n            return e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : (void 0);\r\n        }\r\n        else {\r\n            if (!isDone) {\r\n                throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n            }\r\n            return void 0;\r\n        }\r\n    }, (e_1) => {\r\n        disposeSafe(e_1);\r\n    });\r\n}\r\n\r\nexport function removeManyAt(index, count, xs) {\r\n    if (index < 0) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    return generateIndexed(() => ofSeq(xs), (i, e) => {\r\n        if (i < index) {\r\n            if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                return some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n            }\r\n            else {\r\n                throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n            }\r\n        }\r\n        else {\r\n            if (i === index) {\r\n                for (let _ = 1; _ <= count; _++) {\r\n                    if (!e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"count\"));\r\n                    }\r\n                }\r\n            }\r\n            return e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : (void 0);\r\n        }\r\n    }, (e_1) => {\r\n        disposeSafe(e_1);\r\n    });\r\n}\r\n\r\nexport function updateAt(index, y, xs) {\r\n    let isDone = false;\r\n    if (index < 0) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    return generateIndexed(() => ofSeq(xs), (i, e) => {\r\n        if ((isDone ? true : (i < index)) && e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            return some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n        else if ((i === index) && e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            isDone = true;\r\n            return some(y);\r\n        }\r\n        else {\r\n            if (!isDone) {\r\n                throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n            }\r\n            return void 0;\r\n        }\r\n    }, (e_1) => {\r\n        disposeSafe(e_1);\r\n    });\r\n}\r\n\r\n","import { disposeSafe, structuralHash, equals } from \"./Util.js\";\r\nimport { HashIdentity_Structural, ComparisonIdentity_Structural } from \"./FSharp.Collections.js\";\r\nimport { StringBuilder__Append_Z721C83C5 } from \"./System.Text.js\";\r\n\r\nexport const LanguagePrimitives_GenericEqualityComparer = {\r\n    [\"System.Collections.IEqualityComparer.Equals541DA560\"](x, y) {\r\n        return equals(x, y);\r\n    },\r\n    [\"System.Collections.IEqualityComparer.GetHashCode4E60E31B\"](x_1) {\r\n        return structuralHash(x_1);\r\n    },\r\n};\r\n\r\nexport const LanguagePrimitives_GenericEqualityERComparer = {\r\n    [\"System.Collections.IEqualityComparer.Equals541DA560\"](x, y) {\r\n        return equals(x, y);\r\n    },\r\n    [\"System.Collections.IEqualityComparer.GetHashCode4E60E31B\"](x_1) {\r\n        return structuralHash(x_1);\r\n    },\r\n};\r\n\r\nexport function LanguagePrimitives_FastGenericComparer() {\r\n    return ComparisonIdentity_Structural();\r\n}\r\n\r\nexport function LanguagePrimitives_FastGenericComparerFromTable() {\r\n    return ComparisonIdentity_Structural();\r\n}\r\n\r\nexport function LanguagePrimitives_FastGenericEqualityComparer() {\r\n    return HashIdentity_Structural();\r\n}\r\n\r\nexport function LanguagePrimitives_FastGenericEqualityComparerFromTable() {\r\n    return HashIdentity_Structural();\r\n}\r\n\r\nexport function Operators_Failure(message) {\r\n    return new Error(message);\r\n}\r\n\r\nexport function Operators_FailurePattern(exn) {\r\n    return exn.message;\r\n}\r\n\r\nexport function Operators_NullArg(x) {\r\n    throw (new Error(x));\r\n}\r\n\r\nexport function Operators_Using(resource, action) {\r\n    try {\r\n        return action(resource);\r\n    }\r\n    finally {\r\n        if (equals(resource, null)) {\r\n        }\r\n        else {\r\n            disposeSafe(resource);\r\n        }\r\n    }\r\n}\r\n\r\nexport function Operators_Lock(_lockObj, action) {\r\n    return action();\r\n}\r\n\r\nexport function ExtraTopLevelOperators_LazyPattern(input) {\r\n    return input.Value;\r\n}\r\n\r\nexport function PrintfModule_PrintFormatToStringBuilderThen(continuation, builder, format) {\r\n    return format.cont((s) => {\r\n        StringBuilder__Append_Z721C83C5(builder, s);\r\n        return continuation();\r\n    });\r\n}\r\n\r\nexport function PrintfModule_PrintFormatToStringBuilder(builder, format) {\r\n    return PrintfModule_PrintFormatToStringBuilderThen(() => {\r\n    }, builder, format);\r\n}\r\n\r\n","import { compare } from \"./Util.js\";\r\nimport { unfold, delay } from \"./Seq.js\";\r\nimport { op_Addition, fromZero } from \"./BigInt.js\";\r\nimport { op_Addition as op_Addition_1, fromParts } from \"./Decimal.js\";\r\nimport { op_Addition as op_Addition_2, fromBits } from \"./Long.js\";\r\n\r\nexport function makeRangeStepFunction(step, stop, zero, add) {\r\n    const stepComparedWithZero = compare(step, zero) | 0;\r\n    if (stepComparedWithZero === 0) {\r\n        throw (new Error(\"The step of a range cannot be zero\"));\r\n    }\r\n    const stepGreaterThanZero = stepComparedWithZero > 0;\r\n    return (x) => {\r\n        const comparedWithLast = compare(x, stop) | 0;\r\n        return ((stepGreaterThanZero && (comparedWithLast <= 0)) ? true : ((!stepGreaterThanZero) && (comparedWithLast >= 0))) ? [x, add(x, step)] : (void 0);\r\n    };\r\n}\r\n\r\nexport function integralRangeStep(start, step, stop, zero, add) {\r\n    const stepFn = makeRangeStepFunction(step, stop, zero, add);\r\n    return delay(() => unfold(stepFn, start));\r\n}\r\n\r\nexport function rangeBigInt(start, step, stop) {\r\n    return integralRangeStep(start, step, stop, fromZero(), op_Addition);\r\n}\r\n\r\nexport function rangeDecimal(start, step, stop) {\r\n    return integralRangeStep(start, step, stop, fromParts(0, 0, 0, false, 0), op_Addition_1);\r\n}\r\n\r\nexport function rangeDouble(start, step, stop) {\r\n    return integralRangeStep(start, step, stop, 0, (x, y) => (x + y));\r\n}\r\n\r\nexport function rangeInt64(start, step, stop) {\r\n    return integralRangeStep(start, step, stop, fromBits(0, 0, false), op_Addition_2);\r\n}\r\n\r\nexport function rangeUInt64(start, step, stop) {\r\n    return integralRangeStep(start, step, stop, fromBits(0, 0, true), op_Addition_2);\r\n}\r\n\r\nexport function rangeChar(start, stop) {\r\n    const intStop = stop.charCodeAt(0) | 0;\r\n    return delay(() => unfold((c) => {\r\n        if (c <= intStop) {\r\n            return [String.fromCharCode(c), c + 1];\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n    }, start.charCodeAt(0)));\r\n}\r\n\r\n","import { Union } from \"../fable-library.3.7.18/Types.js\";\nimport { class_type, union_type, int32_type, array_type } from \"../fable-library.3.7.18/Reflection.js\";\nimport { fill } from \"../fable-library.3.7.18/Array.js\";\nimport { comparePrimitives, max } from \"../fable-library.3.7.18/Util.js\";\nimport { some } from \"../fable-library.3.7.18/Option.js\";\nimport { singleton, collect, take, skip, append, delay } from \"../fable-library.3.7.18/Seq.js\";\nimport { rangeDouble } from \"../fable-library.3.7.18/Range.js\";\n\nexport class RingState$1 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Writable\", \"ReadWritable\"];\n    }\n}\n\nexport function RingState$1$reflection(gen0) {\n    return union_type(\"Elmish.RingState`1\", [gen0], RingState$1, () => [[[\"wx\", array_type(gen0)], [\"ix\", int32_type]], [[\"rw\", array_type(gen0)], [\"wix\", int32_type], [\"rix\", int32_type]]]);\n}\n\nexport class RingBuffer$1 {\n    constructor(size) {\n        this.state = (new RingState$1(0, fill(new Array(max(comparePrimitives, size, 10)), 0, max(comparePrimitives, size, 10), null), 0));\n    }\n}\n\nexport function RingBuffer$1$reflection(gen0) {\n    return class_type(\"Elmish.RingBuffer`1\", [gen0], RingBuffer$1);\n}\n\nexport function RingBuffer$1_$ctor_Z524259A4(size) {\n    return new RingBuffer$1(size);\n}\n\nexport function RingBuffer$1__Pop(__) {\n    const matchValue = __.state;\n    if (matchValue.tag === 1) {\n        const wix = matchValue.fields[1] | 0;\n        const rix = matchValue.fields[2] | 0;\n        const items = matchValue.fields[0];\n        const rix$0027 = ((rix + 1) % items.length) | 0;\n        if (rix$0027 === wix) {\n            __.state = (new RingState$1(0, items, wix));\n        }\n        else {\n            __.state = (new RingState$1(1, items, wix, rix$0027));\n        }\n        return some(items[rix]);\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function RingBuffer$1__Push_2B595(__, item) {\n    const matchValue = __.state;\n    if (matchValue.tag === 1) {\n        const wix_1 = matchValue.fields[1] | 0;\n        const rix = matchValue.fields[2] | 0;\n        const items_1 = matchValue.fields[0];\n        items_1[wix_1] = item;\n        const wix$0027 = ((wix_1 + 1) % items_1.length) | 0;\n        if (wix$0027 === rix) {\n            __.state = (new RingState$1(1, RingBuffer$1__doubleSize(__, rix, items_1), items_1.length, 0));\n        }\n        else {\n            __.state = (new RingState$1(1, items_1, wix$0027, rix));\n        }\n    }\n    else {\n        const ix = matchValue.fields[1] | 0;\n        const items = matchValue.fields[0];\n        items[ix] = item;\n        const wix = ((ix + 1) % items.length) | 0;\n        __.state = (new RingState$1(1, items, wix, ix));\n    }\n}\n\nfunction RingBuffer$1__doubleSize(this$, ix, items) {\n    return Array.from(delay(() => append(skip(ix, items), delay(() => append(take(ix, items), delay(() => collect((matchValue) => singleton(null), rangeDouble(0, 1, items.length))))))));\n}\n\n","import { Record } from \"../fable-library.3.7.18/Types.js\";\nimport { record_type, class_type, string_type, tuple_type, list_type, lambda_type, unit_type } from \"../fable-library.3.7.18/Reflection.js\";\nimport { Cmd_exec, Cmd_batch, Cmd_none } from \"./cmd.fs.js\";\nimport { curry, partialApply, uncurry } from \"../fable-library.3.7.18/Util.js\";\nimport { Log_toConsole, Log_onError } from \"./prelude.fs.js\";\nimport { ofArray } from \"../fable-library.3.7.18/List.js\";\nimport { RingBuffer$1__Pop, RingBuffer$1__Push_2B595, RingBuffer$1_$ctor_Z524259A4 } from \"./ring.fs.js\";\nimport { value as value_1, some } from \"../fable-library.3.7.18/Option.js\";\nimport { printf, toText } from \"../fable-library.3.7.18/String.js\";\n\nexport class Program$4 extends Record {\n    constructor(init, update, subscribe, view, setState, onError, syncDispatch) {\n        super();\n        this.init = init;\n        this.update = update;\n        this.subscribe = subscribe;\n        this.view = view;\n        this.setState = setState;\n        this.onError = onError;\n        this.syncDispatch = syncDispatch;\n    }\n}\n\nexport function Program$4$reflection(gen0, gen1, gen2, gen3) {\n    return record_type(\"Elmish.Program`4\", [gen0, gen1, gen2, gen3], Program$4, () => [[\"init\", lambda_type(gen0, tuple_type(gen1, list_type(lambda_type(lambda_type(gen2, unit_type), unit_type))))], [\"update\", lambda_type(gen2, lambda_type(gen1, tuple_type(gen1, list_type(lambda_type(lambda_type(gen2, unit_type), unit_type)))))], [\"subscribe\", lambda_type(gen1, list_type(lambda_type(lambda_type(gen2, unit_type), unit_type)))], [\"view\", lambda_type(gen1, lambda_type(lambda_type(gen2, unit_type), gen3))], [\"setState\", lambda_type(gen1, lambda_type(lambda_type(gen2, unit_type), unit_type))], [\"onError\", lambda_type(tuple_type(string_type, class_type(\"System.Exception\")), unit_type)], [\"syncDispatch\", lambda_type(lambda_type(gen2, unit_type), lambda_type(gen2, unit_type))]]);\n}\n\nexport function ProgramModule_mkProgram(init, update, view) {\n    return new Program$4(init, update, (_arg) => Cmd_none(), view, uncurry(2, (model) => {\n        const f1 = partialApply(1, view, [model]);\n        return (arg) => {\n            f1(arg);\n        };\n    }), (tupledArg) => {\n        Log_onError(tupledArg[0], tupledArg[1]);\n    }, uncurry(2, (x) => x));\n}\n\nexport function ProgramModule_mkSimple(init, update, view) {\n    return new Program$4((arg) => [init(arg), Cmd_none()], uncurry(2, (msg) => {\n        const f1_1 = partialApply(1, update, [msg]);\n        return (arg_1) => [f1_1(arg_1), Cmd_none()];\n    }), (_arg) => Cmd_none(), view, uncurry(2, (model) => {\n        const f1_2 = partialApply(1, view, [model]);\n        return (arg_2) => {\n            f1_2(arg_2);\n        };\n    }), (tupledArg) => {\n        Log_onError(tupledArg[0], tupledArg[1]);\n    }, uncurry(2, (x) => x));\n}\n\nexport function ProgramModule_withSubscription(subscribe, program) {\n    return new Program$4(program.init, program.update, (model) => Cmd_batch(ofArray([program.subscribe(model), subscribe(model)])), program.view, program.setState, program.onError, program.syncDispatch);\n}\n\nexport function ProgramModule_withConsoleTrace(program) {\n    return new Program$4((arg) => {\n        const patternInput = program.init(arg);\n        const initModel = patternInput[0];\n        Log_toConsole(\"Initial state:\", initModel);\n        return [initModel, patternInput[1]];\n    }, (msg, model) => {\n        Log_toConsole(\"New message:\", msg);\n        const patternInput_1 = program.update(msg, model);\n        const newModel = patternInput_1[0];\n        Log_toConsole(\"Updated state:\", newModel);\n        return [newModel, patternInput_1[1]];\n    }, program.subscribe, program.view, program.setState, program.onError, program.syncDispatch);\n}\n\nexport function ProgramModule_withTrace(trace, program) {\n    return new Program$4(program.init, (msg, model) => {\n        const patternInput = program.update(msg, model);\n        const state = patternInput[0];\n        trace(msg, state);\n        return [state, patternInput[1]];\n    }, program.subscribe, program.view, program.setState, program.onError, program.syncDispatch);\n}\n\nexport function ProgramModule_withErrorHandler(onError, program) {\n    return new Program$4(program.init, program.update, program.subscribe, program.view, program.setState, onError, program.syncDispatch);\n}\n\nexport function ProgramModule_mapErrorHandler(map, program) {\n    return new Program$4(program.init, program.update, program.subscribe, program.view, program.setState, partialApply(1, map, [program.onError]), program.syncDispatch);\n}\n\nexport function ProgramModule_onError(program) {\n    return program.onError;\n}\n\nexport function ProgramModule_withSetState(setState, program) {\n    return new Program$4(program.init, program.update, program.subscribe, program.view, setState, program.onError, program.syncDispatch);\n}\n\nexport function ProgramModule_setState(program) {\n    return curry(2, program.setState);\n}\n\nexport function ProgramModule_view(program) {\n    return curry(2, program.view);\n}\n\nexport function ProgramModule_withSyncDispatch(syncDispatch, program) {\n    return new Program$4(program.init, program.update, program.subscribe, program.view, program.setState, program.onError, syncDispatch);\n}\n\nexport function ProgramModule_map(mapInit, mapUpdate, mapView, mapSetState, mapSubscribe, program) {\n    const init = partialApply(1, mapInit, [program.init]);\n    const update = partialApply(2, mapUpdate, [curry(2, program.update)]);\n    const view = partialApply(2, mapView, [curry(2, program.view)]);\n    const setState = partialApply(2, mapSetState, [curry(2, program.setState)]);\n    return new Program$4(init, uncurry(2, update), partialApply(1, mapSubscribe, [program.subscribe]), uncurry(2, view), uncurry(2, setState), program.onError, uncurry(2, (x) => x));\n}\n\nexport function ProgramModule_runWith(arg, program) {\n    const patternInput = program.init(arg);\n    const model = patternInput[0];\n    const rb = RingBuffer$1_$ctor_Z524259A4(10);\n    let reentered = false;\n    let state = model;\n    const dispatch = (msg) => {\n        if (reentered) {\n            RingBuffer$1__Push_2B595(rb, msg);\n        }\n        else {\n            reentered = true;\n            let nextMsg = some(msg);\n            while (nextMsg != null) {\n                const msg_1 = value_1(nextMsg);\n                try {\n                    const patternInput_1 = program.update(msg_1, state);\n                    const model$0027 = patternInput_1[0];\n                    program.setState(model$0027, syncDispatch);\n                    Cmd_exec((ex) => {\n                        program.onError([toText(printf(\"Error in command while handling: %A\"))(msg_1), ex]);\n                    }, syncDispatch, patternInput_1[1]);\n                    state = model$0027;\n                }\n                catch (ex_1) {\n                    program.onError([toText(printf(\"Unable to process the message: %A\"))(msg_1), ex_1]);\n                }\n                nextMsg = RingBuffer$1__Pop(rb);\n            }\n            reentered = false;\n        }\n    };\n    const syncDispatch = partialApply(1, program.syncDispatch, [dispatch]);\n    program.setState(model, syncDispatch);\n    Cmd_exec((ex_3) => {\n        program.onError([\"Error intitializing:\", ex_3]);\n    }, syncDispatch, Cmd_batch(ofArray([(() => {\n        try {\n            return program.subscribe(model);\n        }\n        catch (ex_2) {\n            program.onError([\"Unable to subscribe:\", ex_2]);\n            return Cmd_none();\n        }\n    })(), patternInput[1]])));\n}\n\nexport function ProgramModule_run(program) {\n    ProgramModule_runWith(void 0, program);\n}\n\n","import { Record } from \"../fable-library.3.7.18/Types.js\";\nimport { obj_type, record_type, bool_type, lambda_type, class_type, unit_type } from \"../fable-library.3.7.18/Reflection.js\";\nimport { Component } from \"react\";\nimport * as react from \"react\";\nimport { equalArrays, equals } from \"../fable-library.3.7.18/Util.js\";\n\nexport class LazyProps$1 extends Record {\n    constructor(model, render, equal) {\n        super();\n        this.model = model;\n        this.render = render;\n        this.equal = equal;\n    }\n}\n\nexport function LazyProps$1$reflection(gen0) {\n    return record_type(\"Elmish.React.LazyProps`1\", [gen0], LazyProps$1, () => [[\"model\", gen0], [\"render\", lambda_type(unit_type, class_type(\"Fable.React.ReactElement\"))], [\"equal\", lambda_type(gen0, lambda_type(gen0, bool_type))]]);\n}\n\nexport class Components_LazyView$1 extends Component {\n    constructor(props) {\n        super(props);\n    }\n    shouldComponentUpdate(nextProps, _nextState) {\n        const this$ = this;\n        return !(this$.props).equal((this$.props).model, nextProps.model);\n    }\n    render() {\n        const this$ = this;\n        return (this$.props).render();\n    }\n}\n\nexport function Components_LazyView$1$reflection(gen0) {\n    return class_type(\"Elmish.React.Components.LazyView`1\", [gen0], Components_LazyView$1, class_type(\"Fable.React.Component`2\", [LazyProps$1$reflection(gen0), obj_type], Component));\n}\n\nexport function Components_LazyView$1_$ctor_Z7829D94B(props) {\n    return new Components_LazyView$1(props);\n}\n\nexport function Common_lazyViewWith(equal, view, state) {\n    const props = new LazyProps$1(state, () => view(state), equal);\n    return react.createElement(Components_LazyView$1, props);\n}\n\nexport function Common_lazyView2With(equal, view, state, dispatch) {\n    const props = new LazyProps$1(state, () => view(state, dispatch), equal);\n    return react.createElement(Components_LazyView$1, props);\n}\n\nexport function Common_lazyView3With(equal, view, state1, state2, dispatch) {\n    const props = new LazyProps$1([state1, state2], () => view(state1, state2, dispatch), equal);\n    return react.createElement(Components_LazyView$1, props);\n}\n\nexport function Common_lazyView(view) {\n    return (state) => Common_lazyViewWith(equals, view, state);\n}\n\nexport function Common_lazyView2(view) {\n    return (state) => ((dispatch) => Common_lazyView2With(equals, view, state, dispatch));\n}\n\nexport function Common_lazyView3(view) {\n    return (state) => ((state_1) => ((dispatch) => Common_lazyView3With(equalArrays, view, state, state_1, dispatch)));\n}\n\n","import { some } from \"../fable-library.3.7.18/Option.js\";\nimport { create, isLeapYear } from \"../fable-library.3.7.18/Date.js\";\nimport { parse } from \"../fable-library.3.7.18/Int32.js\";\nimport { split, isNullOrWhiteSpace } from \"../fable-library.3.7.18/String.js\";\nimport { equalsWith } from \"../fable-library.3.7.18/Array.js\";\nimport react from \"react\";\n\nexport function DateParsing_$007CBetween$007C_$007C(x, y, input) {\n    if ((input >= x) && (input <= y)) {\n        return some(void 0);\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function DateParsing_isLeapYear(year) {\n    return isLeapYear(year);\n}\n\nexport function DateParsing_$007CInt$007C_$007C(input) {\n    try {\n        return parse(input, 511, false, 32);\n    }\n    catch (matchValue) {\n        return void 0;\n    }\n}\n\nexport function DateParsing_parse(input) {\n    try {\n        if (isNullOrWhiteSpace(input)) {\n            return void 0;\n        }\n        else {\n            const parts = split(input, [\"-\"], null, 0);\n            let patternInput;\n            let pattern_matching_result, month, year;\n            if ((!equalsWith((x, y) => (x === y), parts, null)) && (parts.length === 2)) {\n                const activePatternResult = DateParsing_$007CInt$007C_$007C(parts[0]);\n                if (activePatternResult != null) {\n                    const activePatternResult_1 = DateParsing_$007CInt$007C_$007C(parts[1]);\n                    if (activePatternResult_1 != null) {\n                        pattern_matching_result = 0;\n                        month = activePatternResult_1;\n                        year = activePatternResult;\n                    }\n                    else {\n                        pattern_matching_result = 1;\n                    }\n                }\n                else {\n                    pattern_matching_result = 1;\n                }\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n            switch (pattern_matching_result) {\n                case 0: {\n                    patternInput = [year, month, 1, 0, 0];\n                    break;\n                }\n                case 1: {\n                    let pattern_matching_result_1, day, month_1, year_1;\n                    if ((!equalsWith((x_1, y_1) => (x_1 === y_1), parts, null)) && (parts.length === 3)) {\n                        const activePatternResult_2 = DateParsing_$007CInt$007C_$007C(parts[0]);\n                        if (activePatternResult_2 != null) {\n                            const activePatternResult_3 = DateParsing_$007CInt$007C_$007C(parts[1]);\n                            if (activePatternResult_3 != null) {\n                                const activePatternResult_4 = DateParsing_$007CInt$007C_$007C(parts[2]);\n                                if (activePatternResult_4 != null) {\n                                    pattern_matching_result_1 = 0;\n                                    day = activePatternResult_4;\n                                    month_1 = activePatternResult_3;\n                                    year_1 = activePatternResult_2;\n                                }\n                                else {\n                                    pattern_matching_result_1 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_1 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_1 = 1;\n                        }\n                    }\n                    else {\n                        pattern_matching_result_1 = 1;\n                    }\n                    switch (pattern_matching_result_1) {\n                        case 0: {\n                            patternInput = [year_1, month_1, day, 0, 0];\n                            break;\n                        }\n                        case 1: {\n                            let pattern_matching_result_2, day_1, month_2, year_2;\n                            if ((!equalsWith((x_2, y_2) => (x_2 === y_2), parts, null)) && (parts.length === 3)) {\n                                const activePatternResult_5 = DateParsing_$007CInt$007C_$007C(parts[0]);\n                                if (activePatternResult_5 != null) {\n                                    const activePatternResult_6 = DateParsing_$007CInt$007C_$007C(parts[1]);\n                                    if (activePatternResult_6 != null) {\n                                        pattern_matching_result_2 = 0;\n                                        day_1 = parts[2];\n                                        month_2 = activePatternResult_6;\n                                        year_2 = activePatternResult_5;\n                                    }\n                                    else {\n                                        pattern_matching_result_2 = 1;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_2 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_2 = 1;\n                            }\n                            switch (pattern_matching_result_2) {\n                                case 0: {\n                                    if (day_1.indexOf(\"T\") >= 0) {\n                                        const matchValue = split(day_1, [\"T\"], null, 0);\n                                        let pattern_matching_result_3, parsedDay, time;\n                                        if ((!equalsWith((x_3, y_3) => (x_3 === y_3), matchValue, null)) && (matchValue.length === 2)) {\n                                            const activePatternResult_7 = DateParsing_$007CInt$007C_$007C(matchValue[0]);\n                                            if (activePatternResult_7 != null) {\n                                                pattern_matching_result_3 = 0;\n                                                parsedDay = activePatternResult_7;\n                                                time = matchValue[1];\n                                            }\n                                            else {\n                                                pattern_matching_result_3 = 1;\n                                            }\n                                        }\n                                        else {\n                                            pattern_matching_result_3 = 1;\n                                        }\n                                        switch (pattern_matching_result_3) {\n                                            case 0: {\n                                                const matchValue_1 = split(time, [\":\"], null, 0);\n                                                let pattern_matching_result_4, hour, minute;\n                                                if ((!equalsWith((x_4, y_4) => (x_4 === y_4), matchValue_1, null)) && (matchValue_1.length === 2)) {\n                                                    const activePatternResult_8 = DateParsing_$007CInt$007C_$007C(matchValue_1[0]);\n                                                    if (activePatternResult_8 != null) {\n                                                        const activePatternResult_9 = DateParsing_$007CInt$007C_$007C(matchValue_1[1]);\n                                                        if (activePatternResult_9 != null) {\n                                                            pattern_matching_result_4 = 0;\n                                                            hour = activePatternResult_8;\n                                                            minute = activePatternResult_9;\n                                                        }\n                                                        else {\n                                                            pattern_matching_result_4 = 1;\n                                                        }\n                                                    }\n                                                    else {\n                                                        pattern_matching_result_4 = 1;\n                                                    }\n                                                }\n                                                else {\n                                                    pattern_matching_result_4 = 1;\n                                                }\n                                                switch (pattern_matching_result_4) {\n                                                    case 0: {\n                                                        const matchValue_2 = [hour, minute];\n                                                        let pattern_matching_result_5;\n                                                        if (DateParsing_$007CBetween$007C_$007C(0, 59, matchValue_2[0]) != null) {\n                                                            if (DateParsing_$007CBetween$007C_$007C(0, 59, matchValue_2[1]) != null) {\n                                                                pattern_matching_result_5 = 0;\n                                                            }\n                                                            else {\n                                                                pattern_matching_result_5 = 1;\n                                                            }\n                                                        }\n                                                        else {\n                                                            pattern_matching_result_5 = 1;\n                                                        }\n                                                        switch (pattern_matching_result_5) {\n                                                            case 0: {\n                                                                patternInput = [year_2, month_2, parsedDay, hour, minute];\n                                                                break;\n                                                            }\n                                                            case 1: {\n                                                                patternInput = [-1, 1, 1, 0, 0];\n                                                                break;\n                                                            }\n                                                        }\n                                                        break;\n                                                    }\n                                                    case 1: {\n                                                        patternInput = [-1, 1, 1, 0, 0];\n                                                        break;\n                                                    }\n                                                }\n                                                break;\n                                            }\n                                            case 1: {\n                                                patternInput = [-1, 1, 1, 0, 0];\n                                                break;\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        patternInput = [-1, 1, 1, 0, 0];\n                                    }\n                                    break;\n                                }\n                                case 1: {\n                                    patternInput = [-1, 1, 1, 0, 0];\n                                    break;\n                                }\n                            }\n                            break;\n                        }\n                    }\n                    break;\n                }\n            }\n            const year_3 = patternInput[0] | 0;\n            const month_3 = patternInput[1] | 0;\n            const minute_1 = patternInput[4] | 0;\n            const hour_1 = patternInput[3] | 0;\n            const day_2 = patternInput[2] | 0;\n            if (year_3 <= 0) {\n                return void 0;\n            }\n            else {\n                const matchValue_3 = [month_3, day_2];\n                let pattern_matching_result_6;\n                if (matchValue_3[0] === 2) {\n                    if (DateParsing_$007CBetween$007C_$007C(1, 29, matchValue_3[1]) != null) {\n                        if (DateParsing_isLeapYear(year_3)) {\n                            pattern_matching_result_6 = 0;\n                        }\n                        else {\n                            pattern_matching_result_6 = 1;\n                        }\n                    }\n                    else {\n                        pattern_matching_result_6 = 1;\n                    }\n                }\n                else {\n                    pattern_matching_result_6 = 1;\n                }\n                switch (pattern_matching_result_6) {\n                    case 0: {\n                        return create(year_3, month_3, day_2, hour_1, minute_1, 0);\n                    }\n                    case 1: {\n                        let pattern_matching_result_7;\n                        if (matchValue_3[0] === 2) {\n                            if (DateParsing_$007CBetween$007C_$007C(1, 28, matchValue_3[1]) != null) {\n                                if (!DateParsing_isLeapYear(year_3)) {\n                                    pattern_matching_result_7 = 0;\n                                }\n                                else {\n                                    pattern_matching_result_7 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_7 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_7 = 1;\n                        }\n                        switch (pattern_matching_result_7) {\n                            case 0: {\n                                return create(year_3, month_3, day_2, hour_1, minute_1, 0);\n                            }\n                            case 1: {\n                                let pattern_matching_result_8;\n                                if (matchValue_3[0] === 1) {\n                                    if (DateParsing_$007CBetween$007C_$007C(1, 31, matchValue_3[1]) != null) {\n                                        pattern_matching_result_8 = 0;\n                                    }\n                                    else {\n                                        pattern_matching_result_8 = 1;\n                                    }\n                                }\n                                else if (matchValue_3[0] === 3) {\n                                    if (DateParsing_$007CBetween$007C_$007C(1, 31, matchValue_3[1]) != null) {\n                                        pattern_matching_result_8 = 0;\n                                    }\n                                    else {\n                                        pattern_matching_result_8 = 1;\n                                    }\n                                }\n                                else if (matchValue_3[0] === 5) {\n                                    if (DateParsing_$007CBetween$007C_$007C(1, 31, matchValue_3[1]) != null) {\n                                        pattern_matching_result_8 = 0;\n                                    }\n                                    else {\n                                        pattern_matching_result_8 = 1;\n                                    }\n                                }\n                                else if (matchValue_3[0] === 7) {\n                                    if (DateParsing_$007CBetween$007C_$007C(1, 31, matchValue_3[1]) != null) {\n                                        pattern_matching_result_8 = 0;\n                                    }\n                                    else {\n                                        pattern_matching_result_8 = 1;\n                                    }\n                                }\n                                else if (matchValue_3[0] === 8) {\n                                    if (DateParsing_$007CBetween$007C_$007C(1, 31, matchValue_3[1]) != null) {\n                                        pattern_matching_result_8 = 0;\n                                    }\n                                    else {\n                                        pattern_matching_result_8 = 1;\n                                    }\n                                }\n                                else if (matchValue_3[0] === 10) {\n                                    if (DateParsing_$007CBetween$007C_$007C(1, 31, matchValue_3[1]) != null) {\n                                        pattern_matching_result_8 = 0;\n                                    }\n                                    else {\n                                        pattern_matching_result_8 = 1;\n                                    }\n                                }\n                                else if (matchValue_3[0] === 12) {\n                                    if (DateParsing_$007CBetween$007C_$007C(1, 31, matchValue_3[1]) != null) {\n                                        pattern_matching_result_8 = 0;\n                                    }\n                                    else {\n                                        pattern_matching_result_8 = 1;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_8 = 1;\n                                }\n                                switch (pattern_matching_result_8) {\n                                    case 0: {\n                                        return create(year_3, month_3, day_2, hour_1, minute_1, 0);\n                                    }\n                                    case 1: {\n                                        let pattern_matching_result_9;\n                                        if (matchValue_3[0] === 4) {\n                                            if (DateParsing_$007CBetween$007C_$007C(1, 30, matchValue_3[1]) != null) {\n                                                pattern_matching_result_9 = 0;\n                                            }\n                                            else {\n                                                pattern_matching_result_9 = 1;\n                                            }\n                                        }\n                                        else if (matchValue_3[0] === 6) {\n                                            if (DateParsing_$007CBetween$007C_$007C(1, 30, matchValue_3[1]) != null) {\n                                                pattern_matching_result_9 = 0;\n                                            }\n                                            else {\n                                                pattern_matching_result_9 = 1;\n                                            }\n                                        }\n                                        else if (matchValue_3[0] === 9) {\n                                            if (DateParsing_$007CBetween$007C_$007C(1, 30, matchValue_3[1]) != null) {\n                                                pattern_matching_result_9 = 0;\n                                            }\n                                            else {\n                                                pattern_matching_result_9 = 1;\n                                            }\n                                        }\n                                        else if (matchValue_3[0] === 11) {\n                                            if (DateParsing_$007CBetween$007C_$007C(1, 30, matchValue_3[1]) != null) {\n                                                pattern_matching_result_9 = 0;\n                                            }\n                                            else {\n                                                pattern_matching_result_9 = 1;\n                                            }\n                                        }\n                                        else {\n                                            pattern_matching_result_9 = 1;\n                                        }\n                                        switch (pattern_matching_result_9) {\n                                            case 0: {\n                                                return create(year_3, month_3, day_2, hour_1, minute_1, 0);\n                                            }\n                                            case 1: {\n                                                return void 0;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    catch (matchValue_4) {\n        return void 0;\n    }\n}\n\nexport const Interop_reactApi = react;\n\n","import { useLayoutEffectWithDeps, useLayoutEffect, useEffectWithDeps, useEffect, useDebugValue } from \"./ReactInterop.js\";\nimport { class_type } from \"../fable-library.3.7.18/Reflection.js\";\nimport { iterate } from \"../fable-library.3.7.18/Seq.js\";\nimport { defaultArg, some, toArray } from \"../fable-library.3.7.18/Option.js\";\nimport { Interop_reactApi } from \"./Interop.fs.js\";\nimport { disposeSafe, curry, uncurry } from \"../fable-library.3.7.18/Util.js\";\nimport { useState } from \"react\";\nimport * as react from \"react\";\n\nexport const ReactInterop_useDebugValueWithFormatter = useDebugValue;\n\nexport const ReactInterop_useEffect = useEffect;\n\nexport const ReactInterop_useEffectWithDeps = useEffectWithDeps;\n\nexport const ReactInterop_useLayoutEffect = useLayoutEffect;\n\nexport const ReactInterop_useLayoutEffectWithDeps = useLayoutEffectWithDeps;\n\nexport class Internal {\n    constructor() {\n    }\n}\n\nexport function Internal$reflection() {\n    return class_type(\"Feliz.Internal\", void 0, Internal);\n}\n\nexport function Internal_$ctor() {\n    return new Internal();\n}\n\n\nexport function Internal_functionComponent_Z1B155329(renderElement, name, withKey) {\n    iterate((name_1) => {\n        renderElement.displayName = name_1;\n    }, toArray(name));\n    console.warn(some(\"Feliz: using React.functionComponent in Fable 3 is obsolete, please consider using the [\\u003cReactComponent\\u003e] attribute instead which makes Feliz output better Javascript code that is compatible with react-refresh\"));\n    return (props) => {\n        const props_2 = Internal_propsWithKey(withKey, props);\n        return Interop_reactApi.createElement(renderElement, props_2);\n    };\n}\n\nexport function Internal_memo_Z603636D8(renderElement, name, areEqual, withKey) {\n    const memoElementType = Interop_reactApi.memo(renderElement, uncurry(2, defaultArg(curry(2, areEqual), null)));\n    iterate((name_1) => {\n        renderElement.displayName = name_1;\n    }, toArray(name));\n    return (props) => {\n        const props_2 = Internal_propsWithKey(withKey, props);\n        return Interop_reactApi.createElement(memoElementType, props_2);\n    };\n}\n\nfunction Internal_propsWithKey(withKey, props) {\n    if (withKey == null) {\n        return props;\n    }\n    else {\n        const f = withKey;\n        props.key = f(props);\n        return props;\n    }\n}\n\nexport class React {\n    constructor() {\n    }\n}\n\nexport function React$reflection() {\n    return class_type(\"Feliz.React\", void 0, React);\n}\n\nexport function React_createDisposable_3A5B6456(dispose) {\n    return {\n        Dispose() {\n            dispose();\n        },\n    };\n}\n\nexport function useReact_useState_FCFD9EF(initializer) {\n    return Interop_reactApi.useState(initializer);\n}\n\nexport function useReact_useReducer_2B9E6EA0(update, initialState) {\n    const arg = update;\n    return Interop_reactApi.useReducer(arg, initialState);\n}\n\nexport function useReact_useEffect_Z5ECA432F(effect) {\n    ReactInterop_useEffect(effect);\n}\n\nexport function useReact_useEffect_Z5234A374(effect, dependencies) {\n    ReactInterop_useEffectWithDeps(effect, dependencies);\n}\n\nexport function useReact_useLayoutEffect_Z5ECA432F(effect) {\n    ReactInterop_useLayoutEffect(effect);\n}\n\nexport function useReact_useLayoutEffect_Z5234A374(effect, dependencies) {\n    ReactInterop_useLayoutEffectWithDeps(effect, dependencies);\n}\n\nexport function useReact_useLayoutEffect_3A5B6456(effect) {\n    ReactInterop_useLayoutEffect((_arg) => {\n        effect();\n        return React_createDisposable_3A5B6456(() => {\n        });\n    });\n}\n\nexport function useReact_useLayoutEffect_Z101E1A95(effect, dependencies) {\n    ReactInterop_useLayoutEffectWithDeps((_arg) => {\n        effect();\n        return React_createDisposable_3A5B6456(() => {\n        });\n    }, dependencies);\n}\n\nexport function useReact_useEffectOnce_3A5B6456(effect) {\n    useReact_useEffect_Z101E1A95(effect, []);\n}\n\nexport function useReact_useEffectOnce_Z5ECA432F(effect) {\n    useReact_useEffect_Z5234A374(effect, []);\n}\n\nexport function useReact_useEffectOnce_6E825304(effect) {\n    useReact_useEffect_Z5234A374(() => {\n        const disposeOption = effect();\n        return {\n            Dispose() {\n                iterate((d) => {\n                    let copyOfStruct = d;\n                    disposeSafe(copyOfStruct);\n                }, toArray(disposeOption));\n            },\n        };\n    }, []);\n}\n\nexport function useReact_useEffect_3A5B6456(effect) {\n    ReactInterop_useEffect((_arg) => {\n        effect();\n        return React_createDisposable_3A5B6456(() => {\n        });\n    });\n}\n\nexport function useReact_useEffect_Z101E1A95(effect, dependencies) {\n    ReactInterop_useEffectWithDeps((_arg) => {\n        effect();\n        return React_createDisposable_3A5B6456(() => {\n        });\n    }, dependencies);\n}\n\nexport function useReact_useDebugValue_Z721C83C5(value) {\n    ReactInterop_useDebugValueWithFormatter(value, (x) => x);\n}\n\nexport function useReact_useDebugValue_77A55D6D(value, formatter) {\n    ReactInterop_useDebugValueWithFormatter(value, formatter);\n}\n\nexport function useReact_useCallback_93353E(callbackFunction, dependencies) {\n    const arg_1 = defaultArg(dependencies, []);\n    return Interop_reactApi.useCallback(callbackFunction, arg_1);\n}\n\nexport function useReact_useRef_1505(initialValue) {\n    return Interop_reactApi.useRef(initialValue);\n}\n\nexport function useReact_useInputRef() {\n    return useReact_useRef_1505(void 0);\n}\n\nexport function useReact_useButtonRef() {\n    return useReact_useRef_1505(void 0);\n}\n\nexport function useReact_useElementRef() {\n    return useReact_useRef_1505(void 0);\n}\n\nexport function useReact_useMemo_CF4EA67(createFunction, dependencies) {\n    const arg_1 = defaultArg(dependencies, []);\n    return Interop_reactApi.useMemo(createFunction, arg_1);\n}\n\nexport function React_functionComponent_2F9D7239(render, withKey) {\n    return Internal_functionComponent_Z1B155329(render, void 0, withKey);\n}\n\nexport function React_functionComponent_Z4C5FE1BE(name, render, withKey) {\n    return Internal_functionComponent_Z1B155329(render, name, withKey);\n}\n\nexport function React_functionComponent_19A12FB2(render, withKey) {\n    return Internal_functionComponent_Z1B155329((arg_1) => {\n        const arg = render(arg_1);\n        return react.createElement(react.Fragment, {}, ...arg);\n    }, void 0, withKey);\n}\n\nexport function React_functionComponent_2E1DD889(name, render, withKey) {\n    return Internal_functionComponent_Z1B155329((arg_1) => {\n        const arg = render(arg_1);\n        return react.createElement(react.Fragment, {}, ...arg);\n    }, name, withKey);\n}\n\nexport function React_memo_62A0F746(render, withKey, areEqual) {\n    return Internal_memo_Z603636D8(render, void 0, areEqual, withKey);\n}\n\nexport function React_memo_6648A89D(name, render, withKey, areEqual) {\n    return Internal_memo_Z603636D8(render, name, areEqual, withKey);\n}\n\nexport function React_memo_C2C6BED(render, withKey, areEqual) {\n    return Internal_memo_Z603636D8((arg_1) => {\n        const arg = render(arg_1);\n        return react.createElement(react.Fragment, {}, ...arg);\n    }, void 0, areEqual, withKey);\n}\n\nexport function React_memo_Z4FCC584A(name, render, withKey, areEqual) {\n    return Internal_memo_Z603636D8((arg_1) => {\n        const arg = render(arg_1);\n        return react.createElement(react.Fragment, {}, ...arg);\n    }, name, areEqual, withKey);\n}\n\nexport function React_createContext_1AE444D8(name, defaultValue) {\n    const contextObject = Interop_reactApi.createContext(defaultArg(defaultValue, void 0));\n    iterate((name_1) => {\n        contextObject.displayName = name_1;\n    }, toArray(name));\n    return contextObject;\n}\n\nexport function React_contextProvider_34D9BBBD(contextObject, contextValue, child) {\n    return Interop_reactApi.createElement(contextObject.Provider, {\n        value: contextValue,\n    }, child);\n}\n\nexport function React_contextProvider_138D2F56(contextObject, contextValue, children) {\n    return Interop_reactApi.createElement(contextObject.Provider, {\n        value: contextValue,\n    }, ...children);\n}\n\nexport function React_contextConsumer_Z68910595(contextObject, render) {\n    return Interop_reactApi.createElement(contextObject.Consumer, null, render);\n}\n\nexport function React_contextConsumer_56D53A40(contextObject, render) {\n    return Interop_reactApi.createElement(contextObject.Consumer, null, (arg_1) => {\n        const arg = render(arg_1);\n        return react.createElement(react.Fragment, {}, ...arg);\n    });\n}\n\nexport function useReact_useContext_37FA55CF(contextObject) {\n    return Interop_reactApi.useContext(contextObject);\n}\n\nexport function useReact_useCallbackRef_7C4B0DD6(callback) {\n    const lastRenderCallbackRef = useReact_useRef_1505(callback);\n    const callbackRef = useReact_useCallback_93353E((arg) => lastRenderCallbackRef.current(arg), []);\n    useReact_useLayoutEffect_3A5B6456(() => {\n        lastRenderCallbackRef.current = callback;\n    });\n    return callbackRef;\n}\n\nexport const React_useStateWithUpdater_1505 = useState;\n\nexport function React_forwardRef_3790D881(render) {\n    const forwardRefType = Interop_reactApi.forwardRef((props, ref) => render([props, ref]));\n    return (tupledArg) => {\n        const propsObj = Object.assign({}, tupledArg[0]);\n        propsObj.ref = tupledArg[1];\n        return Interop_reactApi.createElement(forwardRefType, propsObj);\n    };\n}\n\nexport function React_forwardRef_7DC3DB1A(name, render) {\n    const forwardRefType = Interop_reactApi.forwardRef((props, ref) => render([props, ref]));\n    render.displayName = name;\n    return (tupledArg) => {\n        const propsObj = Object.assign({}, tupledArg[0]);\n        propsObj.ref = tupledArg[1];\n        return Interop_reactApi.createElement(forwardRefType, propsObj);\n    };\n}\n\nexport function React_strictMode_6E3A73D(children) {\n    return Interop_reactApi.createElement(Interop_reactApi.StrictMode, void 0, ...children);\n}\n\nexport function React_lazy$0027_4712D3AE(dynamicImport, props) {\n    return Interop_reactApi.createElement(Interop_reactApi.lazy(() => dynamicImport), props);\n}\n\nexport function React_lazy$0027_Z3D8450FC(dynamicImport, props) {\n    return Interop_reactApi.createElement(Interop_reactApi.lazy(dynamicImport), props);\n}\n\nexport function React_suspense_6E3A73D(children) {\n    let o;\n    return Interop_reactApi.createElement(Interop_reactApi.Suspense, (o = {\n        fallback: null,\n    }, Object.assign({}, o)), ...children);\n}\n\nexport function React_suspense_Z3796A576(children, fallback) {\n    let o;\n    return Interop_reactApi.createElement(Interop_reactApi.Suspense, (o = {\n        fallback: fallback,\n    }, Object.assign({}, o)), ...children);\n}\n\nexport function useReact_useImperativeHandle_596DDC25(ref, createHandle) {\n    Interop_reactApi.useImperativeHandle(ref, createHandle);\n}\n\nexport function useReact_useImperativeHandle_Z12F09548(ref, createHandle, dependencies) {\n    Interop_reactApi.useImperativeHandle(ref, createHandle, dependencies);\n}\n\nexport function useFeliz_React__React_useState_Static_1505(initial) {\n    return Interop_reactApi.useState(initial);\n}\n\nexport const Feliz_React__React_useStateWithUpdater_Static_FCFD9EF = useState;\n\n","import {\n    useEffect as useEffectReact,\n    useLayoutEffect as useLayoutEffectReact,\n    useDebugValue as useDebugValueReact } from 'react'\n\nexport const useEffect = getDisposable => {\n    useEffectReact(() => {\n        const disposable = getDisposable()\n        return () => {\n            disposable.Dispose();\n        }\n    })\n}\n\nexport const useEffectWithDeps = (getDisposable, deps) => {\n    useEffectReact(() => {\n        const disposable = getDisposable()\n        return () => {\n            disposable.Dispose();\n        }\n    }, deps)\n}\n\nexport const useLayoutEffect = getDisposable => {\n    useLayoutEffectReact(() => {\n        const disposable = getDisposable()\n        return () => {\n            disposable.Dispose();\n        }\n    })\n}\n\nexport const useLayoutEffectWithDeps = (getDisposable, deps) => {\n    useLayoutEffectReact(() => {\n        const disposable = getDisposable()\n        return () => {\n            disposable.Dispose();\n        }\n    }, deps)\n}\n\nexport const useDebugValue = (value, formatter) => useDebugValueReact(value, formatter)","import { bind, map } from \"../fable-library.3.7.18/Option.js\";\n\nexport const Impl_allowsPassiveEvents = (() => {\n    let passive = false;\n    try {\n        if ((typeof window !== 'undefined') && (typeof window.addEventListener === 'function')) {\n            const options = {\n                passive: true,\n            };\n            window.addEventListener(\"testPassiveEventSupport\", (value) => {\n            }, options);\n            window.removeEventListener(\"testPassiveEventSupport\", (value_1) => {\n            });\n        }\n    }\n    catch (matchValue) {\n    }\n    return passive;\n})();\n\nexport const Impl_defaultPassive = {\n    passive: true,\n};\n\nexport function Impl_adjustPassive(maybeOptions) {\n    return map((options) => {\n        if (options.passive && (!Impl_allowsPassiveEvents)) {\n            return {\n                capture: options.capture,\n                once: options.once,\n                passive: false,\n            };\n        }\n        else {\n            return options;\n        }\n    }, maybeOptions);\n}\n\nexport function Impl_createRemoveOptions(maybeOptions) {\n    return bind((options) => {\n        if (options.capture) {\n            return {\n                capture: true,\n            };\n        }\n        else {\n            return void 0;\n        }\n    }, maybeOptions);\n}\n\n","import { split, trimEnd, isNullOrWhiteSpace, substring, join, endsWith } from \"../fable-library.3.7.18/String.js\";\nimport { ofArray, singleton, collect, head, empty, tail, isEmpty, reverse, map } from \"../fable-library.3.7.18/List.js\";\nimport { equalsWith } from \"../fable-library.3.7.18/Array.js\";\nimport { useReact_useCallbackRef_7C4B0DD6, React_memo_62A0F746 } from \"../Feliz.1.68.0/React.fs.js\";\nimport { defaultArg } from \"../fable-library.3.7.18/Option.js\";\nimport { React_createDisposable_3A5B6456, useReact_useCallbackRef_7C4B0DD6 as useReact_useCallbackRef_7C4B0DD6_1, useReact_useEffect_Z5ECA432F, useReact_useMemo_CF4EA67 } from \"../Feliz.1.68.0/React.fs.js\";\nimport { Impl_createRemoveOptions, Impl_adjustPassive } from \"../Feliz.UseListener.0.6.3/Listener.fs.js\";\nimport { tryParse } from \"../fable-library.3.7.18/Int32.js\";\nimport { FSharpRef } from \"../fable-library.3.7.18/Types.js\";\nimport { tryParse as tryParse_1, fromInt } from \"../fable-library.3.7.18/Long.js\";\nimport { tryParse as tryParse_2 } from \"../fable-library.3.7.18/Guid.js\";\nimport { tryParse as tryParse_3 } from \"../fable-library.3.7.18/Double.js\";\nimport { tryParse as tryParse_4 } from \"../fable-library.3.7.18/Decimal.js\";\nimport Decimal from \"../fable-library.3.7.18/Decimal.js\";\nimport { map as map_1, delay, toList } from \"../fable-library.3.7.18/Seq.js\";\n\nexport function RouterModule_String_$007CPrefix$007C(prefix, str) {\n    if (str.indexOf(prefix) === 0) {\n        return str;\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function RouterModule_String_$007CSuffix$007C(suffix, str) {\n    if (endsWith(str, suffix)) {\n        return str;\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function RouterModule_encodeQueryString(queryStringPairs) {\n    const _arg = join(\"\\u0026\", map((tupledArg) => join(\"=\", [encodeURIComponent(tupledArg[0]), encodeURIComponent(tupledArg[1])]), queryStringPairs));\n    if (_arg === \"\") {\n        return \"\";\n    }\n    else {\n        return \"?\" + _arg;\n    }\n}\n\nexport function RouterModule_encodeQueryStringInts(queryStringIntPairs) {\n    const _arg = join(\"\\u0026\", map((tupledArg) => join(\"=\", [encodeURIComponent(tupledArg[0]), tupledArg[1]]), queryStringIntPairs));\n    if (_arg === \"\") {\n        return \"\";\n    }\n    else {\n        return \"?\" + _arg;\n    }\n}\n\nfunction RouterModule_normalizeRoute(routeMode) {\n    if (routeMode === 1) {\n        return (_arg) => {\n            let activePatternResult, path, activePatternResult_1, path_1, activePatternResult_2, path_2;\n            return (activePatternResult = RouterModule_String_$007CPrefix$007C(\"/\", _arg), (activePatternResult != null) ? ((path = activePatternResult, \"#\" + path)) : ((activePatternResult_1 = RouterModule_String_$007CPrefix$007C(\"#/\", _arg), (activePatternResult_1 != null) ? ((path_1 = activePatternResult_1, path_1)) : ((activePatternResult_2 = RouterModule_String_$007CPrefix$007C(\"#\", _arg), (activePatternResult_2 != null) ? ((path_2 = activePatternResult_2, \"#/\" + substring(path_2, 1, path_2.length - 1))) : (\"#/\" + _arg))))));\n        };\n    }\n    else {\n        return (_arg_1) => {\n            let activePatternResult_3, path_4;\n            return (activePatternResult_3 = RouterModule_String_$007CPrefix$007C(\"/\", _arg_1), (activePatternResult_3 != null) ? ((path_4 = activePatternResult_3, path_4)) : (\"/\" + _arg_1));\n        };\n    }\n}\n\nexport function RouterModule_encodeParts(xs, routeMode) {\n    return RouterModule_normalizeRoute(routeMode)(join(\"/\", map((part) => {\n        if (((part.indexOf(\"?\") >= 0) ? true : (part.indexOf(\"#\") === 0)) ? true : (part.indexOf(\"/\") === 0)) {\n            return part;\n        }\n        else {\n            return encodeURIComponent(part);\n        }\n    }, xs)));\n}\n\nexport function RouterModule_trySeparateLast(xs) {\n    const matchValue = reverse(xs);\n    if (!isEmpty(matchValue)) {\n        if (isEmpty(tail(matchValue))) {\n            return [empty(), head(matchValue)];\n        }\n        else {\n            return [reverse(tail(matchValue)), head(matchValue)];\n        }\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function RouterModule_nav(xs, mode, routeMode) {\n    if (mode === 1) {\n        history.pushState(void 0, \"\", RouterModule_encodeParts(xs, routeMode));\n    }\n    else {\n        history.replaceState(void 0, \"\", RouterModule_encodeParts(xs, routeMode));\n    }\n    const ev = document.createEvent(\"CustomEvent\");\n    ev.initEvent(\"CUSTOM_NAVIGATION_EVENT\", true, true);\n    window.dispatchEvent(ev);\n}\n\nexport function RouterModule_urlSegments(path, mode) {\n    return collect((segment) => {\n        if (isNullOrWhiteSpace(segment)) {\n            return empty();\n        }\n        else {\n            const segment_1 = trimEnd(segment, \"#\");\n            if (segment_1 === \"?\") {\n                return empty();\n            }\n            else if (RouterModule_String_$007CPrefix$007C(\"?\", segment_1) != null) {\n                return singleton(segment_1);\n            }\n            else {\n                const matchValue = segment_1.split(\"?\");\n                if ((!equalsWith((x, y) => (x === y), matchValue, null)) && (matchValue.length === 1)) {\n                    const value = matchValue[0];\n                    return singleton(decodeURIComponent(value));\n                }\n                else if ((!equalsWith((x_1, y_1) => (x_1 === y_1), matchValue, null)) && (matchValue.length === 2)) {\n                    if (matchValue[1] === \"\") {\n                        const value_1 = matchValue[0];\n                        return singleton(decodeURIComponent(value_1));\n                    }\n                    else {\n                        const value_2 = matchValue[0];\n                        const query = matchValue[1];\n                        return ofArray([decodeURIComponent(value_2), \"?\" + query]);\n                    }\n                }\n                else {\n                    return empty();\n                }\n            }\n        }\n    }, ofArray(split((RouterModule_String_$007CPrefix$007C(\"#\", path) != null) ? substring(path, 1, path.length - 1) : ((mode === 1) ? ((RouterModule_String_$007CSuffix$007C(\"#\", path) != null) ? \"\" : ((RouterModule_String_$007CSuffix$007C(\"#/\", path) != null) ? \"\" : path)) : path), [\"/\"], null, 0)));\n}\n\nexport function RouterModule_onUrlChange(routeMode, urlChanged, ev) {\n    return urlChanged(RouterModule_urlSegments((routeMode === 2) ? (window.location.pathname + window.location.search) : window.location.hash, routeMode));\n}\n\nexport const RouterModule_router = React_memo_62A0F746((input) => {\n    const onChange = useReact_useCallbackRef_7C4B0DD6((ev) => {\n        const urlChanged = defaultArg(input.onUrlChanged, (value) => {\n        });\n        RouterModule_onUrlChange(defaultArg(input.hashMode, 1), urlChanged, ev);\n    });\n    if (((window.navigator.userAgent).indexOf(\"Trident\") >= 0) ? true : ((window.navigator.userAgent).indexOf(\"MSIE\") >= 0)) {\n        const eventType = \"hashchange\";\n        const action_1 = (arg) => {\n            onChange(arg);\n        };\n        const options_1 = void 0;\n        const addOptions = useReact_useMemo_CF4EA67(() => Impl_adjustPassive(options_1), [options_1]);\n        const removeOptions = useReact_useMemo_CF4EA67(() => Impl_createRemoveOptions(options_1), [options_1]);\n        const fn = useReact_useMemo_CF4EA67(() => ((arg_1) => {\n            action_1(arg_1);\n        }), [action_1]);\n        useReact_useEffect_Z5ECA432F(useReact_useCallbackRef_7C4B0DD6_1(() => {\n            if (addOptions == null) {\n                window.addEventListener(eventType, fn);\n            }\n            else {\n                const options_1_1 = addOptions;\n                window.addEventListener(eventType, fn, options_1_1);\n            }\n            return React_createDisposable_3A5B6456(() => {\n                if (removeOptions == null) {\n                    window.removeEventListener(eventType, fn);\n                }\n                else {\n                    const options_2 = removeOptions;\n                    window.removeEventListener(eventType, fn, options_2);\n                }\n            });\n        }));\n    }\n    else {\n        const eventType_1 = \"popstate\";\n        const action_3 = onChange;\n        const options_4 = void 0;\n        const addOptions_1 = useReact_useMemo_CF4EA67(() => Impl_adjustPassive(options_4), [options_4]);\n        const removeOptions_1 = useReact_useMemo_CF4EA67(() => Impl_createRemoveOptions(options_4), [options_4]);\n        const fn_1 = useReact_useMemo_CF4EA67(() => ((arg_2) => {\n            action_3(arg_2);\n        }), [action_3]);\n        useReact_useEffect_Z5ECA432F(useReact_useCallbackRef_7C4B0DD6_1(() => {\n            if (addOptions_1 == null) {\n                window.addEventListener(eventType_1, fn_1);\n            }\n            else {\n                const options_1_2 = addOptions_1;\n                window.addEventListener(eventType_1, fn_1, options_1_2);\n            }\n            return React_createDisposable_3A5B6456(() => {\n                if (removeOptions_1 == null) {\n                    window.removeEventListener(eventType_1, fn_1);\n                }\n                else {\n                    const options_2_1 = removeOptions_1;\n                    window.removeEventListener(eventType_1, fn_1, options_2_1);\n                }\n            });\n        }));\n    }\n    const eventType_2 = \"CUSTOM_NAVIGATION_EVENT\";\n    const action_4 = onChange;\n    const options_5 = void 0;\n    const addOptions_2 = useReact_useMemo_CF4EA67(() => Impl_adjustPassive(options_5), [options_5]);\n    const removeOptions_2 = useReact_useMemo_CF4EA67(() => Impl_createRemoveOptions(options_5), [options_5]);\n    const fn_2 = useReact_useMemo_CF4EA67(() => ((arg_3) => {\n        action_4(arg_3);\n    }), [action_4]);\n    useReact_useEffect_Z5ECA432F(useReact_useCallbackRef_7C4B0DD6_1(() => {\n        if (addOptions_2 == null) {\n            window.addEventListener(eventType_2, fn_2);\n        }\n        else {\n            const options_1_3 = addOptions_2;\n            window.addEventListener(eventType_2, fn_2, options_1_3);\n        }\n        return React_createDisposable_3A5B6456(() => {\n            if (removeOptions_2 == null) {\n                window.removeEventListener(eventType_2, fn_2);\n            }\n            else {\n                const options_2_2 = removeOptions_2;\n                window.removeEventListener(eventType_2, fn_2, options_2_2);\n            }\n        });\n    }));\n    const matchValue = input.application;\n    return (matchValue == null) ? null : matchValue;\n});\n\nexport function Route_$007CInt$007C_$007C(input) {\n    let matchValue;\n    let outArg = 0;\n    matchValue = [tryParse(input, 511, false, 32, new FSharpRef(() => outArg, (v) => {\n        outArg = (v | 0);\n    })), outArg];\n    if (matchValue[0]) {\n        return matchValue[1];\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function Route_$007CInt64$007C_$007C(input) {\n    let matchValue;\n    let outArg = fromInt(0);\n    matchValue = [tryParse_1(input, 511, false, 64, new FSharpRef(() => outArg, (v) => {\n        outArg = v;\n    })), outArg];\n    if (matchValue[0]) {\n        return matchValue[1];\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function Route_$007CGuid$007C_$007C(input) {\n    let matchValue;\n    let outArg = \"00000000-0000-0000-0000-000000000000\";\n    matchValue = [tryParse_2(input, new FSharpRef(() => outArg, (v) => {\n        outArg = v;\n    })), outArg];\n    if (matchValue[0]) {\n        return matchValue[1];\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function Route_$007CNumber$007C_$007C(input) {\n    let matchValue;\n    let outArg = 0;\n    matchValue = [tryParse_3(input, new FSharpRef(() => outArg, (v) => {\n        outArg = v;\n    })), outArg];\n    if (matchValue[0]) {\n        return matchValue[1];\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function Route_$007CDecimal$007C_$007C(input) {\n    let matchValue;\n    let outArg = new Decimal(0);\n    matchValue = [tryParse_4(input, new FSharpRef(() => outArg, (v) => {\n        outArg = v;\n    })), outArg];\n    if (matchValue[0]) {\n        return matchValue[1];\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function Route_$007CBool$007C_$007C(input) {\n    const matchValue = input.toLocaleLowerCase();\n    switch (matchValue) {\n        case \"1\":\n        case \"true\": {\n            return true;\n        }\n        case \"0\":\n        case \"false\": {\n            return false;\n        }\n        case \"\": {\n            return true;\n        }\n        default: {\n            return void 0;\n        }\n    }\n}\n\nexport function Route_$007CQuery$007C_$007C(input) {\n    try {\n        const urlParams = new URLSearchParams(input);\n        return toList(delay(() => map_1((entry) => [entry[0], entry[1]], urlParams.entries())));\n    }\n    catch (matchValue) {\n        return void 0;\n    }\n}\n\n","import { Union } from \"./fable_modules/fable-library.3.7.18/Types.js\";\nimport { union_type } from \"./fable_modules/fable-library.3.7.18/Reflection.js\";\nimport { append, singleton, empty, tail, head, isEmpty } from \"./fable_modules/fable-library.3.7.18/List.js\";\nimport { RouterModule_trySeparateLast, RouterModule_encodeQueryString, RouterModule_nav } from \"./fable_modules/Feliz.Router.3.8.0/Router.fs.js\";\nimport { map, defaultArgWith } from \"./fable_modules/fable-library.3.7.18/Option.js\";\nimport { Cmd_ofSub } from \"./fable_modules/Fable.Elmish.3.1.0/cmd.fs.js\";\n\nexport class Page extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Install\", \"Use\", \"BorderRadius\"];\n    }\n}\n\nexport function Page$reflection() {\n    return union_type(\"Docs.Router.Page\", [], Page, () => [[], [], []]);\n}\n\nexport const PageModule_defaultPage = new Page(0);\n\nexport function PageModule_parseFromUrlSegments(_arg) {\n    let pattern_matching_result;\n    if (isEmpty(_arg)) {\n        pattern_matching_result = 2;\n    }\n    else if (head(_arg) === \"use\") {\n        if (isEmpty(tail(_arg))) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 3;\n        }\n    }\n    else if (head(_arg) === \"borderradius\") {\n        if (isEmpty(tail(_arg))) {\n            pattern_matching_result = 1;\n        }\n        else {\n            pattern_matching_result = 3;\n        }\n    }\n    else {\n        pattern_matching_result = 3;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return new Page(1);\n        }\n        case 1: {\n            return new Page(2);\n        }\n        case 2: {\n            return new Page(0);\n        }\n        case 3: {\n            return PageModule_defaultPage;\n        }\n    }\n}\n\nexport function PageModule_noQueryString(segments) {\n    return [segments, empty()];\n}\n\nexport function PageModule_toUrlSegments(_arg) {\n    switch (_arg.tag) {\n        case 1: {\n            return PageModule_noQueryString(singleton(\"use\"));\n        }\n        case 2: {\n            return PageModule_noQueryString(singleton(\"borderradius\"));\n        }\n        default: {\n            return PageModule_noQueryString(empty());\n        }\n    }\n}\n\nexport function Router_goToUrl(e) {\n    e.preventDefault();\n    RouterModule_nav(singleton(e.currentTarget.attributes.href.value), 1, 1);\n}\n\nexport function Router_navigatePage(p) {\n    const tupledArg = PageModule_toUrlSegments(p);\n    const queryString = tupledArg[1];\n    defaultArgWith(map((tupledArg_1) => {\n        RouterModule_nav(append(tupledArg_1[0], singleton(tupledArg_1[1] + RouterModule_encodeQueryString(queryString))), 1, 1);\n    }, RouterModule_trySeparateLast(tupledArg[0])), () => {\n        RouterModule_nav(singleton(RouterModule_encodeQueryString(queryString)), 1, 1);\n    });\n}\n\nexport function Cmd_navigatePage(p) {\n    const tupledArg = PageModule_toUrlSegments(p);\n    return Cmd_ofSub((_arg_1) => {\n        const queryString_1 = tupledArg[1];\n        defaultArgWith(map((tupledArg_1) => {\n            RouterModule_nav(append(tupledArg_1[0], singleton(tupledArg_1[1] + RouterModule_encodeQueryString(queryString_1))), 1, 1);\n        }, RouterModule_trySeparateLast(tupledArg[0])), () => {\n            RouterModule_nav(singleton(RouterModule_encodeQueryString(queryString_1)), 1, 1);\n        });\n    });\n}\n\n","import { reverse, empty, cons, fold } from \"../fable-library.3.7.18/List.js\";\nimport { uncurry } from \"../fable-library.3.7.18/Util.js\";\nimport { toString } from \"../fable-library.3.7.18/Types.js\";\nimport { join } from \"../fable-library.3.7.18/String.js\";\n\nexport function Helpers_extractClasses(xs) {\n    return fold(uncurry(2, (tupledArg) => {\n        const classes = tupledArg[0];\n        const props = tupledArg[1];\n        return (x) => {\n            const matchValue = x;\n            return (matchValue[0] === \"className\") ? [cons(toString(matchValue[1]), classes), props] : [classes, cons(x, props)];\n        };\n    }), [empty(), empty()], reverse(xs));\n}\n\nexport function Helpers_combineClasses(cn, xs) {\n    const tupledArg = Helpers_extractClasses(xs);\n    return cons([\"className\", join(\" \", cons(cn, tupledArg[0]))], tupledArg[1]);\n}\n\n","import { empty, singleton, append, delay, toList, mapIndexed } from \"./fable_modules/fable-library.3.7.18/Seq.js\";\nimport { createElement } from \"react\";\nimport { int32ToString, createObj } from \"./fable_modules/fable-library.3.7.18/Util.js\";\nimport { Interop_reactApi } from \"./fable_modules/Feliz.1.68.0/Interop.fs.js\";\nimport { printf, toText, split } from \"./fable_modules/fable-library.3.7.18/String.js\";\nimport { ofArray, singleton as singleton_1 } from \"./fable_modules/fable-library.3.7.18/List.js\";\nimport { Helpers_combineClasses } from \"./fable_modules/Feliz.DaisyUI.2.1.0/DaisyUI.fs.js\";\n\nexport function linedMockupCode(code) {\n    const children = mapIndexed((i, l) => createElement(\"pre\", createObj(toList(delay(() => append(singleton([\"data-prefix\", int32ToString(i + 1)]), delay(() => append((l.indexOf(\"// \") >= 0) ? singleton([\"className\", \"text-warning\"]) : empty(), delay(() => {\n        let elems;\n        return singleton((elems = [createElement(\"code\", {\n            children: [l],\n        })], [\"children\", Interop_reactApi.Children.toArray(Array.from(elems))]));\n    })))))))), split(code, [\"\\n\"], null, 0));\n    return createElement(\"div\", {\n        className: \"mockup-code\",\n        children: Interop_reactApi.Children.toArray(Array.from(children)),\n    });\n}\n\nexport function codedView(title, code, example) {\n    let arg_5, arg_7;\n    const arg_1 = ofArray([createElement(\"div\", {\n        className: \"description\",\n        children: Interop_reactApi.Children.toArray([title]),\n    }), (arg_5 = ofArray([(arg_7 = singleton_1(linedMockupCode(code)), createElement(\"div\", {\n        className: \"grid flex-1 h-full\",\n        children: Interop_reactApi.Children.toArray(Array.from(arg_7)),\n    })), createElement(\"div\", createObj(Helpers_combineClasses(\"divider\", ofArray([[\"className\", \"divider-horizontal\"], [\"children\", \"👉\"], [\"className\", \"text-neutral\"], [\"className\", \"after:bg-opacity-30 before:bg-opacity-30\"]])))), createElement(\"div\", {\n        className: \"grid flex-1\",\n        children: Interop_reactApi.Children.toArray([example]),\n    })]), createElement(\"div\", {\n        className: \"flex flex-row w-full\",\n        children: Interop_reactApi.Children.toArray(Array.from(arg_5)),\n    }))]);\n    return createElement(\"div\", {\n        className: \"mb-10\",\n        children: Interop_reactApi.Children.toArray(Array.from(arg_1)),\n    });\n}\n\nexport function codedWithPictureView(title, code, imageScr) {\n    let arg_5, arg_7, arg_10;\n    const arg_1 = ofArray([createElement(\"div\", {\n        className: \"description\",\n        children: Interop_reactApi.Children.toArray([title]),\n    }), (arg_5 = ofArray([(arg_7 = singleton_1(linedMockupCode(code)), createElement(\"div\", {\n        className: \"grid flex-1 h-full\",\n        children: Interop_reactApi.Children.toArray(Array.from(arg_7)),\n    })), createElement(\"div\", createObj(Helpers_combineClasses(\"divider\", ofArray([[\"className\", \"divider-horizontal\"], [\"children\", \"👉\"], [\"className\", \"text-neutral\"], [\"className\", \"after:bg-opacity-30 before:bg-opacity-30\"]])))), (arg_10 = singleton_1(createElement(\"img\", {\n        src: imageScr,\n    })), createElement(\"div\", {\n        className: \"grid flex-1\",\n        children: Interop_reactApi.Children.toArray(Array.from(arg_10)),\n    }))]), createElement(\"div\", {\n        className: \"flex flex-row w-full\",\n        children: Interop_reactApi.Children.toArray(Array.from(arg_5)),\n    }))]);\n    return createElement(\"div\", {\n        className: \"mb-10\",\n        children: Interop_reactApi.Children.toArray(Array.from(arg_1)),\n    });\n}\n\nexport function codedWithTextExampleView(title, code, example) {\n    let arg_5, arg_7, arg_10;\n    const arg_1 = ofArray([createElement(\"div\", {\n        className: \"description\",\n        children: Interop_reactApi.Children.toArray([title]),\n    }), (arg_5 = ofArray([(arg_7 = singleton_1(linedMockupCode(code)), createElement(\"div\", {\n        className: \"grid flex-1 h-full\",\n        children: Interop_reactApi.Children.toArray(Array.from(arg_7)),\n    })), createElement(\"div\", createObj(Helpers_combineClasses(\"divider\", ofArray([[\"className\", \"divider-horizontal\"], [\"children\", \"👉\"], [\"className\", \"text-neutral\"], [\"className\", \"after:bg-opacity-30 before:bg-opacity-30\"]])))), (arg_10 = singleton_1(linedMockupCode(example)), createElement(\"div\", {\n        className: \"grid flex-1 h-full\",\n        children: Interop_reactApi.Children.toArray(Array.from(arg_10)),\n    }))]), createElement(\"div\", {\n        className: \"flex flex-row w-full\",\n        children: Interop_reactApi.Children.toArray(Array.from(arg_5)),\n    }))]);\n    return createElement(\"div\", {\n        className: \"mb-10\",\n        children: Interop_reactApi.Children.toArray(Array.from(arg_1)),\n    });\n}\n\nexport function codedNoExampleView(title, code) {\n    let arg_5, arg_7;\n    const arg_1 = ofArray([createElement(\"div\", {\n        className: \"description\",\n        children: Interop_reactApi.Children.toArray([title]),\n    }), (arg_5 = singleton_1((arg_7 = singleton_1(linedMockupCode(code)), createElement(\"div\", {\n        className: \"grid flex-1 h-full\",\n        children: Interop_reactApi.Children.toArray(Array.from(arg_7)),\n    }))), createElement(\"div\", {\n        className: \"flex flex-row w-full\",\n        children: Interop_reactApi.Children.toArray(Array.from(arg_5)),\n    }))]);\n    return createElement(\"div\", {\n        className: \"mb-10\",\n        children: Interop_reactApi.Children.toArray(Array.from(arg_1)),\n    });\n}\n\nexport function fixDocsView(fileName, client) {\n    const children = singleton_1(createElement(\"a\", {\n        href: toText(printf(\"https://github.com/tforkmann/Feliz.Tailwind/blob/main/src/Docs/views/Feliz.Tailwind/%s.fs\"))(fileName),\n        children: (\"Fix docs file \" + fileName) + \" here\",\n    }));\n    return createElement(\"div\", {\n        children: Interop_reactApi.Children.toArray(Array.from(children)),\n    });\n}\n\n","import { createElement } from \"react\";\nimport * as react from \"react\";\nimport { Interop_reactApi } from \"../fable_modules/Feliz.1.68.0/Interop.fs.js\";\nimport { linedMockupCode } from \"../SharedView.js\";\nimport { ofArray, singleton } from \"../fable_modules/fable-library.3.7.18/List.js\";\n\nexport function UseView() {\n    let arg_3, arg_5;\n    const xs_4 = [createElement(\"div\", {\n        className: \"description\",\n        children: Interop_reactApi.Children.toArray([\"After installation just open proper namespace:\"]),\n    }), (arg_3 = singleton(linedMockupCode(\"open Feliz.Tailwind\")), createElement(\"div\", {\n        className: \"max-w-xl\",\n        children: Interop_reactApi.Children.toArray(Array.from(arg_3)),\n    })), (arg_5 = ofArray([\"Now you can start using library. Everything important starts with \", createElement(\"code\", {\n        className: \"code\",\n        children: \"Tailwind.*\",\n    }), \" module.\"]), createElement(\"div\", {\n        className: \"description\",\n        children: Interop_reactApi.Children.toArray(Array.from(arg_5)),\n    }))];\n    return react.createElement(react.Fragment, {}, ...xs_4);\n}\n\n","import { reverse, empty, cons, fold } from \"../fable-library.3.7.18/List.js\";\nimport { uncurry } from \"../fable-library.3.7.18/Util.js\";\nimport { toString } from \"../fable-library.3.7.18/Types.js\";\nimport { join } from \"../fable-library.3.7.18/String.js\";\n\nexport function Helpers_extractClasses(xs) {\n    return fold(uncurry(2, (tupledArg) => {\n        const classes = tupledArg[0];\n        const props = tupledArg[1];\n        return (x) => {\n            const matchValue = x;\n            return (matchValue[0] === \"className\") ? [cons(toString(matchValue[1]), classes), props] : [classes, cons(x, props)];\n        };\n    }), [empty(), empty()], reverse(xs));\n}\n\nexport function Helpers_combineClasses(cn, xs) {\n    const tupledArg = Helpers_extractClasses(xs);\n    return cons([\"className\", join(\" \", cons(cn, tupledArg[0]))], tupledArg[1]);\n}\n\n","import { codedView } from \"../SharedView.js\";\nimport { createElement } from \"react\";\nimport * as react from \"react\";\nimport { createObj } from \"../fable_modules/fable-library.3.7.18/Util.js\";\nimport { Helpers_combineClasses } from \"../fable_modules/Feliz.DaisyUI.2.1.0/DaisyUI.fs.js\";\nimport { singleton, ofArray } from \"../fable_modules/fable-library.3.7.18/List.js\";\nimport { Interop_reactApi } from \"../fable_modules/Feliz.1.68.0/Interop.fs.js\";\nimport { Helpers_combineClasses as Helpers_combineClasses_1 } from \"../fable_modules/Feliz.Tailwind.2.1.5/Tailwind.fs.js\";\n\nexport const ex1 = codedView(\"Use of borderRadius is rather straightforward.\", \"\\n         Tailwind.divCombine\\n            [ Daisy.button.button\\n                  [ button.outline\\n                    button.primary\\n                    button.lg\\n                    borderRadius.rounded3Xl\\n                    prop.text \\\"This is rounded3XL\\\" ] ]\", (() => {\n    const children = singleton(createElement(\"button\", createObj(Helpers_combineClasses(\"btn\", ofArray([[\"className\", \"btn-outline\"], [\"className\", \"btn-primary\"], [\"className\", \"btn-lg\"], [\"className\", \"rounded-3xl\"], [\"children\", \"This is rounded3XL\"]])))));\n    return createElement(\"div\", {\n        className: \"\",\n        children: Interop_reactApi.Children.toArray(Array.from(children)),\n    });\n})());\n\nexport const ex2 = codedView(null, \"Tailwind.borderRadius [\\n    borderRadius.success\\n    prop.text \\\"Wow it works so great!\\\"\\n]\", (() => {\n    const arg_1 = createElement(\"div\", createObj(Helpers_combineClasses_1(\"border-radius\", ofArray([[\"className\", \"rounded-2xl\"], [\"children\", \"Rounded 2XL\"]]))));\n    return createElement(\"div\", {\n        children: [arg_1],\n    });\n})());\n\nexport const ex3 = codedView(null, \"Tailwind.borderRadius [\\n    alert.error\\n    prop.text \\\"OMG, something went wrong!\\\"\\n]\", (() => {\n    const arg_1 = createElement(\"div\", createObj(Helpers_combineClasses_1(\"border-radius\", ofArray([[\"className\", \"rounded-3xl\"], [\"children\", \"Rounded 3Xl\"]]))));\n    return createElement(\"div\", {\n        children: [arg_1],\n    });\n})());\n\nexport const ex4 = codedView(null, \"Tailwind.borderRadius [\\n    borderRadius.warning\\n    prop.className \\\"justify-start\\\"\\n    prop.children [\\n        Html.i [ prop.className \\\"fas fa-exclamation-triangle mr-2\\\" ]\\n        Html.label [ prop.text \\\"Warning with cool icon\\\" ]\\n    ]\\n]\", (() => {\n    let elems;\n    const arg_1 = createElement(\"div\", createObj(Helpers_combineClasses_1(\"border-radius\", ofArray([[\"className\", \"rounded-none\"], [\"className\", \"Rounded None\"], (elems = [createElement(\"i\", {\n        className: \"fas fa-exclamation-triangle mr-2\",\n    }), createElement(\"label\", {\n        children: \"Warning with cool icon\",\n    })], [\"children\", Interop_reactApi.Children.toArray(Array.from(elems))])]))));\n    return createElement(\"div\", {\n        children: [arg_1],\n    });\n})());\n\nexport function BorderRadiusView() {\n    return react.createElement(react.Fragment, {}, ex1);\n}\n\n","import { createElement } from \"react\";\nimport * as react from \"react\";\nimport { Interop_reactApi } from \"../fable_modules/Feliz.1.68.0/Interop.fs.js\";\nimport { createObj } from \"../fable_modules/fable-library.3.7.18/Util.js\";\nimport { singleton, ofArray } from \"../fable_modules/fable-library.3.7.18/List.js\";\n\nexport function InstallView() {\n    let arg_3, children, elems_2, arg_8, children_2, elems_6;\n    const xs_8 = [createElement(\"div\", {\n        className: \"description\",\n        children: Interop_reactApi.Children.toArray([\"Using NuGet package command\"]),\n    }), (arg_3 = singleton((children = singleton(createElement(\"pre\", createObj(ofArray([[\"data-prefix\", \"$\"], (elems_2 = [createElement(\"code\", {\n        children: [\"Install-Package Feliz.Tailwind\"],\n    })], [\"children\", Interop_reactApi.Children.toArray(Array.from(elems_2))])])))), createElement(\"div\", {\n        className: \"mockup-code\",\n        children: Interop_reactApi.Children.toArray(Array.from(children)),\n    }))), createElement(\"div\", {\n        className: \"max-w-xl\",\n        children: Interop_reactApi.Children.toArray(Array.from(arg_3)),\n    })), createElement(\"div\", {\n        className: \"description\",\n        children: Interop_reactApi.Children.toArray([\"or Paket\"]),\n    }), (arg_8 = singleton((children_2 = singleton(createElement(\"pre\", createObj(ofArray([[\"data-prefix\", \"$\"], (elems_6 = [createElement(\"code\", {\n        children: [\"paket add Feliz.Tailwind\"],\n    })], [\"children\", Interop_reactApi.Children.toArray(Array.from(elems_6))])])))), createElement(\"div\", {\n        className: \"mockup-code\",\n        children: Interop_reactApi.Children.toArray(Array.from(children_2)),\n    }))), createElement(\"div\", {\n        className: \"max-w-xl\",\n        children: Interop_reactApi.Children.toArray(Array.from(arg_8)),\n    }))];\n    return react.createElement(react.Fragment, {}, ...xs_8);\n}\n\n","import { Record, Union } from \"./fable_modules/fable-library.3.7.18/Types.js\";\nimport { Page, Router_goToUrl, PageModule_toUrlSegments, Cmd_navigatePage, PageModule_parseFromUrlSegments, Page$reflection } from \"./Router.js\";\nimport { record_type, union_type, string_type } from \"./fable_modules/fable-library.3.7.18/Reflection.js\";\nimport { RouterModule_router, RouterModule_trySeparateLast, RouterModule_encodeQueryString, RouterModule_encodeParts, RouterModule_urlSegments } from \"./fable_modules/Feliz.Router.3.8.0/Router.fs.js\";\nimport { Cmd_none } from \"./fable_modules/Fable.Elmish.3.1.0/cmd.fs.js\";\nimport { createElement } from \"react\";\nimport * as react from \"react\";\nimport { equals, createObj } from \"./fable_modules/fable-library.3.7.18/Util.js\";\nimport { Helpers_combineClasses } from \"./fable_modules/Feliz.DaisyUI.2.1.0/DaisyUI.fs.js\";\nimport { append as append_1, ofArray, singleton } from \"./fable_modules/fable-library.3.7.18/List.js\";\nimport { Interop_reactApi } from \"./fable_modules/Feliz.1.68.0/Interop.fs.js\";\nimport { op_PlusPlus } from \"./fable_modules/Feliz.DaisyUI.2.1.0/Operators.fs.js\";\nimport { empty, singleton as singleton_1, append, delay, toList } from \"./fable_modules/fable-library.3.7.18/Seq.js\";\nimport { map, defaultArgWith } from \"./fable_modules/fable-library.3.7.18/Option.js\";\nimport { UseView } from \"./Pages/Use.js\";\nimport { BorderRadiusView } from \"./Pages/BorderRadius.js\";\nimport { InstallView } from \"./Pages/Install.js\";\n\nexport class Msg extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"UrlChanged\", \"SetTheme\"];\n    }\n}\n\nexport function Msg$reflection() {\n    return union_type(\"Docs.View.Msg\", [], Msg, () => [[[\"Item\", Page$reflection()]], [[\"Item\", string_type]]]);\n}\n\nexport class State extends Record {\n    constructor(Page, Theme) {\n        super();\n        this.Page = Page;\n        this.Theme = Theme;\n    }\n}\n\nexport function State$reflection() {\n    return record_type(\"Docs.View.State\", [], State, () => [[\"Page\", Page$reflection()], [\"Theme\", string_type]]);\n}\n\nexport function init() {\n    const nextPage = PageModule_parseFromUrlSegments(RouterModule_urlSegments(window.location.hash, 1));\n    return [new State(nextPage, \"halloween\"), Cmd_navigatePage(nextPage)];\n}\n\nexport function update(msg, state) {\n    if (msg.tag === 1) {\n        return [new State(state.Page, msg.fields[0]), Cmd_none()];\n    }\n    else {\n        return [new State(msg.fields[0], state.Theme), Cmd_none()];\n    }\n}\n\nfunction rightSide(state, dispatch, title, docLink, elm) {\n    let children_2, children, arg_1, elems_2, elements, arg_6;\n    const children_4 = ofArray([(children_2 = singleton((children = singleton((arg_1 = singleton(createElement(\"label\", createObj(Helpers_combineClasses(\"btn\", ofArray([[\"className\", \"btn-square\"], [\"className\", \"btn-ghost\"], [\"htmlFor\", \"main-menu\"], (elems_2 = [createElement(\"svg\", createObj(ofArray([[\"viewBox\", (((((0 + \" \") + 0) + \" \") + 24) + \" \") + 24], [\"className\", \"inline-block w-6 h-6 stroke-current\"], (elements = singleton(createElement(\"path\", {\n        d: \"M4 6h16M4 12h16M4 18h16\",\n        strokeWidth: 2,\n    })), [\"children\", Interop_reactApi.Children.toArray(Array.from(elements))])])))], [\"children\", Interop_reactApi.Children.toArray(Array.from(elems_2))])]))))), createElement(\"div\", {\n        className: \"lg:hidden\",\n        children: Interop_reactApi.Children.toArray(Array.from(arg_1)),\n    }))), createElement(\"div\", {\n        className: \"navbar-start\",\n        children: Interop_reactApi.Children.toArray(Array.from(children)),\n    }))), createElement(\"div\", {\n        className: \"navbar\",\n        children: Interop_reactApi.Children.toArray(Array.from(children_2)),\n    })), (arg_6 = ofArray([createElement(\"h2\", createObj(ofArray([op_PlusPlus([\"className\", \"text-primary\"], [\"className\", \"my-6 text-5xl font-bold\"]), [\"children\", title]]))), elm]), createElement(\"div\", {\n        className: \"px-5 py-5\",\n        children: Interop_reactApi.Children.toArray(Array.from(arg_6)),\n    }))]);\n    return createElement(\"div\", {\n        className: \"drawer-content\",\n        children: Interop_reactApi.Children.toArray(Array.from(children_4)),\n    });\n}\n\nfunction leftSide(p) {\n    let elems_5, arg_5, elems_2, elems_4, children_4;\n    const mi = (t_1, mp_1) => {\n        const children_2 = singleton(createElement(\"a\", createObj(toList(delay(() => append(equals(p, mp_1) ? singleton_1([\"className\", \"active\"]) : empty(), delay(() => append(singleton_1([\"children\", t_1]), delay(() => {\n            let tupledArg_2, queryString_1;\n            return append(singleton_1([\"href\", (tupledArg_2 = PageModule_toUrlSegments(mp_1), (queryString_1 = tupledArg_2[1], defaultArgWith(map((tupledArg_3) => RouterModule_encodeParts(append_1(tupledArg_3[0], singleton(tupledArg_3[1] + RouterModule_encodeQueryString(queryString_1))), 1), RouterModule_trySeparateLast(tupledArg_2[0])), () => RouterModule_encodeParts(singleton(RouterModule_encodeQueryString(queryString_1)), 1))))]), delay(() => singleton_1([\"onClick\", (e_1) => {\n                Router_goToUrl(e_1);\n            }])));\n        })))))))));\n        return createElement(\"li\", {\n            children: Interop_reactApi.Children.toArray(Array.from(children_2)),\n        });\n    };\n    const children_6 = ofArray([createElement(\"label\", createObj(Helpers_combineClasses(\"drawer-overlay\", singleton([\"htmlFor\", \"main-menu\"])))), createElement(\"aside\", createObj(ofArray([[\"className\", \"flex flex-col border-r w-80 bg-base-100 text-base-content\"], (elems_5 = [(arg_5 = ofArray([createElement(\"span\", {\n        className: \"text-primary\",\n        children: \"Feliz.Tailwind\",\n    }), createElement(\"a\", createObj(ofArray([[\"href\", \"https://www.nuget.org/packages/Feliz.Tailwind\"], (elems_2 = [createElement(\"img\", {\n        src: \"https://img.shields.io/nuget/v/Feliz.Tailwind.svg?style=flat-square\",\n    })], [\"children\", Interop_reactApi.Children.toArray(Array.from(elems_2))])])))]), createElement(\"div\", {\n        className: \"inline-block text-3xl font-title px-5 py-5 font-bold\",\n        children: Interop_reactApi.Children.toArray(Array.from(arg_5)),\n    })), createElement(\"ul\", createObj(Helpers_combineClasses(\"menu\", ofArray([[\"className\", \"menu-compact\"], [\"className\", \"flex flex-col p-4 pt-0\"], (elems_4 = [(children_4 = singleton(createElement(\"span\", {\n        children: [\"Docs\"],\n    })), createElement(\"li\", {\n        className: \"menu-title\",\n        children: Interop_reactApi.Children.toArray(Array.from(children_4)),\n    })), mi(\"Install\", new Page(0)), mi(\"Use\", new Page(1)), mi(\"BorderRadius\", new Page(2))], [\"children\", Interop_reactApi.Children.toArray(Array.from(elems_4))])]))))], [\"children\", Interop_reactApi.Children.toArray(Array.from(elems_5))])])))]);\n    return createElement(\"div\", {\n        className: \"drawer-side\",\n        children: Interop_reactApi.Children.toArray(Array.from(children_6)),\n    });\n}\n\nfunction inLayout(state, dispatch, title, docLink, p, elm) {\n    let elems_1, elems;\n    return createElement(\"div\", createObj(ofArray([[\"className\", \"bg-base-100 text-base-content h-screen\"], [\"data-theme\", state.Theme], (elems_1 = [createElement(\"div\", createObj(Helpers_combineClasses(\"drawer\", ofArray([[\"className\", \"drawer-mobile\"], (elems = [createElement(\"input\", createObj(Helpers_combineClasses(\"drawer-toggle\", ofArray([[\"type\", \"checkbox\"], [\"id\", \"main-menu\"]])))), rightSide(state, dispatch, title, docLink, elm), leftSide(p)], [\"children\", Interop_reactApi.Children.toArray(Array.from(elems))])]))))], [\"children\", Interop_reactApi.Children.toArray(Array.from(elems_1))])])));\n}\n\nexport function AppView(appViewInputProps) {\n    let elements;\n    const dispatch = appViewInputProps.dispatch;\n    const state = appViewInputProps.state;\n    let patternInput;\n    const matchValue = state.Page;\n    switch (matchValue.tag) {\n        case 1: {\n            patternInput = [\"How to use\", \"/docs/use\", createElement(UseView, null)];\n            break;\n        }\n        case 2: {\n            patternInput = [\"BorderRadius\", \"/docs/use\", createElement(BorderRadiusView, null)];\n            break;\n        }\n        default: {\n            patternInput = [\"Installation\", \"/docs/install\", createElement(InstallView, null)];\n        }\n    }\n    return RouterModule_router(createObj(ofArray([[\"hashMode\", 1], [\"onUrlChanged\", (arg_2) => {\n        dispatch(new Msg(0, PageModule_parseFromUrlSegments(arg_2)));\n    }], (elements = singleton(inLayout(state, dispatch, patternInput[0], patternInput[1], state.Page, patternInput[2])), [\"application\", react.createElement(react.Fragment, {}, ...elements)])])));\n}\n\n","import { join } from \"../fable-library.3.7.18/String.js\";\nimport { ofArray, choose } from \"../fable-library.3.7.18/List.js\";\nimport { toString } from \"../fable-library.3.7.18/Types.js\";\n\nexport function op_PlusPlus(prop1, prop2) {\n    return [\"className\", join(\" \", choose((arg) => {\n        const _arg = arg;\n        if (_arg[0] === \"className\") {\n            return toString(_arg[1]);\n        }\n        else {\n            return void 0;\n        }\n    }, ofArray([prop1, prop2])))];\n}\n\n","import { ProgramModule_view, ProgramModule_withSetState } from \"../Fable.Elmish.3.1.0/program.fs.js\";\nimport * as react_dom from \"react-dom\";\nimport { Common_lazyView2With } from \"./common.fs.js\";\nimport { uncurry } from \"../fable-library.3.7.18/Util.js\";\n\nexport function Program_Internal_withReactBatchedUsing(lazyView2With, placeholderId, program) {\n    let lastRequest = void 0;\n    return ProgramModule_withSetState((model, dispatch) => {\n        if (lastRequest != null) {\n            const r = lastRequest;\n            window.cancelAnimationFrame(r);\n        }\n        lastRequest = window.requestAnimationFrame((_arg) => {\n            react_dom.render(lazyView2With((x) => ((y) => (x === y)), ProgramModule_view(program), model, dispatch), document.getElementById(placeholderId));\n        });\n    }, program);\n}\n\nexport function Program_Internal_withReactSynchronousUsing(lazyView2With, placeholderId, program) {\n    return ProgramModule_withSetState((model, dispatch) => {\n        react_dom.render(lazyView2With((x) => ((y) => (x === y)), ProgramModule_view(program), model, dispatch), document.getElementById(placeholderId));\n    }, program);\n}\n\nexport function Program_Internal_withReactHydrateUsing(lazyView2With, placeholderId, program) {\n    return ProgramModule_withSetState((model, dispatch) => {\n        react_dom.hydrate(lazyView2With((x) => ((y) => (x === y)), ProgramModule_view(program), model, dispatch), document.getElementById(placeholderId));\n    }, program);\n}\n\nexport function Program_withReactBatched(placeholderId, program) {\n    return Program_Internal_withReactBatchedUsing((equal, view, state, dispatch) => Common_lazyView2With(uncurry(2, equal), uncurry(2, view), state, dispatch), placeholderId, program);\n}\n\nexport function Program_withReactSynchronous(placeholderId, program) {\n    return Program_Internal_withReactSynchronousUsing((equal, view, state, dispatch) => Common_lazyView2With(uncurry(2, equal), uncurry(2, view), state, dispatch), placeholderId, program);\n}\n\nexport function Program_withReact(placeholderId, program) {\n    return Program_Internal_withReactBatchedUsing((equal, view, state, dispatch) => Common_lazyView2With(uncurry(2, equal), uncurry(2, view), state, dispatch), placeholderId, program);\n}\n\nexport function Program_withReactUnoptimized(placeholderId, program) {\n    return Program_Internal_withReactSynchronousUsing((equal, view, state, dispatch) => Common_lazyView2With(uncurry(2, equal), uncurry(2, view), state, dispatch), placeholderId, program);\n}\n\nexport function Program_withReactHydrate(placeholderId, program) {\n    return Program_Internal_withReactHydrateUsing((equal, view, state, dispatch) => Common_lazyView2With(uncurry(2, equal), uncurry(2, view), state, dispatch), placeholderId, program);\n}\n\n","import { ProgramModule_mkProgram, ProgramModule_run } from \"./fable_modules/Fable.Elmish.3.1.0/program.fs.js\";\nimport { Program_withReactSynchronous } from \"./fable_modules/Fable.Elmish.React.3.0.1/react.fs.js\";\nimport { AppView, update, init } from \"./View.js\";\nimport { createElement } from \"react\";\n\nProgramModule_run(Program_withReactSynchronous(\"safer-app\", ProgramModule_mkProgram(init, update, (state_1, dispatch) => createElement(AppView, {\n    state: state_1,\n    dispatch: dispatch,\n}))));\n\n","import { some } from \"../fable-library.3.7.18/Option.js\";\nimport Timer from \"../fable-library.3.7.18/Timer.js\";\nimport { add } from \"../fable-library.3.7.18/Observable.js\";\n\nexport function Log_onError(text, ex) {\n    console.error(some(text), ex);\n}\n\nexport function Log_toConsole(text, o) {\n    console.log(some(text), o);\n}\n\nexport function Timer_delay(interval, callback) {\n    let t;\n    let returnVal = new Timer(interval);\n    returnVal.AutoReset = false;\n    t = returnVal;\n    add(callback, t.Elapsed());\n    t.Enabled = true;\n    t.Start();\n}\n\n"],"names":["x","Array","isArray","ArrayBuffer","isView","Dispose","sameConstructor","y","_a","_b","Object","getPrototypeOf","constructor","Enumerator","iter","this","current","cur","next","value","done","Error","o","GetEnumerator","Symbol","iterator","en","hasNext","undefined","padWithZeros","i","length","str","toString","date","date1","offset","kind","getTimezoneOffset","int32ToString","radix","ObjectRef","static","idMap","has","set","count","get","numberHash","combineHashCodes","hashes","reduce","h1","h2","structuralHash","s","h","len","charCodeAt","stringHash","GetHashCode","isHashable","arrayHash","Date","getTime","dateHash","values","map","v","id","eq","equalArraysWith","Equals","isEquatable","xKeys","keys","yKeys","sort","equalObjects","xtime","ytime","compareArrays","comp","j","compareArraysWith","compare","CompareTo","isComparable","key","compareObjects","max","comparer","fields","obj","kv","WeakMap","CURRIED","arity","f","uncurried","args","res","_curry","arg","concat","callStack","self","seqToString","cons","entries","k","join","name","String","Union","cases","tag","toJSON","fieldStr","withParens","indexOf","unionToString","splice","other","Record","recordToJSON","recordToString","recordGetHashCode","thisNames","recordEquals","result","recordCompareTo","dateOffsetToString","isMinus","minutes","Math","abs","dateToHalfUTCString","half","toISOString","substring","dateToStringWithCustomFormat","format","utc","replace","match","rep","Number","NaN","getUTCFullYear","getFullYear","getUTCMonth","getMonth","getUTCDate","getDate","getUTCHours","getHours","getUTCMinutes","getMinutes","getUTCSeconds","getSeconds","getUTCMilliseconds","getMilliseconds","isNaN","symbol","sd","toPrecision","dp","toExponential","toHex","fsFormatRegExp","input","cont","lastIndex","strParts","matches","strIdx","exec","matchIndex","index","push","createPrinter","continuePrint","formatReplacement","flags","padLength","precision","sign","toLowerCase","isLessThan","multiply","parseInt","toFixed","toUpperCase","_provider","_c","d","dateWithOffset","dateToISOStringWithOffset","dateToStringWithOffset","toUTCString","toLocaleString","toLocaleDateString","toLocaleTimeString","printOffset","dateToISOString","dateToStringWithKind","zeroFlag","minusFlag","ch","pad","_strParts","_matches","_result","padArg","slice","_padLength","delimiter","xs","from","isRight","splitters","options","removeEmpty","trim","filter","splits","reg","RegExp","findSplits","candidate","startIndex","substr","Some","opt","defaultValue","defThunk","mapping","head","tail","super","xs_1_mut","ys_1_mut","loop","xs_1","ys_1","matchValue","xt","yt","i_mut","h_mut","t","_key","c","ListEnumerator$1","it","__","FSharpList_get_Empty","FSharpList_Cons_305B8EAC","FSharpList__get_IsEmpty","FSharpList__get_Head","FSharpList__get_Tail","empty","isEmpty","fold","folder","state","acc","reverse","action","unitVar","tail_1","ofArrayWithTail","ys","root","node","t_2","choose","Cmd_exec","onError","dispatch","cmd","call","ex","equals","array1","array2","length1","length2","Enumerator_notStarted","Enumerator_alreadyFinished","Enumerator_Seq","e","Enumerator_FromFunctions$1","dispose","Enumerator_noReset","Enumerator_FromFunctions$1_$ctor_58C54629","Enumerator_generateWhileSome","openf","compute","closef","curr","started","x_1","finish","matchValue_1","mkSeq","Enumerator_Seq_$ctor_673A07F2","argName","Operators_NullArg","generator","sources","outerOpt","innerOpt","finished","inner","outer","copyOfStruct","inner_1","outer_1","Enumerator_concat","ar","Helpers_allocateArrayFromCons","xs_3","enumerator","xs_5","ofSeq","generateIndexed","create","e_1","CachedSeq$1","cleanup","getEnumerator","toIterator","source","_","Enumerator_enumerateThenFinally","integralRangeStep","start","step","stop","zero","add","stepFn","stepComparedWithZero","stepGreaterThanZero","comparedWithLast","makeRangeStepFunction","st_1","Enumerator_unfold","RingState$1","RingBuffer$1","size","target","fill","targetIndex","RingBuffer$1__Pop","wix","rix","items","rix$0027","Program$4","init","update","subscribe","view","setState","syncDispatch","ProgramModule_runWith","program","patternInput","model","rb","reentered","msg","item","wix_1","items_1","wix$0027","ix","RingBuffer$1__Push_2B595","nextMsg","msg_1","patternInput_1","model$0027","ex_1","ex_3","lists","forEach","xs_6","ex_2","LazyProps$1","render","equal","Components_LazyView$1","Component","props","shouldComponentUpdate","nextProps","_nextState","React_createDisposable_3A5B6456","useReact_useEffect_Z5ECA432F","effect","getDisposable","useEffect","disposable","useReact_useMemo_CF4EA67","createFunction","dependencies","arg_1","useReact_useCallbackRef_7C4B0DD6","callback","lastRenderCallbackRef","initialValue","callbackRef","callbackFunction","useReact_useCallback_93353E","_arg","useLayoutEffect","Impl_allowsPassiveEvents","window","addEventListener","passive","removeEventListener","value_1","Impl_adjustPassive","maybeOptions","capture","once","Impl_createRemoveOptions","binder","RouterModule_String_$007CPrefix$007C","prefix","RouterModule_String_$007CSuffix$007C","suffix","search","idx","lastIndexOf","endsWith","queryStringPairs","tupledArg","encodeURIComponent","RouterModule_encodeParts","routeMode","activePatternResult","path","activePatternResult_1","path_1","activePatternResult_2","path_2","_arg_1","activePatternResult_3","path_4","RouterModule_normalizeRoute","part","mode","history","pushState","replaceState","ev","document","createEvent","initEvent","dispatchEvent","RouterModule_urlSegments","zs","collect","segment","test","segment_1","chars","trimEnd","split","y_1","decodeURIComponent","value_2","query","RouterModule_router","renderElement","areEqual","withKey","memoElementType","name_1","displayName","props_2","Internal_propsWithKey","Internal_memo_Z603636D8","onChange","urlChanged","onUrlChanged","location","pathname","hash","RouterModule_onUrlChange","hashMode","navigator","eventType","action_1","options_1","addOptions","removeOptions","fn","options_1_1","options_2","eventType_1","action_3","options_4","addOptions_1","removeOptions_1","fn_1","arg_2","options_1_2","options_2_1","eventType_2","action_4","options_5","addOptions_2","removeOptions_2","fn_2","arg_3","options_1_3","options_2_2","application","Page","PageModule_defaultPage","PageModule_parseFromUrlSegments","pattern_matching_result","PageModule_noQueryString","segments","PageModule_toUrlSegments","Cmd_navigatePage","p","sub","queryString_1","tupledArg_1","cn","classes","Helpers_extractClasses","linedMockupCode","code","children","l","createElement","elems","className","codedView","title","example","arg_5","arg_7","UseView","xs_4","ex1","BorderRadiusView","InstallView","elems_2","arg_8","children_2","elems_6","xs_8","Msg","State","Theme","rightSide","docLink","elm","elements","arg_6","children_4","strokeWidth","prop1","prop2","leftSide","elems_5","elems_4","mi","t_1","mp_1","tupledArg_2","tupledArg_3","preventDefault","currentTarget","attributes","href","children_6","src","inLayout","elems_1","AppView","appViewInputProps","ProgramModule_run","state_1","nextPage","f1","text","console","error","lazyView2With","placeholderId","getElementById","Program_Internal_withReactSynchronousUsing"],"sourceRoot":""}